// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_ADD_SU_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        z0_tmp_bits_read,
        z0_digits_data_address0,
        z0_digits_data_ce0,
        z0_digits_data_q0,
        z2_tmp_bits_read,
        z2_digits_data_address0,
        z2_digits_data_ce0,
        z2_digits_data_q0,
        cross_mul_tmp_bits_read,
        cross_mul_digits_data_address0,
        cross_mul_digits_data_ce0,
        cross_mul_digits_data_q0,
        lhs_tmp_bits_read,
        lhs_digits_data_address0,
        lhs_digits_data_ce0,
        lhs_digits_data_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_address0,
        rhs_digits_data_ce0,
        rhs_digits_data_q0,
        res_tmp_bits,
        res_tmp_bits_ap_vld,
        res_digits_data_address0,
        res_digits_data_ce0,
        res_digits_data_we0,
        res_digits_data_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_pp0_stage1 = 20'd4;
parameter    ap_ST_fsm_state5 = 20'd8;
parameter    ap_ST_fsm_pp1_stage0 = 20'd16;
parameter    ap_ST_fsm_state9 = 20'd32;
parameter    ap_ST_fsm_state10 = 20'd64;
parameter    ap_ST_fsm_pp2_stage0 = 20'd128;
parameter    ap_ST_fsm_pp2_stage1 = 20'd256;
parameter    ap_ST_fsm_state15 = 20'd512;
parameter    ap_ST_fsm_pp3_stage0 = 20'd1024;
parameter    ap_ST_fsm_pp3_stage1 = 20'd2048;
parameter    ap_ST_fsm_state20 = 20'd4096;
parameter    ap_ST_fsm_state21 = 20'd8192;
parameter    ap_ST_fsm_state22 = 20'd16384;
parameter    ap_ST_fsm_state23 = 20'd32768;
parameter    ap_ST_fsm_state24 = 20'd65536;
parameter    ap_ST_fsm_state25 = 20'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 20'd262144;
parameter    ap_ST_fsm_state29 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] z0_tmp_bits_read;
output  [3:0] z0_digits_data_address0;
output   z0_digits_data_ce0;
input  [31:0] z0_digits_data_q0;
input  [31:0] z2_tmp_bits_read;
output  [3:0] z2_digits_data_address0;
output   z2_digits_data_ce0;
input  [31:0] z2_digits_data_q0;
input  [31:0] cross_mul_tmp_bits_read;
output  [3:0] cross_mul_digits_data_address0;
output   cross_mul_digits_data_ce0;
input  [31:0] cross_mul_digits_data_q0;
input  [31:0] lhs_tmp_bits_read;
output  [3:0] lhs_digits_data_address0;
output   lhs_digits_data_ce0;
input  [31:0] lhs_digits_data_q0;
input  [31:0] rhs_tmp_bits_read;
output  [3:0] rhs_digits_data_address0;
output   rhs_digits_data_ce0;
input  [31:0] rhs_digits_data_q0;
output  [31:0] res_tmp_bits;
output   res_tmp_bits_ap_vld;
output  [4:0] res_digits_data_address0;
output   res_digits_data_ce0;
output   res_digits_data_we0;
output  [31:0] res_digits_data_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] z0_digits_data_address0;
reg z0_digits_data_ce0;
reg[3:0] z2_digits_data_address0;
reg z2_digits_data_ce0;
reg cross_mul_digits_data_ce0;
reg lhs_digits_data_ce0;
reg rhs_digits_data_ce0;
reg res_tmp_bits_ap_vld;
reg res_digits_data_ce0;
reg res_digits_data_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] tmp_0_i_reg_278;
reg   [4:0] i_0_i_reg_290;
reg   [0:0] needDown_0_i_reg_301;
reg   [4:0] i_0_i11_reg_313;
reg   [1:0] tmp_0_reg_324;
reg   [4:0] i_0_reg_336;
reg   [5:0] j_0_reg_347;
reg   [1:0] tmp2_0_reg_371;
reg   [4:0] i3_0_reg_383;
reg   [5:0] j4_0_reg_394;
reg   [5:0] i5_0_reg_415;
wire   [31:0] p_res_digits_data_q0;
reg   [31:0] reg_437;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state12_pp2_stage1_iter0;
wire    ap_block_state14_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln338_reg_943;
wire    ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state17_pp3_stage1_iter0;
wire    ap_block_state19_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln352_reg_998;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state26_pp4_stage0_iter0;
wire    ap_block_state27_pp4_stage0_iter1;
wire    ap_block_state28_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln364_reg_1058;
reg    ap_block_state1;
wire   [0:0] icmp_ln54_fu_442_p2;
reg   [0:0] icmp_ln54_reg_855;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] i_32_fu_448_p2;
reg   [4:0] i_32_reg_859;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln59_fu_454_p1;
reg   [63:0] zext_ln59_reg_864;
reg   [31:0] z2_digits_data_load_reg_879;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [32:0] add_ln59_fu_472_p2;
reg   [32:0] add_ln59_reg_884;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] add2_tmp_bits_fu_522_p2;
reg   [31:0] add2_tmp_bits_reg_894;
wire    ap_CS_fsm_state5;
wire   [0:0] exitcond_i_fu_527_p2;
reg   [0:0] exitcond_i_reg_899;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_899_pp1_iter1_reg;
wire   [4:0] i_33_fu_533_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln81_fu_539_p1;
reg   [63:0] zext_ln81_reg_908;
reg   [63:0] zext_ln81_reg_908_pp1_iter1_reg;
wire   [32:0] tmp_16_fu_553_p2;
reg   [32:0] tmp_16_reg_923;
reg    ap_enable_reg_pp1_iter2;
wire   [31:0] z1_tmp_bits_fu_611_p2;
reg   [31:0] z1_tmp_bits_reg_934;
wire    ap_CS_fsm_state9;
wire   [0:0] icmp_ln334_fu_617_p2;
reg   [0:0] icmp_ln334_reg_939;
wire    ap_CS_fsm_state10;
wire    grp_CAT_I_I_I_O_2_fu_426_ap_ready;
wire    grp_CAT_I_I_I_O_2_fu_426_ap_done;
wire   [0:0] icmp_ln338_fu_622_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state11_pp2_stage0_iter0;
wire    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln338_reg_943_pp2_iter1_reg;
wire   [4:0] i_fu_628_p2;
reg   [4:0] i_reg_947;
reg   [4:0] p_res_digits_data_add_reg_957;
reg   [4:0] p_res_digits_data_add_reg_957_pp2_iter1_reg;
reg   [31:0] lhs_digits_data_load_reg_962;
wire   [5:0] j_fu_644_p2;
reg   [5:0] j_reg_968;
wire   [32:0] tmp_22_fu_661_p2;
reg   [32:0] tmp_22_reg_973;
wire   [31:0] add_ln343_fu_673_p2;
reg   [31:0] add_ln343_reg_978;
reg    ap_enable_reg_pp2_iter1;
wire   [2:0] zext_ln348_fu_701_p1;
reg   [2:0] zext_ln348_reg_988;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln348_fu_705_p2;
reg   [0:0] icmp_ln348_reg_994;
wire   [0:0] icmp_ln352_fu_710_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state16_pp3_stage0_iter0;
wire    ap_block_state18_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln352_reg_998_pp3_iter1_reg;
wire   [4:0] i_34_fu_716_p2;
reg   [4:0] i_34_reg_1002;
reg   [4:0] p_res_digits_data_add_1_reg_1012;
reg   [4:0] p_res_digits_data_add_1_reg_1012_pp3_iter1_reg;
reg   [31:0] rhs_digits_data_load_reg_1017;
wire   [5:0] j_4_fu_732_p2;
reg   [5:0] j_4_reg_1023;
wire   [32:0] tmp_23_fu_749_p2;
reg   [32:0] tmp_23_reg_1028;
wire   [31:0] add_ln357_fu_761_p2;
reg   [31:0] add_ln357_reg_1033;
reg    ap_enable_reg_pp3_iter1;
wire   [2:0] p_res_tmp_bits_fu_793_p2;
wire    ap_CS_fsm_state20;
wire   [31:0] grp_fu_798_p2;
reg   [31:0] mul_ln362_reg_1048;
wire    ap_CS_fsm_state24;
wire   [31:0] p_res_tmp_bits_2_fu_806_p2;
reg   [31:0] p_res_tmp_bits_2_reg_1053;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln364_fu_811_p2;
reg   [0:0] icmp_ln364_reg_1058_pp4_iter1_reg;
wire   [5:0] i_35_fu_817_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] zext_ln367_fu_823_p1;
reg   [63:0] zext_ln367_reg_1067;
reg   [63:0] zext_ln367_reg_1067_pp4_iter1_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state11;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state16;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state26;
reg    ap_enable_reg_pp4_iter2;
reg   [3:0] add2_digits_data_address0;
reg    add2_digits_data_ce0;
reg    add2_digits_data_we0;
wire   [31:0] add2_digits_data_d0;
wire   [31:0] add2_digits_data_q0;
reg   [3:0] z1_digits_data_address0;
reg    z1_digits_data_ce0;
reg    z1_digits_data_we0;
wire   [31:0] z1_digits_data_d0;
wire   [31:0] z1_digits_data_q0;
reg   [4:0] p_res_digits_data_address0;
reg    p_res_digits_data_ce0;
reg    p_res_digits_data_we0;
reg   [31:0] p_res_digits_data_d0;
wire    grp_CAT_I_I_I_O_2_fu_426_ap_start;
wire    grp_CAT_I_I_I_O_2_fu_426_ap_idle;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_ce0;
wire   [4:0] grp_CAT_I_I_I_O_2_fu_426_w_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_426_w_digits_data_ce0;
wire    grp_CAT_I_I_I_O_2_fu_426_w_digits_data_we0;
wire   [31:0] grp_CAT_I_I_I_O_2_fu_426_w_digits_data_d0;
wire    ap_block_pp0_stage0;
reg   [4:0] ap_phi_mux_i_0_i_phi_fu_294_p4;
reg   [4:0] ap_phi_mux_i_0_phi_fu_340_p4;
wire    ap_block_pp2_stage0;
reg   [5:0] ap_phi_mux_j_0_phi_fu_351_p4;
reg   [1:0] ap_phi_mux_p_res_tmp_bits_0_phi_fu_363_p4;
reg   [1:0] p_res_tmp_bits_0_reg_359;
reg   [4:0] ap_phi_mux_i3_0_phi_fu_387_p4;
wire    ap_block_pp3_stage0;
reg   [5:0] ap_phi_mux_j4_0_phi_fu_398_p4;
reg   [2:0] p_res_tmp_bits_1_reg_406;
reg    grp_CAT_I_I_I_O_2_fu_426_ap_start_reg;
wire    ap_block_pp0_stage1;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln341_1_fu_634_p1;
wire   [63:0] zext_ln342_fu_639_p1;
wire   [63:0] zext_ln355_1_fu_722_p1;
wire   [63:0] zext_ln356_fu_727_p1;
wire    ap_block_pp4_stage0;
wire    ap_CS_fsm_state29;
wire    ap_block_pp2_stage1;
wire    ap_block_pp3_stage1;
wire   [32:0] zext_ln60_fu_464_p1;
wire   [32:0] zext_ln54_fu_460_p1;
wire   [31:0] zext_ln59_15_fu_468_p1;
wire   [31:0] add_ln61_8_fu_478_p2;
wire   [33:0] zext_ln59_16_fu_494_p1;
wire   [33:0] zext_ln59_14_fu_491_p1;
wire   [33:0] tmp_15_fu_497_p2;
wire   [31:0] zext_ln64_fu_513_p1;
wire   [31:0] add_ln64_fu_517_p2;
wire   [32:0] zext_ln81_2_fu_545_p1;
wire   [32:0] zext_ln82_fu_549_p1;
wire   [32:0] select_ln83_fu_559_p3;
wire   [32:0] tmp_17_fu_578_p2;
wire   [31:0] trunc_ln83_fu_575_p1;
wire   [31:0] select_ln83_2_fu_567_p3;
wire   [31:0] p_neg2_i_fu_598_p3;
wire   [31:0] add_ln96_fu_606_p2;
wire  signed [31:0] icmp_ln334_fu_617_p0;
wire   [32:0] zext_ln341_fu_654_p1;
wire   [32:0] zext_ln338_fu_650_p1;
wire   [31:0] zext_ln341_3_fu_657_p1;
wire   [31:0] add_ln343_1_fu_667_p2;
wire   [33:0] zext_ln341_4_fu_682_p1;
wire   [33:0] zext_ln341_2_fu_678_p1;
wire   [33:0] tmp_fu_685_p2;
wire  signed [31:0] icmp_ln348_fu_705_p0;
wire   [32:0] zext_ln355_fu_742_p1;
wire   [32:0] zext_ln352_fu_738_p1;
wire   [31:0] zext_ln355_3_fu_745_p1;
wire   [31:0] add_ln357_1_fu_755_p2;
wire   [33:0] zext_ln355_4_fu_770_p1;
wire   [33:0] zext_ln355_2_fu_766_p1;
wire   [33:0] tmp_21_fu_773_p2;
wire   [2:0] zext_ln360_fu_789_p1;
wire   [31:0] zext_ln362_fu_802_p1;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 grp_CAT_I_I_I_O_2_fu_426_ap_start_reg = 1'b0;
end

karastuba_mul_MULmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
add2_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_address0),
    .ce0(add2_digits_data_ce0),
    .we0(add2_digits_data_we0),
    .d0(add2_digits_data_d0),
    .q0(add2_digits_data_q0)
);

karastuba_mul_MULmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_address0),
    .ce0(z1_digits_data_ce0),
    .we0(z1_digits_data_we0),
    .d0(z1_digits_data_d0),
    .q0(z1_digits_data_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
p_res_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_res_digits_data_address0),
    .ce0(p_res_digits_data_ce0),
    .we0(p_res_digits_data_we0),
    .d0(p_res_digits_data_d0),
    .q0(p_res_digits_data_q0)
);

CAT_I_I_I_O_2 grp_CAT_I_I_I_O_2_fu_426(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_2_fu_426_ap_start),
    .ap_done(grp_CAT_I_I_I_O_2_fu_426_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_2_fu_426_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_2_fu_426_ap_ready),
    .x0_digits_data_address0(grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_address0),
    .x0_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_ce0),
    .x0_digits_data_q0(z0_digits_data_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_934),
    .x1_digits_data_address0(grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_address0),
    .x1_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_ce0),
    .x1_digits_data_q0(z1_digits_data_q0),
    .x2_digits_data_address0(grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_address0),
    .x2_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_ce0),
    .x2_digits_data_q0(z2_digits_data_q0),
    .w_digits_data_address0(grp_CAT_I_I_I_O_2_fu_426_w_digits_data_address0),
    .w_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_426_w_digits_data_ce0),
    .w_digits_data_we0(grp_CAT_I_I_I_O_2_fu_426_w_digits_data_we0),
    .w_digits_data_d0(grp_CAT_I_I_I_O_2_fu_426_w_digits_data_d0),
    .w_digits_data_q0(p_res_digits_data_q0)
);

karastuba_mul_mulsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
karastuba_mul_mulsc4_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lhs_tmp_bits_read),
    .din1(rhs_tmp_bits_read),
    .ce(1'b1),
    .dout(grp_fu_798_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state29)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state26)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_2_fu_426_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_CAT_I_I_I_O_2_fu_426_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_2_fu_426_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_2_fu_426_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
        i3_0_reg_383 <= 5'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_998 == 1'd0))) begin
        i3_0_reg_383 <= i_34_reg_1002;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_fu_811_p2 == 1'd0))) begin
        i5_0_reg_415 <= i_35_fu_817_p2;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        i5_0_reg_415 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_i11_reg_313 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_527_p2 == 1'd0))) begin
        i_0_i11_reg_313 <= i_33_fu_533_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_290 <= 5'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_reg_855 == 1'd0))) begin
        i_0_i_reg_290 <= i_32_reg_859;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
        i_0_reg_336 <= 5'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_943 == 1'd0))) begin
        i_0_reg_336 <= i_reg_947;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
        j4_0_reg_394 <= 6'd16;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_998 == 1'd0))) begin
        j4_0_reg_394 <= j_4_reg_1023;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
        j_0_reg_347 <= 6'd16;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_943 == 1'd0))) begin
        j_0_reg_347 <= j_reg_968;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        needDown_0_i_reg_301 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_i_reg_899_pp1_iter1_reg == 1'd0))) begin
        needDown_0_i_reg_301 <= tmp_17_fu_578_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln334_reg_939 == 1'd0))) begin
        p_res_tmp_bits_0_reg_359 <= tmp_0_reg_324;
    end else if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (icmp_ln334_fu_617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        p_res_tmp_bits_0_reg_359 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (icmp_ln348_reg_994 == 1'd0))) begin
        p_res_tmp_bits_1_reg_406 <= p_res_tmp_bits_fu_793_p2;
    end else if (((icmp_ln348_fu_705_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        p_res_tmp_bits_1_reg_406 <= zext_ln348_fu_701_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
        tmp2_0_reg_371 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_998_pp3_iter1_reg == 1'd0))) begin
        tmp2_0_reg_371 <= {{tmp_21_fu_773_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        tmp_0_i_reg_278 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_reg_855 == 1'd0))) begin
        tmp_0_i_reg_278 <= {{tmp_15_fu_497_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
        tmp_0_reg_324 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_943_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        tmp_0_reg_324 <= {{tmp_fu_685_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        add2_tmp_bits_reg_894 <= add2_tmp_bits_fu_522_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_943 == 1'd0))) begin
        add_ln343_reg_978 <= add_ln343_fu_673_p2;
        tmp_22_reg_973 <= tmp_22_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_998 == 1'd0))) begin
        add_ln357_reg_1033 <= add_ln357_fu_761_p2;
        tmp_23_reg_1028 <= tmp_23_fu_749_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln54_reg_855 == 1'd0))) begin
        add_ln59_reg_884 <= add_ln59_fu_472_p2;
        z2_digits_data_load_reg_879 <= z2_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_899 <= exitcond_i_fu_527_p2;
        exitcond_i_reg_899_pp1_iter1_reg <= exitcond_i_reg_899;
        zext_ln81_reg_908_pp1_iter1_reg[4 : 0] <= zext_ln81_reg_908[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_32_reg_859 <= i_32_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        i_34_reg_1002 <= i_34_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_reg_947 <= i_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln334_reg_939 <= icmp_ln334_fu_617_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln338_reg_943 <= icmp_ln338_fu_622_p2;
        icmp_ln338_reg_943_pp2_iter1_reg <= icmp_ln338_reg_943;
        p_res_digits_data_add_reg_957_pp2_iter1_reg <= p_res_digits_data_add_reg_957;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln348_reg_994 <= icmp_ln348_fu_705_p2;
        zext_ln348_reg_988[1 : 0] <= zext_ln348_fu_701_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln352_reg_998 <= icmp_ln352_fu_710_p2;
        icmp_ln352_reg_998_pp3_iter1_reg <= icmp_ln352_reg_998;
        p_res_digits_data_add_1_reg_1012_pp3_iter1_reg <= p_res_digits_data_add_1_reg_1012;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln364_reg_1058 <= icmp_ln364_fu_811_p2;
        icmp_ln364_reg_1058_pp4_iter1_reg <= icmp_ln364_reg_1058;
        zext_ln367_reg_1067_pp4_iter1_reg[5 : 0] <= zext_ln367_reg_1067[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln54_reg_855 <= icmp_ln54_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_998 == 1'd0))) begin
        j_4_reg_1023 <= j_4_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_943 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        j_reg_968 <= j_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_943 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        lhs_digits_data_load_reg_962 <= lhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        mul_ln362_reg_1048 <= grp_fu_798_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_fu_710_p2 == 1'd0))) begin
        p_res_digits_data_add_1_reg_1012 <= zext_ln356_fu_727_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_fu_622_p2 == 1'd0))) begin
        p_res_digits_data_add_reg_957 <= zext_ln342_fu_639_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        p_res_tmp_bits_2_reg_1053 <= p_res_tmp_bits_2_fu_806_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_reg_1058 == 1'd0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_998 == 1'd0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_943 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        reg_437 <= p_res_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_998 == 1'd0))) begin
        rhs_digits_data_load_reg_1017 <= rhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_899 == 1'd0))) begin
        tmp_16_reg_923 <= tmp_16_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        z1_tmp_bits_reg_934 <= z1_tmp_bits_fu_611_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_fu_811_p2 == 1'd0))) begin
        zext_ln367_reg_1067[5 : 0] <= zext_ln367_fu_823_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_fu_442_p2 == 1'd0))) begin
        zext_ln59_reg_864[4 : 0] <= zext_ln59_fu_454_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_527_p2 == 1'd0))) begin
        zext_ln81_reg_908[4 : 0] <= zext_ln81_fu_539_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_address0 = zext_ln81_fu_539_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        add2_digits_data_address0 = zext_ln59_reg_864;
    end else begin
        add2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        add2_digits_data_ce0 = 1'b1;
    end else begin
        add2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_reg_855 == 1'd0))) begin
        add2_digits_data_we0 = 1'b1;
    end else begin
        add2_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_442_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_527_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln338_fu_622_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln352_fu_710_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln364_fu_811_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_998 == 1'd0))) begin
        ap_phi_mux_i3_0_phi_fu_387_p4 = i_34_reg_1002;
    end else begin
        ap_phi_mux_i3_0_phi_fu_387_p4 = i3_0_reg_383;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln54_reg_855 == 1'd0))) begin
        ap_phi_mux_i_0_i_phi_fu_294_p4 = i_32_reg_859;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_294_p4 = i_0_i_reg_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_943 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_340_p4 = i_reg_947;
    end else begin
        ap_phi_mux_i_0_phi_fu_340_p4 = i_0_reg_336;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_998 == 1'd0))) begin
        ap_phi_mux_j4_0_phi_fu_398_p4 = j_4_reg_1023;
    end else begin
        ap_phi_mux_j4_0_phi_fu_398_p4 = j4_0_reg_394;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_943 == 1'd0))) begin
        ap_phi_mux_j_0_phi_fu_351_p4 = j_reg_968;
    end else begin
        ap_phi_mux_j_0_phi_fu_351_p4 = j_0_reg_347;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln334_reg_939 == 1'd0))) begin
        ap_phi_mux_p_res_tmp_bits_0_phi_fu_363_p4 = tmp_0_reg_324;
    end else begin
        ap_phi_mux_p_res_tmp_bits_0_phi_fu_363_p4 = p_res_tmp_bits_0_reg_359;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_data_ce0 = 1'b1;
    end else begin
        cross_mul_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        lhs_digits_data_ce0 = 1'b1;
    end else begin
        lhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_res_digits_data_address0 = zext_ln367_fu_823_p1;
    end else if (((1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        p_res_digits_data_address0 = p_res_digits_data_add_1_reg_1012_pp3_iter1_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        p_res_digits_data_address0 = zext_ln356_fu_727_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        p_res_digits_data_address0 = p_res_digits_data_add_reg_957_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        p_res_digits_data_address0 = zext_ln342_fu_639_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_res_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_426_w_digits_data_address0;
    end else begin
        p_res_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        p_res_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_res_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_426_w_digits_data_ce0;
    end else begin
        p_res_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        p_res_digits_data_d0 = add_ln357_reg_1033;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        p_res_digits_data_d0 = add_ln343_reg_978;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_res_digits_data_d0 = grp_CAT_I_I_I_O_2_fu_426_w_digits_data_d0;
    end else begin
        p_res_digits_data_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_998_pp3_iter1_reg == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_943_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        p_res_digits_data_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_res_digits_data_we0 = grp_CAT_I_I_I_O_2_fu_426_w_digits_data_we0;
    end else begin
        p_res_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        res_digits_data_ce0 = 1'b1;
    end else begin
        res_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_reg_1058_pp4_iter1_reg == 1'd0))) begin
        res_digits_data_we0 = 1'b1;
    end else begin
        res_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        res_tmp_bits_ap_vld = 1'b1;
    end else begin
        res_tmp_bits_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        rhs_digits_data_ce0 = 1'b1;
    end else begin
        rhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_address0 = zext_ln59_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_address0;
    end else begin
        z0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_426_x0_digits_data_ce0;
    end else begin
        z0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        z1_digits_data_address0 = zext_ln81_reg_908_pp1_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z1_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_address0;
    end else begin
        z1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        z1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z1_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_426_x1_digits_data_ce0;
    end else begin
        z1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_i_reg_899_pp1_iter1_reg == 1'd0))) begin
        z1_digits_data_we0 = 1'b1;
    end else begin
        z1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_address0 = zext_ln59_fu_454_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_address0;
    end else begin
        z2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z2_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_426_x2_digits_data_ce0;
    end else begin
        z2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_442_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_442_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i_fu_527_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i_fu_527_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln334_fu_617_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_2_fu_426_ap_done == 1'b1) & (icmp_ln334_fu_617_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln338_fu_622_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln338_fu_622_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln348_fu_705_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln352_fu_710_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln352_fu_710_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((~((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b0)) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln364_fu_811_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln364_fu_811_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_digits_data_d0 = (add_ln61_8_fu_478_p2 + z0_digits_data_q0);

assign add2_tmp_bits_fu_522_p2 = (add_ln64_fu_517_p2 + z2_tmp_bits_read);

assign add_ln343_1_fu_667_p2 = (reg_437 + zext_ln341_3_fu_657_p1);

assign add_ln343_fu_673_p2 = (add_ln343_1_fu_667_p2 + lhs_digits_data_load_reg_962);

assign add_ln357_1_fu_755_p2 = (reg_437 + zext_ln355_3_fu_745_p1);

assign add_ln357_fu_761_p2 = (add_ln357_1_fu_755_p2 + rhs_digits_data_load_reg_1017);

assign add_ln59_fu_472_p2 = (zext_ln60_fu_464_p1 + zext_ln54_fu_460_p1);

assign add_ln61_8_fu_478_p2 = (z2_digits_data_q0 + zext_ln59_15_fu_468_p1);

assign add_ln64_fu_517_p2 = (zext_ln64_fu_513_p1 + z0_tmp_bits_read);

assign add_ln96_fu_606_p2 = (cross_mul_tmp_bits_read + p_neg2_i_fu_598_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state11_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign cross_mul_digits_data_address0 = zext_ln81_fu_539_p1;

assign exitcond_i_fu_527_p2 = ((i_0_i11_reg_313 == 5'd16) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_2_fu_426_ap_start = grp_CAT_I_I_I_O_2_fu_426_ap_start_reg;

assign i_32_fu_448_p2 = (ap_phi_mux_i_0_i_phi_fu_294_p4 + 5'd1);

assign i_33_fu_533_p2 = (i_0_i11_reg_313 + 5'd1);

assign i_34_fu_716_p2 = (ap_phi_mux_i3_0_phi_fu_387_p4 + 5'd1);

assign i_35_fu_817_p2 = (i5_0_reg_415 + 6'd1);

assign i_fu_628_p2 = (ap_phi_mux_i_0_phi_fu_340_p4 + 5'd1);

assign icmp_ln334_fu_617_p0 = rhs_tmp_bits_read;

assign icmp_ln334_fu_617_p2 = ((icmp_ln334_fu_617_p0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_622_p2 = ((ap_phi_mux_i_0_phi_fu_340_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_705_p0 = lhs_tmp_bits_read;

assign icmp_ln348_fu_705_p2 = ((icmp_ln348_fu_705_p0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_710_p2 = ((ap_phi_mux_i3_0_phi_fu_387_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_811_p2 = ((i5_0_reg_415 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_442_p2 = ((ap_phi_mux_i_0_i_phi_fu_294_p4 == 5'd16) ? 1'b1 : 1'b0);

assign j_4_fu_732_p2 = (j4_0_reg_394 + 6'd1);

assign j_fu_644_p2 = (j_0_reg_347 + 6'd1);

assign lhs_digits_data_address0 = zext_ln341_1_fu_634_p1;

assign p_neg2_i_fu_598_p3 = ((needDown_0_i_reg_301[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_res_tmp_bits_2_fu_806_p2 = (mul_ln362_reg_1048 + zext_ln362_fu_802_p1);

assign p_res_tmp_bits_fu_793_p2 = (zext_ln348_reg_988 + zext_ln360_fu_789_p1);

assign res_digits_data_address0 = zext_ln367_reg_1067_pp4_iter1_reg;

assign res_digits_data_d0 = reg_437;

assign res_tmp_bits = p_res_tmp_bits_2_reg_1053;

assign rhs_digits_data_address0 = zext_ln355_1_fu_722_p1;

assign select_ln83_2_fu_567_p3 = ((needDown_0_i_reg_301[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln83_fu_559_p3 = ((needDown_0_i_reg_301[0:0] === 1'b1) ? 33'd8589934591 : 33'd0);

assign tmp_15_fu_497_p2 = (zext_ln59_16_fu_494_p1 + zext_ln59_14_fu_491_p1);

assign tmp_16_fu_553_p2 = (zext_ln81_2_fu_545_p1 - zext_ln82_fu_549_p1);

assign tmp_17_fu_578_p2 = (select_ln83_fu_559_p3 + tmp_16_reg_923);

assign tmp_21_fu_773_p2 = (zext_ln355_4_fu_770_p1 + zext_ln355_2_fu_766_p1);

assign tmp_22_fu_661_p2 = (zext_ln341_fu_654_p1 + zext_ln338_fu_650_p1);

assign tmp_23_fu_749_p2 = (zext_ln355_fu_742_p1 + zext_ln352_fu_738_p1);

assign tmp_fu_685_p2 = (zext_ln341_4_fu_682_p1 + zext_ln341_2_fu_678_p1);

assign trunc_ln83_fu_575_p1 = tmp_16_reg_923[31:0];

assign z1_digits_data_d0 = (trunc_ln83_fu_575_p1 + select_ln83_2_fu_567_p3);

assign z1_tmp_bits_fu_611_p2 = (add_ln96_fu_606_p2 - add2_tmp_bits_reg_894);

assign zext_ln338_fu_650_p1 = tmp_0_reg_324;

assign zext_ln341_1_fu_634_p1 = ap_phi_mux_i_0_phi_fu_340_p4;

assign zext_ln341_2_fu_678_p1 = reg_437;

assign zext_ln341_3_fu_657_p1 = tmp_0_reg_324;

assign zext_ln341_4_fu_682_p1 = tmp_22_reg_973;

assign zext_ln341_fu_654_p1 = lhs_digits_data_load_reg_962;

assign zext_ln342_fu_639_p1 = ap_phi_mux_j_0_phi_fu_351_p4;

assign zext_ln348_fu_701_p1 = ap_phi_mux_p_res_tmp_bits_0_phi_fu_363_p4;

assign zext_ln352_fu_738_p1 = tmp2_0_reg_371;

assign zext_ln355_1_fu_722_p1 = ap_phi_mux_i3_0_phi_fu_387_p4;

assign zext_ln355_2_fu_766_p1 = reg_437;

assign zext_ln355_3_fu_745_p1 = tmp2_0_reg_371;

assign zext_ln355_4_fu_770_p1 = tmp_23_reg_1028;

assign zext_ln355_fu_742_p1 = rhs_digits_data_load_reg_1017;

assign zext_ln356_fu_727_p1 = ap_phi_mux_j4_0_phi_fu_398_p4;

assign zext_ln360_fu_789_p1 = tmp2_0_reg_371;

assign zext_ln362_fu_802_p1 = p_res_tmp_bits_1_reg_406;

assign zext_ln367_fu_823_p1 = i5_0_reg_415;

assign zext_ln54_fu_460_p1 = tmp_0_i_reg_278;

assign zext_ln59_14_fu_491_p1 = z2_digits_data_load_reg_879;

assign zext_ln59_15_fu_468_p1 = tmp_0_i_reg_278;

assign zext_ln59_16_fu_494_p1 = add_ln59_reg_884;

assign zext_ln59_fu_454_p1 = ap_phi_mux_i_0_i_phi_fu_294_p4;

assign zext_ln60_fu_464_p1 = z0_digits_data_q0;

assign zext_ln64_fu_513_p1 = tmp_0_i_reg_278;

assign zext_ln81_2_fu_545_p1 = cross_mul_digits_data_q0;

assign zext_ln81_fu_539_p1 = i_0_i11_reg_313;

assign zext_ln82_fu_549_p1 = add2_digits_data_q0;

always @ (posedge ap_clk) begin
    zext_ln59_reg_864[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_908[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_908_pp1_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln348_reg_988[2] <= 1'b0;
    zext_ln367_reg_1067[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln367_reg_1067_pp4_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //karastuba_mul_ADD_SU_2
