// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_ADD_SU_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        z0_tmp_bits_read,
        z0_digits_data_V_address0,
        z0_digits_data_V_ce0,
        z0_digits_data_V_q0,
        z2_tmp_bits_read,
        z2_digits_data_V_address0,
        z2_digits_data_V_ce0,
        z2_digits_data_V_q0,
        cross_mul_tmp_bits_read,
        cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_q0,
        lhs_tmp_bits_read,
        lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0,
        res_tmp_bits,
        res_tmp_bits_ap_vld,
        res_digits_data_V_address0,
        res_digits_data_V_ce0,
        res_digits_data_V_we0,
        res_digits_data_V_d0
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_pp0_stage0 = 20'd2;
parameter    ap_ST_fsm_pp0_stage1 = 20'd4;
parameter    ap_ST_fsm_state6 = 20'd8;
parameter    ap_ST_fsm_pp1_stage0 = 20'd16;
parameter    ap_ST_fsm_state12 = 20'd32;
parameter    ap_ST_fsm_state13 = 20'd64;
parameter    ap_ST_fsm_pp2_stage0 = 20'd128;
parameter    ap_ST_fsm_pp2_stage1 = 20'd256;
parameter    ap_ST_fsm_state18 = 20'd512;
parameter    ap_ST_fsm_pp3_stage0 = 20'd1024;
parameter    ap_ST_fsm_pp3_stage1 = 20'd2048;
parameter    ap_ST_fsm_state23 = 20'd4096;
parameter    ap_ST_fsm_state24 = 20'd8192;
parameter    ap_ST_fsm_state25 = 20'd16384;
parameter    ap_ST_fsm_state26 = 20'd32768;
parameter    ap_ST_fsm_state27 = 20'd65536;
parameter    ap_ST_fsm_state28 = 20'd131072;
parameter    ap_ST_fsm_pp4_stage0 = 20'd262144;
parameter    ap_ST_fsm_state32 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] z0_tmp_bits_read;
output  [4:0] z0_digits_data_V_address0;
output   z0_digits_data_V_ce0;
input  [63:0] z0_digits_data_V_q0;
input  [31:0] z2_tmp_bits_read;
output  [4:0] z2_digits_data_V_address0;
output   z2_digits_data_V_ce0;
input  [63:0] z2_digits_data_V_q0;
input  [31:0] cross_mul_tmp_bits_read;
output  [4:0] cross_mul_digits_data_V_address0;
output   cross_mul_digits_data_V_ce0;
input  [63:0] cross_mul_digits_data_V_q0;
input  [31:0] lhs_tmp_bits_read;
output  [4:0] lhs_digits_data_V_address0;
output   lhs_digits_data_V_ce0;
input  [63:0] lhs_digits_data_V_q0;
input  [31:0] rhs_tmp_bits_read;
output  [4:0] rhs_digits_data_V_address0;
output   rhs_digits_data_V_ce0;
input  [63:0] rhs_digits_data_V_q0;
output  [31:0] res_tmp_bits;
output   res_tmp_bits_ap_vld;
output  [5:0] res_digits_data_V_address0;
output   res_digits_data_V_ce0;
output   res_digits_data_V_we0;
output  [63:0] res_digits_data_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] z0_digits_data_V_address0;
reg z0_digits_data_V_ce0;
reg[4:0] z2_digits_data_V_address0;
reg z2_digits_data_V_ce0;
reg cross_mul_digits_data_V_ce0;
reg lhs_digits_data_V_ce0;
reg rhs_digits_data_V_ce0;
reg res_tmp_bits_ap_vld;
reg res_digits_data_V_ce0;
reg res_digits_data_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] p_088_0_i_reg_280;
reg   [5:0] i_0_i_reg_292;
reg   [0:0] op2_assign_reg_303;
reg   [5:0] i_0_i11_reg_315;
reg   [1:0] p_0106_0_reg_326;
reg   [5:0] i_0_reg_338;
reg   [6:0] j_0_reg_349;
reg   [1:0] p_0103_0_reg_373;
reg   [5:0] i3_0_reg_385;
reg   [6:0] j4_0_reg_396;
reg   [6:0] i5_0_reg_417;
wire   [63:0] p_res_digits_data_V_q0;
reg   [63:0] reg_439;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state15_pp2_stage1_iter0;
wire    ap_block_state17_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln338_reg_965;
wire    ap_CS_fsm_pp3_stage1;
reg    ap_enable_reg_pp3_iter0;
wire    ap_block_state20_pp3_stage1_iter0;
wire    ap_block_state22_pp3_stage1_iter1;
wire    ap_block_pp3_stage1_11001;
reg   [0:0] icmp_ln352_reg_1020;
wire    ap_CS_fsm_pp4_stage0;
reg    ap_enable_reg_pp4_iter1;
wire    ap_block_state29_pp4_stage0_iter0;
wire    ap_block_state30_pp4_stage0_iter1;
wire    ap_block_state31_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln364_reg_1080;
reg    ap_block_state1;
wire   [0:0] icmp_ln54_fu_444_p2;
reg   [0:0] icmp_ln54_reg_850;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln54_reg_850_pp0_iter1_reg;
wire   [5:0] i_27_fu_450_p2;
reg   [5:0] i_27_reg_854;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln59_fu_456_p1;
reg   [63:0] zext_ln59_reg_859;
reg   [63:0] zext_ln59_reg_859_pp0_iter1_reg;
reg   [63:0] z0_digits_data_V_loa_reg_874;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [63:0] z2_digits_data_V_loa_reg_880;
wire   [64:0] add_ln700_fu_473_p2;
reg   [64:0] add_ln700_reg_886;
wire   [63:0] add_ln209_6_fu_484_p2;
reg   [63:0] add_ln209_6_reg_891;
reg    ap_enable_reg_pp0_iter1;
wire   [31:0] add2_tmp_bits_fu_520_p2;
reg   [31:0] add2_tmp_bits_reg_901;
wire    ap_CS_fsm_state6;
wire   [0:0] exitcond_i_fu_525_p2;
reg   [0:0] exitcond_i_reg_906;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state8_pp1_stage0_iter1;
wire    ap_block_state9_pp1_stage0_iter2;
wire    ap_block_state10_pp1_stage0_iter3;
wire    ap_block_state11_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_906_pp1_iter1_reg;
reg   [0:0] exitcond_i_reg_906_pp1_iter2_reg;
reg   [0:0] exitcond_i_reg_906_pp1_iter3_reg;
wire   [5:0] i_28_fu_531_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln81_fu_537_p1;
reg   [63:0] zext_ln81_reg_915;
reg   [63:0] zext_ln81_reg_915_pp1_iter1_reg;
reg   [63:0] zext_ln81_reg_915_pp1_iter2_reg;
reg   [63:0] zext_ln81_reg_915_pp1_iter3_reg;
reg   [63:0] cross_mul_digits_dat_4_reg_930;
wire   [63:0] add2_digits_data_V_q0;
reg   [63:0] add2_digits_data_V_l_reg_935;
reg    ap_enable_reg_pp1_iter1;
wire   [64:0] tmp_V_18_fu_549_p2;
reg   [64:0] tmp_V_18_reg_940;
reg   [0:0] tmp_3_reg_946;
reg    ap_enable_reg_pp1_iter3;
wire   [63:0] add_ln700_21_fu_587_p2;
reg   [63:0] add_ln700_21_reg_951;
wire   [31:0] z1_tmp_bits_fu_606_p2;
reg   [31:0] z1_tmp_bits_reg_956;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln334_fu_612_p2;
reg   [0:0] icmp_ln334_reg_961;
wire    ap_CS_fsm_state13;
wire    grp_CAT_I_I_I_O_1_fu_428_ap_ready;
wire    grp_CAT_I_I_I_O_1_fu_428_ap_done;
wire   [0:0] icmp_ln338_fu_617_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state14_pp2_stage0_iter0;
wire    ap_block_state16_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln338_reg_965_pp2_iter1_reg;
wire   [5:0] i_fu_623_p2;
reg   [5:0] i_reg_969;
reg   [5:0] p_res_digits_data_V_a_reg_979;
reg   [5:0] p_res_digits_data_V_a_reg_979_pp2_iter1_reg;
reg   [63:0] lhs_digits_data_V_lo_reg_984;
wire   [6:0] j_fu_639_p2;
reg   [6:0] j_reg_990;
wire   [64:0] tmp_V_23_fu_656_p2;
reg   [64:0] tmp_V_23_reg_995;
wire   [63:0] add_ln209_fu_668_p2;
reg   [63:0] add_ln209_reg_1000;
reg    ap_enable_reg_pp2_iter1;
wire   [2:0] zext_ln348_fu_696_p1;
reg   [2:0] zext_ln348_reg_1010;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln348_fu_700_p2;
reg   [0:0] icmp_ln348_reg_1016;
wire   [0:0] icmp_ln352_fu_705_p2;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state19_pp3_stage0_iter0;
wire    ap_block_state21_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
reg   [0:0] icmp_ln352_reg_1020_pp3_iter1_reg;
wire   [5:0] i_29_fu_711_p2;
reg   [5:0] i_29_reg_1024;
reg   [5:0] p_res_digits_data_V_a_3_reg_1034;
reg   [5:0] p_res_digits_data_V_a_3_reg_1034_pp3_iter1_reg;
reg   [63:0] rhs_digits_data_V_lo_reg_1039;
wire   [6:0] j_5_fu_727_p2;
reg   [6:0] j_5_reg_1045;
wire   [64:0] tmp_V_24_fu_744_p2;
reg   [64:0] tmp_V_24_reg_1050;
wire   [63:0] add_ln209_5_fu_756_p2;
reg   [63:0] add_ln209_5_reg_1055;
reg    ap_enable_reg_pp3_iter1;
wire   [2:0] p_res_tmp_bits_fu_788_p2;
wire    ap_CS_fsm_state23;
wire   [31:0] grp_fu_793_p2;
reg   [31:0] mul_ln362_reg_1070;
wire    ap_CS_fsm_state27;
wire   [31:0] p_res_tmp_bits_3_fu_801_p2;
reg   [31:0] p_res_tmp_bits_3_reg_1075;
wire    ap_CS_fsm_state28;
wire   [0:0] icmp_ln364_fu_806_p2;
reg   [0:0] icmp_ln364_reg_1080_pp4_iter1_reg;
wire   [6:0] i_30_fu_812_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] zext_ln367_fu_818_p1;
reg   [63:0] zext_ln367_reg_1089;
reg   [63:0] zext_ln367_reg_1089_pp4_iter1_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state14;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state19;
wire    ap_block_pp3_stage1_subdone;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state29;
reg    ap_enable_reg_pp4_iter2;
reg   [4:0] add2_digits_data_V_address0;
reg    add2_digits_data_V_ce0;
reg    add2_digits_data_V_we0;
reg   [4:0] z1_digits_data_V_address0;
reg    z1_digits_data_V_ce0;
reg    z1_digits_data_V_we0;
wire   [63:0] z1_digits_data_V_q0;
reg   [5:0] p_res_digits_data_V_address0;
reg    p_res_digits_data_V_ce0;
reg    p_res_digits_data_V_we0;
reg   [63:0] p_res_digits_data_V_d0;
wire    grp_CAT_I_I_I_O_1_fu_428_ap_start;
wire    grp_CAT_I_I_I_O_1_fu_428_ap_idle;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_ce0;
wire   [5:0] grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_ce0;
wire    grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_we0;
wire   [63:0] grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_d0;
reg   [5:0] ap_phi_mux_i_0_i_phi_fu_296_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_op2_assign_phi_fu_307_p4;
wire    ap_block_pp1_stage0;
reg   [5:0] ap_phi_mux_i_0_phi_fu_342_p4;
wire    ap_block_pp2_stage0;
reg   [6:0] ap_phi_mux_j_0_phi_fu_353_p4;
reg   [1:0] ap_phi_mux_p_res_tmp_bits_0_phi_fu_365_p4;
reg   [1:0] p_res_tmp_bits_0_reg_361;
reg   [5:0] ap_phi_mux_i3_0_phi_fu_389_p4;
wire    ap_block_pp3_stage0;
reg   [6:0] ap_phi_mux_j4_0_phi_fu_400_p4;
reg   [2:0] p_res_tmp_bits_1_reg_408;
reg    grp_CAT_I_I_I_O_1_fu_428_ap_start_reg;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln341_fu_629_p1;
wire   [63:0] zext_ln342_fu_634_p1;
wire   [63:0] zext_ln355_fu_717_p1;
wire   [63:0] zext_ln356_fu_722_p1;
wire    ap_block_pp4_stage0;
wire    ap_CS_fsm_state32;
wire    ap_block_pp2_stage1;
wire    ap_block_pp3_stage1;
wire   [64:0] zext_ln209_fu_466_p1;
wire   [64:0] zext_ln54_fu_462_p1;
wire   [63:0] zext_ln700_26_fu_469_p1;
wire   [63:0] add_ln209_14_fu_479_p2;
wire   [65:0] zext_ln700_27_fu_492_p1;
wire   [65:0] zext_ln700_fu_489_p1;
wire   [65:0] tmp_V_17_fu_495_p2;
wire   [31:0] zext_ln64_fu_511_p1;
wire   [31:0] add_ln64_fu_515_p2;
wire   [64:0] zext_ln180_fu_543_p1;
wire   [64:0] zext_ln701_fu_546_p1;
wire   [64:0] select_ln701_fu_555_p3;
wire   [64:0] tmp_V_19_fu_574_p2;
wire   [63:0] trunc_ln701_fu_571_p1;
wire   [63:0] select_ln701_2_fu_563_p3;
wire   [31:0] p_neg207_i_fu_593_p3;
wire   [31:0] add_ln96_fu_601_p2;
wire  signed [31:0] icmp_ln334_fu_612_p0;
wire   [64:0] zext_ln700_28_fu_649_p1;
wire   [64:0] zext_ln338_fu_645_p1;
wire   [63:0] zext_ln700_30_fu_652_p1;
wire   [63:0] add_ln209_15_fu_662_p2;
wire   [65:0] zext_ln700_31_fu_677_p1;
wire   [65:0] zext_ln700_29_fu_673_p1;
wire   [65:0] tmp_V_fu_680_p2;
wire  signed [31:0] icmp_ln348_fu_700_p0;
wire   [64:0] zext_ln700_32_fu_737_p1;
wire   [64:0] zext_ln352_fu_733_p1;
wire   [63:0] zext_ln700_34_fu_740_p1;
wire   [63:0] add_ln209_16_fu_750_p2;
wire   [65:0] zext_ln700_35_fu_765_p1;
wire   [65:0] zext_ln700_33_fu_761_p1;
wire   [65:0] tmp_V_22_fu_768_p2;
wire   [2:0] zext_ln360_fu_784_p1;
wire   [31:0] zext_ln362_fu_797_p1;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 grp_CAT_I_I_I_O_1_fu_428_ap_start_reg = 1'b0;
end

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
add2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_V_address0),
    .ce0(add2_digits_data_V_ce0),
    .we0(add2_digits_data_V_we0),
    .d0(add_ln209_6_reg_891),
    .q0(add2_digits_data_V_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_V_address0),
    .ce0(z1_digits_data_V_ce0),
    .we0(z1_digits_data_V_we0),
    .d0(add_ln700_21_reg_951),
    .q0(z1_digits_data_V_q0)
);

karastuba_mul_ADDNgs #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_res_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_res_digits_data_V_address0),
    .ce0(p_res_digits_data_V_ce0),
    .we0(p_res_digits_data_V_we0),
    .d0(p_res_digits_data_V_d0),
    .q0(p_res_digits_data_V_q0)
);

CAT_I_I_I_O_1 grp_CAT_I_I_I_O_1_fu_428(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_1_fu_428_ap_start),
    .ap_done(grp_CAT_I_I_I_O_1_fu_428_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_1_fu_428_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_1_fu_428_ap_ready),
    .x0_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_address0),
    .x0_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_ce0),
    .x0_digits_data_V_q0(z0_digits_data_V_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_956),
    .x1_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_address0),
    .x1_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_ce0),
    .x1_digits_data_V_q0(z1_digits_data_V_q0),
    .x2_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_address0),
    .x2_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_ce0),
    .x2_digits_data_V_q0(z2_digits_data_V_q0),
    .w_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_d0),
    .w_digits_data_V_q0(p_res_digits_data_V_q0)
);

karastuba_mul_mulsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
karastuba_mul_mulsc4_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(lhs_tmp_bits_read),
    .din1(rhs_tmp_bits_read),
    .ce(1'b1),
    .dout(grp_fu_793_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state7)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage1_subdone) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state29) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state29)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state29);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if ((1'b1 == ap_CS_fsm_state28)) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_1_fu_428_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_CAT_I_I_I_O_1_fu_428_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_1_fu_428_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_1_fu_428_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
        i3_0_reg_385 <= 6'd0;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_1020 == 1'd0))) begin
        i3_0_reg_385 <= i_29_reg_1024;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_fu_806_p2 == 1'd0))) begin
        i5_0_reg_417 <= i_30_fu_812_p2;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        i5_0_reg_417 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_0_i11_reg_315 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_525_p2 == 1'd0))) begin
        i_0_i11_reg_315 <= i_28_fu_531_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_i_reg_292 <= 6'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_reg_850 == 1'd0))) begin
        i_0_i_reg_292 <= i_27_reg_854;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
        i_0_reg_338 <= 6'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_965 == 1'd0))) begin
        i_0_reg_338 <= i_reg_969;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
        j4_0_reg_396 <= 7'd32;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_1020 == 1'd0))) begin
        j4_0_reg_396 <= j_5_reg_1045;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
        j_0_reg_349 <= 7'd32;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_965 == 1'd0))) begin
        j_0_reg_349 <= j_reg_990;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        op2_assign_reg_303 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_906_pp1_iter3_reg == 1'd0))) begin
        op2_assign_reg_303 <= tmp_3_reg_946;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
        p_0103_0_reg_373 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_1020_pp3_iter1_reg == 1'd0))) begin
        p_0103_0_reg_373 <= {{tmp_V_22_fu_768_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
        p_0106_0_reg_326 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_965_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        p_0106_0_reg_326 <= {{tmp_V_fu_680_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_088_0_i_reg_280 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln54_reg_850_pp0_iter1_reg == 1'd0))) begin
        p_088_0_i_reg_280 <= {{tmp_V_17_fu_495_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln334_reg_961 == 1'd0))) begin
        p_res_tmp_bits_0_reg_361 <= p_0106_0_reg_326;
    end else if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (icmp_ln334_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        p_res_tmp_bits_0_reg_361 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) & (icmp_ln348_reg_1016 == 1'd0))) begin
        p_res_tmp_bits_1_reg_408 <= p_res_tmp_bits_fu_788_p2;
    end else if (((icmp_ln348_fu_700_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state18))) begin
        p_res_tmp_bits_1_reg_408 <= zext_ln348_fu_696_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_906 == 1'd0))) begin
        add2_digits_data_V_l_reg_935 <= add2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        add2_tmp_bits_reg_901 <= add2_tmp_bits_fu_520_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_1020 == 1'd0))) begin
        add_ln209_5_reg_1055 <= add_ln209_5_fu_756_p2;
        tmp_V_24_reg_1050 <= tmp_V_24_fu_744_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_reg_850 == 1'd0))) begin
        add_ln209_6_reg_891 <= add_ln209_6_fu_484_p2;
        add_ln700_reg_886 <= add_ln700_fu_473_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_965 == 1'd0))) begin
        add_ln209_reg_1000 <= add_ln209_fu_668_p2;
        tmp_V_23_reg_995 <= tmp_V_23_fu_656_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_906_pp1_iter2_reg == 1'd0))) begin
        add_ln700_21_reg_951 <= add_ln700_21_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_906 == 1'd0))) begin
        cross_mul_digits_dat_4_reg_930 <= cross_mul_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_906 <= exitcond_i_fu_525_p2;
        exitcond_i_reg_906_pp1_iter1_reg <= exitcond_i_reg_906;
        zext_ln81_reg_915_pp1_iter1_reg[5 : 0] <= zext_ln81_reg_915[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_reg_906_pp1_iter2_reg <= exitcond_i_reg_906_pp1_iter1_reg;
        exitcond_i_reg_906_pp1_iter3_reg <= exitcond_i_reg_906_pp1_iter2_reg;
        zext_ln81_reg_915_pp1_iter2_reg[5 : 0] <= zext_ln81_reg_915_pp1_iter1_reg[5 : 0];
        zext_ln81_reg_915_pp1_iter3_reg[5 : 0] <= zext_ln81_reg_915_pp1_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_27_reg_854 <= i_27_fu_450_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        i_29_reg_1024 <= i_29_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_reg_969 <= i_fu_623_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        icmp_ln334_reg_961 <= icmp_ln334_fu_612_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln338_reg_965 <= icmp_ln338_fu_617_p2;
        icmp_ln338_reg_965_pp2_iter1_reg <= icmp_ln338_reg_965;
        p_res_digits_data_V_a_reg_979_pp2_iter1_reg <= p_res_digits_data_V_a_reg_979;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        icmp_ln348_reg_1016 <= icmp_ln348_fu_700_p2;
        zext_ln348_reg_1010[1 : 0] <= zext_ln348_fu_696_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        icmp_ln352_reg_1020 <= icmp_ln352_fu_705_p2;
        icmp_ln352_reg_1020_pp3_iter1_reg <= icmp_ln352_reg_1020;
        p_res_digits_data_V_a_3_reg_1034_pp3_iter1_reg <= p_res_digits_data_V_a_3_reg_1034;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        icmp_ln364_reg_1080 <= icmp_ln364_fu_806_p2;
        icmp_ln364_reg_1080_pp4_iter1_reg <= icmp_ln364_reg_1080;
        zext_ln367_reg_1089_pp4_iter1_reg[6 : 0] <= zext_ln367_reg_1089[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln54_reg_850 <= icmp_ln54_fu_444_p2;
        icmp_ln54_reg_850_pp0_iter1_reg <= icmp_ln54_reg_850;
        zext_ln59_reg_859_pp0_iter1_reg[5 : 0] <= zext_ln59_reg_859[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_1020 == 1'd0))) begin
        j_5_reg_1045 <= j_5_fu_727_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_965 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        j_reg_990 <= j_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_965 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        lhs_digits_data_V_lo_reg_984 <= lhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        mul_ln362_reg_1070 <= grp_fu_793_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_fu_705_p2 == 1'd0))) begin
        p_res_digits_data_V_a_3_reg_1034 <= zext_ln356_fu_722_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_fu_617_p2 == 1'd0))) begin
        p_res_digits_data_V_a_reg_979 <= zext_ln342_fu_634_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        p_res_tmp_bits_3_reg_1075 <= p_res_tmp_bits_3_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp4_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_reg_1080 == 1'd0)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_1020 == 1'd0)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_965 == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        reg_439 <= p_res_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_1020 == 1'd0))) begin
        rhs_digits_data_V_lo_reg_1039 <= rhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_i_reg_906_pp1_iter2_reg == 1'd0))) begin
        tmp_3_reg_946 <= tmp_V_19_fu_574_p2[32'd64];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_906_pp1_iter1_reg == 1'd0))) begin
        tmp_V_18_reg_940 <= tmp_V_18_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln54_reg_850 == 1'd0))) begin
        z0_digits_data_V_loa_reg_874 <= z0_digits_data_V_q0;
        z2_digits_data_V_loa_reg_880 <= z2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        z1_tmp_bits_reg_956 <= z1_tmp_bits_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_fu_806_p2 == 1'd0))) begin
        zext_ln367_reg_1089[6 : 0] <= zext_ln367_fu_818_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln54_fu_444_p2 == 1'd0))) begin
        zext_ln59_reg_859[5 : 0] <= zext_ln59_fu_456_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_525_p2 == 1'd0))) begin
        zext_ln81_reg_915[5 : 0] <= zext_ln81_fu_537_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_V_address0 = zext_ln81_fu_537_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add2_digits_data_V_address0 = zext_ln59_reg_859_pp0_iter1_reg;
    end else begin
        add2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        add2_digits_data_V_ce0 = 1'b1;
    end else begin
        add2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln54_reg_850_pp0_iter1_reg == 1'd0))) begin
        add2_digits_data_V_we0 = 1'b1;
    end else begin
        add2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln54_fu_444_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_525_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln338_fu_617_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln352_fu_705_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln364_fu_806_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state29 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state29 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_1020 == 1'd0))) begin
        ap_phi_mux_i3_0_phi_fu_389_p4 = i_29_reg_1024;
    end else begin
        ap_phi_mux_i3_0_phi_fu_389_p4 = i3_0_reg_385;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln54_reg_850 == 1'd0))) begin
        ap_phi_mux_i_0_i_phi_fu_296_p4 = i_27_reg_854;
    end else begin
        ap_phi_mux_i_0_i_phi_fu_296_p4 = i_0_i_reg_292;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_965 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_342_p4 = i_reg_969;
    end else begin
        ap_phi_mux_i_0_phi_fu_342_p4 = i_0_reg_338;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln352_reg_1020 == 1'd0))) begin
        ap_phi_mux_j4_0_phi_fu_400_p4 = j_5_reg_1045;
    end else begin
        ap_phi_mux_j4_0_phi_fu_400_p4 = j4_0_reg_396;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln338_reg_965 == 1'd0))) begin
        ap_phi_mux_j_0_phi_fu_353_p4 = j_reg_990;
    end else begin
        ap_phi_mux_j_0_phi_fu_353_p4 = j_0_reg_349;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_906_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_op2_assign_phi_fu_307_p4 = tmp_3_reg_946;
    end else begin
        ap_phi_mux_op2_assign_phi_fu_307_p4 = op2_assign_reg_303;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln334_reg_961 == 1'd0))) begin
        ap_phi_mux_p_res_tmp_bits_0_phi_fu_365_p4 = p_0106_0_reg_326;
    end else begin
        ap_phi_mux_p_res_tmp_bits_0_phi_fu_365_p4 = p_res_tmp_bits_0_reg_361;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_data_V_ce0 = 1'b1;
    end else begin
        cross_mul_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_res_digits_data_V_address0 = zext_ln367_fu_818_p1;
    end else if (((1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        p_res_digits_data_V_address0 = p_res_digits_data_V_a_3_reg_1034_pp3_iter1_reg;
    end else if (((1'b0 == ap_block_pp3_stage0) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        p_res_digits_data_V_address0 = zext_ln356_fu_722_p1;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        p_res_digits_data_V_address0 = p_res_digits_data_V_a_reg_979_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        p_res_digits_data_V_address0 = zext_ln342_fu_634_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_res_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_address0;
    end else begin
        p_res_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (1'b0 == ap_block_pp4_stage0_11001)) | ((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        p_res_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_res_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_ce0;
    end else begin
        p_res_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        p_res_digits_data_V_d0 = add_ln209_5_reg_1055;
    end else if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        p_res_digits_data_V_d0 = add_ln209_reg_1000;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_res_digits_data_V_d0 = grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_d0;
    end else begin
        p_res_digits_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (1'b0 == ap_block_pp3_stage1_11001) & (icmp_ln352_reg_1020_pp3_iter1_reg == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln338_reg_965_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        p_res_digits_data_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_res_digits_data_V_we0 = grp_CAT_I_I_I_O_1_fu_428_w_digits_data_V_we0;
    end else begin
        p_res_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001))) begin
        res_digits_data_V_ce0 = 1'b1;
    end else begin
        res_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b1) & (1'b0 == ap_block_pp4_stage0_11001) & (icmp_ln364_reg_1080_pp4_iter1_reg == 1'd0))) begin
        res_digits_data_V_we0 = 1'b1;
    end else begin
        res_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        res_tmp_bits_ap_vld = 1'b1;
    end else begin
        res_tmp_bits_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_address0 = zext_ln59_fu_456_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z0_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_address0;
    end else begin
        z0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z0_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_428_x0_digits_data_V_ce0;
    end else begin
        z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_address0 = zext_ln81_reg_915_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z1_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_address0;
    end else begin
        z1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z1_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_428_x1_digits_data_V_ce0;
    end else begin
        z1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_906_pp1_iter3_reg == 1'd0))) begin
        z1_digits_data_V_we0 = 1'b1;
    end else begin
        z1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_address0 = zext_ln59_fu_456_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z2_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_address0;
    end else begin
        z2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z2_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        z2_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_428_x2_digits_data_V_ce0;
    end else begin
        z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_444_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln54_fu_444_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_525_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_525_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln334_fu_612_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_1_fu_428_ap_done == 1'b1) & (icmp_ln334_fu_612_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln338_fu_617_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (icmp_ln338_fu_617_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((1'b1 == ap_CS_fsm_state18) & (icmp_ln348_fu_700_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln352_fu_705_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter1 == 1'b0) & (icmp_ln352_fu_705_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((~((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b0)) & (1'b0 == ap_block_pp3_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if (((1'b0 == ap_block_pp3_stage1_subdone) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_pp4_stage0;
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln364_fu_806_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)) | ((1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln364_fu_806_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1) & (ap_enable_reg_pp4_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_tmp_bits_fu_520_p2 = (add_ln64_fu_515_p2 + z2_tmp_bits_read);

assign add_ln209_14_fu_479_p2 = (z2_digits_data_V_loa_reg_880 + zext_ln700_26_fu_469_p1);

assign add_ln209_15_fu_662_p2 = (reg_439 + zext_ln700_30_fu_652_p1);

assign add_ln209_16_fu_750_p2 = (reg_439 + zext_ln700_34_fu_740_p1);

assign add_ln209_5_fu_756_p2 = (add_ln209_16_fu_750_p2 + rhs_digits_data_V_lo_reg_1039);

assign add_ln209_6_fu_484_p2 = (add_ln209_14_fu_479_p2 + z0_digits_data_V_loa_reg_874);

assign add_ln209_fu_668_p2 = (add_ln209_15_fu_662_p2 + lhs_digits_data_V_lo_reg_984);

assign add_ln64_fu_515_p2 = (zext_ln64_fu_511_p1 + z0_tmp_bits_read);

assign add_ln700_21_fu_587_p2 = (trunc_ln701_fu_571_p1 + select_ln701_2_fu_563_p3);

assign add_ln700_fu_473_p2 = (zext_ln209_fu_466_p1 + zext_ln54_fu_462_p1);

assign add_ln96_fu_601_p2 = (cross_mul_tmp_bits_read + p_neg207_i_fu_593_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp3_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign cross_mul_digits_data_V_address0 = zext_ln81_fu_537_p1;

assign exitcond_i_fu_525_p2 = ((i_0_i11_reg_315 == 6'd32) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_1_fu_428_ap_start = grp_CAT_I_I_I_O_1_fu_428_ap_start_reg;

assign i_27_fu_450_p2 = (ap_phi_mux_i_0_i_phi_fu_296_p4 + 6'd1);

assign i_28_fu_531_p2 = (i_0_i11_reg_315 + 6'd1);

assign i_29_fu_711_p2 = (ap_phi_mux_i3_0_phi_fu_389_p4 + 6'd1);

assign i_30_fu_812_p2 = (i5_0_reg_417 + 7'd1);

assign i_fu_623_p2 = (ap_phi_mux_i_0_phi_fu_342_p4 + 6'd1);

assign icmp_ln334_fu_612_p0 = rhs_tmp_bits_read;

assign icmp_ln334_fu_612_p2 = ((icmp_ln334_fu_612_p0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln338_fu_617_p2 = ((ap_phi_mux_i_0_phi_fu_342_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln348_fu_700_p0 = lhs_tmp_bits_read;

assign icmp_ln348_fu_700_p2 = ((icmp_ln348_fu_700_p0 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_705_p2 = ((ap_phi_mux_i3_0_phi_fu_389_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_806_p2 = ((i5_0_reg_417 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln54_fu_444_p2 = ((ap_phi_mux_i_0_i_phi_fu_296_p4 == 6'd32) ? 1'b1 : 1'b0);

assign j_5_fu_727_p2 = (j4_0_reg_396 + 7'd1);

assign j_fu_639_p2 = (j_0_reg_349 + 7'd1);

assign lhs_digits_data_V_address0 = zext_ln341_fu_629_p1;

assign p_neg207_i_fu_593_p3 = ((op2_assign_reg_303[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_res_tmp_bits_3_fu_801_p2 = (mul_ln362_reg_1070 + zext_ln362_fu_797_p1);

assign p_res_tmp_bits_fu_788_p2 = (zext_ln348_reg_1010 + zext_ln360_fu_784_p1);

assign res_digits_data_V_address0 = zext_ln367_reg_1089_pp4_iter1_reg;

assign res_digits_data_V_d0 = reg_439;

assign res_tmp_bits = p_res_tmp_bits_3_reg_1075;

assign rhs_digits_data_V_address0 = zext_ln355_fu_717_p1;

assign select_ln701_2_fu_563_p3 = ((ap_phi_mux_op2_assign_phi_fu_307_p4[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln701_fu_555_p3 = ((ap_phi_mux_op2_assign_phi_fu_307_p4[0:0] === 1'b1) ? 65'd36893488147419103231 : 65'd0);

assign tmp_V_17_fu_495_p2 = (zext_ln700_27_fu_492_p1 + zext_ln700_fu_489_p1);

assign tmp_V_18_fu_549_p2 = (zext_ln180_fu_543_p1 - zext_ln701_fu_546_p1);

assign tmp_V_19_fu_574_p2 = (select_ln701_fu_555_p3 + tmp_V_18_reg_940);

assign tmp_V_22_fu_768_p2 = (zext_ln700_35_fu_765_p1 + zext_ln700_33_fu_761_p1);

assign tmp_V_23_fu_656_p2 = (zext_ln700_28_fu_649_p1 + zext_ln338_fu_645_p1);

assign tmp_V_24_fu_744_p2 = (zext_ln700_32_fu_737_p1 + zext_ln352_fu_733_p1);

assign tmp_V_fu_680_p2 = (zext_ln700_31_fu_677_p1 + zext_ln700_29_fu_673_p1);

assign trunc_ln701_fu_571_p1 = tmp_V_18_reg_940[63:0];

assign z1_tmp_bits_fu_606_p2 = (add_ln96_fu_601_p2 - add2_tmp_bits_reg_901);

assign zext_ln180_fu_543_p1 = cross_mul_digits_dat_4_reg_930;

assign zext_ln209_fu_466_p1 = z0_digits_data_V_loa_reg_874;

assign zext_ln338_fu_645_p1 = p_0106_0_reg_326;

assign zext_ln341_fu_629_p1 = ap_phi_mux_i_0_phi_fu_342_p4;

assign zext_ln342_fu_634_p1 = ap_phi_mux_j_0_phi_fu_353_p4;

assign zext_ln348_fu_696_p1 = ap_phi_mux_p_res_tmp_bits_0_phi_fu_365_p4;

assign zext_ln352_fu_733_p1 = p_0103_0_reg_373;

assign zext_ln355_fu_717_p1 = ap_phi_mux_i3_0_phi_fu_389_p4;

assign zext_ln356_fu_722_p1 = ap_phi_mux_j4_0_phi_fu_400_p4;

assign zext_ln360_fu_784_p1 = p_0103_0_reg_373;

assign zext_ln362_fu_797_p1 = p_res_tmp_bits_1_reg_408;

assign zext_ln367_fu_818_p1 = i5_0_reg_417;

assign zext_ln54_fu_462_p1 = p_088_0_i_reg_280;

assign zext_ln59_fu_456_p1 = ap_phi_mux_i_0_i_phi_fu_296_p4;

assign zext_ln64_fu_511_p1 = p_088_0_i_reg_280;

assign zext_ln700_26_fu_469_p1 = p_088_0_i_reg_280;

assign zext_ln700_27_fu_492_p1 = add_ln700_reg_886;

assign zext_ln700_28_fu_649_p1 = lhs_digits_data_V_lo_reg_984;

assign zext_ln700_29_fu_673_p1 = reg_439;

assign zext_ln700_30_fu_652_p1 = p_0106_0_reg_326;

assign zext_ln700_31_fu_677_p1 = tmp_V_23_reg_995;

assign zext_ln700_32_fu_737_p1 = rhs_digits_data_V_lo_reg_1039;

assign zext_ln700_33_fu_761_p1 = reg_439;

assign zext_ln700_34_fu_740_p1 = p_0103_0_reg_373;

assign zext_ln700_35_fu_765_p1 = tmp_V_24_reg_1050;

assign zext_ln700_fu_489_p1 = z2_digits_data_V_loa_reg_880;

assign zext_ln701_fu_546_p1 = add2_digits_data_V_l_reg_935;

assign zext_ln81_fu_537_p1 = i_0_i11_reg_315;

always @ (posedge ap_clk) begin
    zext_ln59_reg_859[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln59_reg_859_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_915[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_915_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_915_pp1_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln81_reg_915_pp1_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln348_reg_1010[2] <= 1'b0;
    zext_ln367_reg_1089[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln367_reg_1089_pp4_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //karastuba_mul_ADD_SU_1
