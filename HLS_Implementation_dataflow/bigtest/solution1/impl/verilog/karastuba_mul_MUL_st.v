// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_MUL_st (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0,
        rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0,
        z0_digits_data_V_address0,
        z0_digits_data_V_ce0,
        z0_digits_data_V_we0,
        z0_digits_data_V_d0,
        z2_digits_data_V_address0,
        z2_digits_data_V_ce0,
        z2_digits_data_V_we0,
        z2_digits_data_V_d0,
        cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_we0,
        cross_mul_digits_data_V_d0,
        inter_lhs_digits_data_V_address0,
        inter_lhs_digits_data_V_ce0,
        inter_lhs_digits_data_V_we0,
        inter_lhs_digits_data_V_d0,
        inter_rhs_digits_data_V_address0,
        inter_rhs_digits_data_V_ce0,
        inter_rhs_digits_data_V_we0,
        inter_rhs_digits_data_V_d0,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_state5 = 17'd4;
parameter    ap_ST_fsm_pp1_stage0 = 17'd8;
parameter    ap_ST_fsm_state9 = 17'd16;
parameter    ap_ST_fsm_pp2_stage0 = 17'd32;
parameter    ap_ST_fsm_state13 = 17'd64;
parameter    ap_ST_fsm_pp3_stage0 = 17'd128;
parameter    ap_ST_fsm_state17 = 17'd256;
parameter    ap_ST_fsm_state18 = 17'd512;
parameter    ap_ST_fsm_state19 = 17'd1024;
parameter    ap_ST_fsm_pp4_stage0 = 17'd2048;
parameter    ap_ST_fsm_state23 = 17'd4096;
parameter    ap_ST_fsm_pp5_stage0 = 17'd8192;
parameter    ap_ST_fsm_state27 = 17'd16384;
parameter    ap_ST_fsm_pp6_stage0 = 17'd32768;
parameter    ap_ST_fsm_state31 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [5:0] lhs_digits_data_V_address0;
output   lhs_digits_data_V_ce0;
input  [63:0] lhs_digits_data_V_q0;
output  [5:0] rhs_digits_data_V_address0;
output   rhs_digits_data_V_ce0;
input  [63:0] rhs_digits_data_V_q0;
output  [5:0] z0_digits_data_V_address0;
output   z0_digits_data_V_ce0;
output   z0_digits_data_V_we0;
output  [63:0] z0_digits_data_V_d0;
output  [5:0] z2_digits_data_V_address0;
output   z2_digits_data_V_ce0;
output   z2_digits_data_V_we0;
output  [63:0] z2_digits_data_V_d0;
output  [5:0] cross_mul_digits_data_V_address0;
output   cross_mul_digits_data_V_ce0;
output   cross_mul_digits_data_V_we0;
output  [63:0] cross_mul_digits_data_V_d0;
output  [5:0] inter_lhs_digits_data_V_address0;
output   inter_lhs_digits_data_V_ce0;
output   inter_lhs_digits_data_V_we0;
output  [63:0] inter_lhs_digits_data_V_d0;
output  [5:0] inter_rhs_digits_data_V_address0;
output   inter_rhs_digits_data_V_ce0;
output   inter_rhs_digits_data_V_we0;
output  [63:0] inter_rhs_digits_data_V_d0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;
output  [31:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] lhs_digits_data_V_address0;
reg lhs_digits_data_V_ce0;
reg[5:0] rhs_digits_data_V_address0;
reg rhs_digits_data_V_ce0;
reg z0_digits_data_V_ce0;
reg z0_digits_data_V_we0;
reg z2_digits_data_V_ce0;
reg z2_digits_data_V_we0;
reg cross_mul_digits_data_V_ce0;
reg cross_mul_digits_data_V_we0;
reg[5:0] inter_lhs_digits_data_V_address0;
reg inter_lhs_digits_data_V_ce0;
reg inter_lhs_digits_data_V_we0;
reg[5:0] inter_rhs_digits_data_V_address0;
reg inter_rhs_digits_data_V_ce0;
reg inter_rhs_digits_data_V_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [5:0] i_0_reg_383;
reg   [5:0] i1_0_reg_394;
reg   [5:0] i1_0_reg_394_pp1_iter1_reg;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [5:0] i2_0_reg_406;
reg   [5:0] i3_0_reg_417;
reg   [5:0] i3_0_reg_417_pp3_iter1_reg;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state14_pp3_stage0_iter0;
wire    ap_block_state15_pp3_stage0_iter1;
wire    ap_block_state16_pp3_stage0_iter2;
wire    ap_block_pp3_stage0_11001;
reg   [6:0] i4_0_reg_429;
reg   [6:0] i5_0_reg_440;
reg   [6:0] i6_0_reg_451;
reg   [63:0] reg_496;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln262_reg_718;
reg    ap_enable_reg_pp1_iter1;
reg   [0:0] icmp_ln267_reg_739;
reg   [63:0] reg_505;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state10_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_state12_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln272_reg_758;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln277_reg_779;
wire   [0:0] icmp_ln262_fu_514_p2;
reg   [0:0] icmp_ln262_reg_718_pp0_iter1_reg;
wire   [5:0] i_fu_520_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln265_fu_526_p1;
reg   [63:0] zext_ln265_reg_727;
reg   [63:0] zext_ln265_reg_727_pp0_iter1_reg;
wire   [0:0] icmp_ln267_fu_531_p2;
reg   [0:0] icmp_ln267_reg_739_pp1_iter1_reg;
wire   [5:0] i_17_fu_537_p2;
reg   [5:0] i_17_reg_743;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln270_1_fu_549_p1;
reg   [63:0] zext_ln270_1_reg_748;
reg   [63:0] zext_ln270_1_reg_748_pp1_iter1_reg;
wire   [0:0] icmp_ln272_fu_560_p2;
reg   [0:0] icmp_ln272_reg_758_pp2_iter1_reg;
wire   [5:0] i_18_fu_566_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] zext_ln275_fu_572_p1;
reg   [63:0] zext_ln275_reg_767;
reg   [63:0] zext_ln275_reg_767_pp2_iter1_reg;
wire   [0:0] icmp_ln277_fu_577_p2;
reg   [0:0] icmp_ln277_reg_779_pp3_iter1_reg;
wire   [5:0] i_19_fu_583_p2;
reg   [5:0] i_19_reg_783;
reg    ap_enable_reg_pp3_iter0;
wire   [63:0] zext_ln280_1_fu_595_p1;
reg   [63:0] zext_ln280_1_reg_788;
reg   [63:0] zext_ln280_1_reg_788_pp3_iter1_reg;
wire   [0:0] icmp_ln294_fu_621_p2;
reg   [0:0] icmp_ln294_reg_798;
wire    ap_CS_fsm_pp4_stage0;
wire    ap_block_state20_pp4_stage0_iter0;
wire    ap_block_state21_pp4_stage0_iter1;
wire    ap_block_state22_pp4_stage0_iter2;
wire    ap_block_pp4_stage0_11001;
reg   [0:0] icmp_ln294_reg_798_pp4_iter1_reg;
wire   [6:0] i_20_fu_627_p2;
reg    ap_enable_reg_pp4_iter0;
wire   [63:0] zext_ln297_fu_633_p1;
reg   [63:0] zext_ln297_reg_807;
reg   [63:0] zext_ln297_reg_807_pp4_iter1_reg;
wire   [63:0] p_z0_digits_data_V_q0;
reg   [63:0] p_z0_digits_data_V_lo_reg_817;
reg   [31:0] p_z0_tmp_bits_load_reg_822;
wire    ap_CS_fsm_state23;
wire   [0:0] icmp_ln300_fu_641_p2;
reg   [0:0] icmp_ln300_reg_827;
wire    ap_CS_fsm_pp5_stage0;
wire    ap_block_state24_pp5_stage0_iter0;
wire    ap_block_state25_pp5_stage0_iter1;
wire    ap_block_state26_pp5_stage0_iter2;
wire    ap_block_pp5_stage0_11001;
reg   [0:0] icmp_ln300_reg_827_pp5_iter1_reg;
wire   [6:0] i_21_fu_647_p2;
reg    ap_enable_reg_pp5_iter0;
wire   [63:0] zext_ln303_fu_653_p1;
reg   [63:0] zext_ln303_reg_836;
reg   [63:0] zext_ln303_reg_836_pp5_iter1_reg;
wire   [63:0] p_z2_digits_data_V_q0;
reg   [63:0] p_z2_digits_data_V_lo_reg_846;
reg   [31:0] p_z2_tmp_bits_load_reg_851;
wire    ap_CS_fsm_state27;
wire   [0:0] icmp_ln306_fu_661_p2;
reg   [0:0] icmp_ln306_reg_856;
wire    ap_CS_fsm_pp6_stage0;
wire    ap_block_state28_pp6_stage0_iter0;
wire    ap_block_state29_pp6_stage0_iter1;
wire    ap_block_state30_pp6_stage0_iter2;
wire    ap_block_pp6_stage0_11001;
reg   [0:0] icmp_ln306_reg_856_pp6_iter1_reg;
wire   [6:0] i_22_fu_667_p2;
reg    ap_enable_reg_pp6_iter0;
wire   [63:0] zext_ln309_fu_673_p1;
reg   [63:0] zext_ln309_reg_865;
reg   [63:0] zext_ln309_reg_865_pp6_iter1_reg;
wire   [63:0] p_cross_mul_digits_da_q0;
reg   [63:0] p_cross_mul_digits_da_6_reg_875;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state5;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter2;
wire    ap_CS_fsm_state9;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state10;
reg    ap_enable_reg_pp2_iter2;
wire    ap_CS_fsm_state13;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state14;
reg    ap_enable_reg_pp3_iter2;
wire    ap_CS_fsm_state19;
wire    grp_karastuba_mul_templa_4_fu_472_ap_ready;
wire    grp_karastuba_mul_templa_4_fu_472_ap_done;
wire    ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready;
wire    ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done;
wire    grp_karastuba_mul_templa_4_fu_484_ap_ready;
wire    grp_karastuba_mul_templa_4_fu_484_ap_done;
wire    ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready;
wire    ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done;
wire    grp_karastuba_mul_templa_fu_462_ap_ready;
wire    grp_karastuba_mul_templa_fu_462_ap_done;
reg    ap_block_state19_on_subcall_done;
wire    ap_block_pp4_stage0_subdone;
reg    ap_condition_pp4_exit_iter0_state20;
reg    ap_enable_reg_pp4_iter1;
reg    ap_enable_reg_pp4_iter2;
wire    ap_block_pp5_stage0_subdone;
reg    ap_condition_pp5_exit_iter0_state24;
reg    ap_enable_reg_pp5_iter1;
reg    ap_enable_reg_pp5_iter2;
wire    ap_block_pp6_stage0_subdone;
reg    ap_condition_pp6_exit_iter0_state28;
reg    ap_enable_reg_pp6_iter1;
reg    ap_enable_reg_pp6_iter2;
reg   [4:0] lhs0_digits_data_V_address0;
reg    lhs0_digits_data_V_ce0;
reg    lhs0_digits_data_V_we0;
wire   [63:0] lhs0_digits_data_V_q0;
reg   [4:0] lhs1_digits_data_V_address0;
reg    lhs1_digits_data_V_ce0;
reg    lhs1_digits_data_V_we0;
wire   [63:0] lhs1_digits_data_V_q0;
reg   [4:0] rhs0_digits_data_V_address0;
reg    rhs0_digits_data_V_ce0;
reg    rhs0_digits_data_V_we0;
wire   [63:0] rhs0_digits_data_V_q0;
reg   [4:0] rhs1_digits_data_V_address0;
reg    rhs1_digits_data_V_ce0;
reg    rhs1_digits_data_V_we0;
wire   [63:0] rhs1_digits_data_V_q0;
reg   [4:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [63:0] lhs0_tmp_digits_data_q0;
reg   [4:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [63:0] lhs1_tmp_digits_data_q0;
reg   [4:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [63:0] rhs0_tmp_digits_data_q0;
reg   [4:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [63:0] rhs1_tmp_digits_data_q0;
reg   [5:0] p_z0_digits_data_V_address0;
reg    p_z0_digits_data_V_ce0;
reg    p_z0_digits_data_V_we0;
reg   [5:0] p_z2_digits_data_V_address0;
reg    p_z2_digits_data_V_ce0;
reg    p_z2_digits_data_V_we0;
reg   [5:0] p_cross_mul_digits_da_address0;
reg    p_cross_mul_digits_da_ce0;
reg    p_cross_mul_digits_da_we0;
wire    grp_karastuba_mul_templa_fu_462_ap_start;
wire    grp_karastuba_mul_templa_fu_462_ap_idle;
wire   [4:0] grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0;
wire   [31:0] grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits;
wire    grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld;
wire   [5:0] grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we1;
wire   [4:0] grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we1;
wire   [31:0] grp_karastuba_mul_templa_4_fu_472_res_tmp_bits;
wire   [5:0] grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we1;
wire    grp_karastuba_mul_templa_4_fu_472_ap_start;
wire    grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld;
wire    grp_karastuba_mul_templa_4_fu_472_ap_idle;
reg    grp_karastuba_mul_templa_4_fu_472_ap_continue;
wire   [4:0] grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we1;
wire   [4:0] grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we1;
wire   [31:0] grp_karastuba_mul_templa_4_fu_484_res_tmp_bits;
wire   [5:0] grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0;
wire    grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we1;
wire    grp_karastuba_mul_templa_4_fu_484_ap_start;
wire    grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld;
wire    grp_karastuba_mul_templa_4_fu_484_ap_idle;
reg    grp_karastuba_mul_templa_4_fu_484_ap_continue;
reg   [5:0] ap_phi_mux_i1_0_phi_fu_398_p4;
wire    ap_block_pp1_stage0;
reg   [5:0] ap_phi_mux_i3_0_phi_fu_421_p4;
wire    ap_block_pp3_stage0;
reg    grp_karastuba_mul_templa_fu_462_ap_start_reg;
wire    ap_CS_fsm_state18;
reg   [31:0] p_cross_mul_tmp_bits_fu_120;
reg    grp_karastuba_mul_templa_4_fu_472_ap_start_reg;
reg    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready;
reg    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done;
reg   [31:0] p_z0_tmp_bits_fu_104;
reg    grp_karastuba_mul_templa_4_fu_484_ap_start_reg;
reg    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready;
reg    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done;
reg   [31:0] p_z2_tmp_bits_fu_112;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln270_fu_554_p1;
wire    ap_block_pp2_stage0;
wire   [63:0] zext_ln280_fu_600_p1;
wire    ap_block_pp4_stage0;
wire    ap_block_pp5_stage0;
wire    ap_block_pp6_stage0;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state31;
wire   [5:0] xor_ln270_fu_543_p2;
wire   [5:0] xor_ln280_fu_589_p2;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
reg    ap_idle_pp4;
wire    ap_enable_pp4;
reg    ap_idle_pp5;
wire    ap_enable_pp5;
reg    ap_idle_pp6;
wire    ap_enable_pp6;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp4_iter0 = 1'b0;
#0 ap_enable_reg_pp5_iter0 = 1'b0;
#0 ap_enable_reg_pp6_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp4_iter1 = 1'b0;
#0 ap_enable_reg_pp4_iter2 = 1'b0;
#0 ap_enable_reg_pp5_iter1 = 1'b0;
#0 ap_enable_reg_pp5_iter2 = 1'b0;
#0 ap_enable_reg_pp6_iter1 = 1'b0;
#0 ap_enable_reg_pp6_iter2 = 1'b0;
#0 grp_karastuba_mul_templa_fu_462_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_4_fu_472_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready = 1'b0;
#0 ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done = 1'b0;
#0 grp_karastuba_mul_templa_4_fu_484_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready = 1'b0;
#0 ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done = 1'b0;
end

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_V_address0),
    .ce0(lhs0_digits_data_V_ce0),
    .we0(lhs0_digits_data_V_we0),
    .d0(reg_496),
    .q0(lhs0_digits_data_V_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_V_address0),
    .ce0(lhs1_digits_data_V_ce0),
    .we0(lhs1_digits_data_V_we0),
    .d0(reg_496),
    .q0(lhs1_digits_data_V_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_V_address0),
    .ce0(rhs0_digits_data_V_ce0),
    .we0(rhs0_digits_data_V_we0),
    .d0(reg_505),
    .q0(rhs0_digits_data_V_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_V_address0),
    .ce0(rhs1_digits_data_V_ce0),
    .we0(rhs1_digits_data_V_we0),
    .d0(reg_505),
    .q0(rhs1_digits_data_V_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(reg_496),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(reg_496),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(reg_505),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_ADDrcU #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(reg_505),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_ADDNgs #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_z0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_z0_digits_data_V_address0),
    .ce0(p_z0_digits_data_V_ce0),
    .we0(p_z0_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0),
    .q0(p_z0_digits_data_V_q0)
);

karastuba_mul_ADDNgs #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_z2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_z2_digits_data_V_address0),
    .ce0(p_z2_digits_data_V_ce0),
    .we0(p_z2_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0),
    .q0(p_z2_digits_data_V_q0)
);

karastuba_mul_ADDNgs #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
p_cross_mul_digits_da_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(p_cross_mul_digits_da_address0),
    .ce0(p_cross_mul_digits_da_ce0),
    .we0(p_cross_mul_digits_da_we0),
    .d0(grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0),
    .q0(p_cross_mul_digits_da_q0)
);

karastuba_mul_templa grp_karastuba_mul_templa_fu_462(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_fu_462_ap_start),
    .ap_done(grp_karastuba_mul_templa_fu_462_ap_done),
    .ap_idle(grp_karastuba_mul_templa_fu_462_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_fu_462_ap_ready),
    .lhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0),
    .lhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0),
    .lhs0_tmp_digits_data_V_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0),
    .lhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0),
    .lhs1_tmp_digits_data_V_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0),
    .rhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0),
    .rhs0_tmp_digits_data_V_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0),
    .rhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0),
    .rhs1_tmp_digits_data_V_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_tmp_bits(grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits),
    .cross_mul_tmp_bits_ap_vld(grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld),
    .cross_mul_digits_data_V_address0(grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0),
    .cross_mul_digits_data_V_ce0(grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0),
    .cross_mul_digits_data_V_we0(grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0),
    .cross_mul_digits_data_V_d0(grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0)
);

karastuba_mul_templa_4 grp_karastuba_mul_templa_4_fu_472(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d0),
    .lhs_digits_data_V_q0(lhs0_digits_data_V_q0),
    .lhs_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we0),
    .lhs_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address1),
    .lhs_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce1),
    .lhs_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d1),
    .lhs_digits_data_V_q1(64'd0),
    .lhs_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we1),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d0),
    .rhs_digits_data_V_q0(rhs0_digits_data_V_q0),
    .rhs_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we0),
    .rhs_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address1),
    .rhs_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce1),
    .rhs_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d1),
    .rhs_digits_data_V_q1(64'd0),
    .rhs_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we1),
    .res_tmp_bits(grp_karastuba_mul_templa_4_fu_472_res_tmp_bits),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0),
    .res_digits_data_V_q0(64'd0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d1),
    .res_digits_data_V_q1(64'd0),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we1),
    .lhs_tmp_bits_read_ap_vld(1'b1),
    .rhs_tmp_bits_read_ap_vld(1'b1),
    .ap_start(grp_karastuba_mul_templa_4_fu_472_ap_start),
    .res_tmp_bits_ap_vld(grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld),
    .ap_done(grp_karastuba_mul_templa_4_fu_472_ap_done),
    .ap_ready(grp_karastuba_mul_templa_4_fu_472_ap_ready),
    .ap_idle(grp_karastuba_mul_templa_4_fu_472_ap_idle),
    .ap_continue(grp_karastuba_mul_templa_4_fu_472_ap_continue)
);

karastuba_mul_templa_4 grp_karastuba_mul_templa_4_fu_484(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d0),
    .lhs_digits_data_V_q0(lhs1_digits_data_V_q0),
    .lhs_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we0),
    .lhs_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address1),
    .lhs_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce1),
    .lhs_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d1),
    .lhs_digits_data_V_q1(64'd0),
    .lhs_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we1),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d0),
    .rhs_digits_data_V_q0(rhs1_digits_data_V_q0),
    .rhs_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we0),
    .rhs_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address1),
    .rhs_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce1),
    .rhs_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d1),
    .rhs_digits_data_V_q1(64'd0),
    .rhs_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we1),
    .res_tmp_bits(grp_karastuba_mul_templa_4_fu_484_res_tmp_bits),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0),
    .res_digits_data_V_q0(64'd0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d1),
    .res_digits_data_V_q1(64'd0),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we1),
    .lhs_tmp_bits_read_ap_vld(1'b1),
    .rhs_tmp_bits_read_ap_vld(1'b1),
    .ap_start(grp_karastuba_mul_templa_4_fu_484_ap_start),
    .res_tmp_bits_ap_vld(grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld),
    .ap_done(grp_karastuba_mul_templa_4_fu_484_ap_done),
    .ap_ready(grp_karastuba_mul_templa_4_fu_484_ap_ready),
    .ap_idle(grp_karastuba_mul_templa_4_fu_484_ap_idle),
    .ap_continue(grp_karastuba_mul_templa_4_fu_484_ap_continue)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state31)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state10) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state10)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state10);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state9)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state14)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state14);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp3_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp4_stage0_subdone) & (1'b1 == ap_condition_pp4_exit_iter0_state20) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
            ap_enable_reg_pp4_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp4_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp4_exit_iter0_state20)) begin
                ap_enable_reg_pp4_iter1 <= (1'b1 ^ ap_condition_pp4_exit_iter0_state20);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp4_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp4_stage0_subdone)) begin
            ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
        end else if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_enable_reg_pp4_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp5_stage0_subdone) & (1'b1 == ap_condition_pp5_exit_iter0_state24) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
            ap_enable_reg_pp5_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp5_exit_iter0_state24)) begin
                ap_enable_reg_pp5_iter1 <= (1'b1 ^ ap_condition_pp5_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp5_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp5_stage0_subdone)) begin
            ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
        end else if ((1'b1 == ap_CS_fsm_state23)) begin
            ap_enable_reg_pp5_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp6_stage0_subdone) & (1'b1 == ap_condition_pp6_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
            ap_enable_reg_pp6_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp6_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp6_exit_iter0_state28)) begin
                ap_enable_reg_pp6_iter1 <= (1'b1 ^ ap_condition_pp6_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp6_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp6_stage0_subdone)) begin
            ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
        end else if ((1'b1 == ap_CS_fsm_state27)) begin
            ap_enable_reg_pp6_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= 1'b0;
        end else if ((grp_karastuba_mul_templa_4_fu_472_ap_done == 1'b1)) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= 1'b0;
        end else if ((grp_karastuba_mul_templa_4_fu_472_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= 1'b0;
        end else if ((grp_karastuba_mul_templa_4_fu_484_ap_done == 1'b1)) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= 1'b0;
        end else if ((grp_karastuba_mul_templa_4_fu_484_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | ((ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state19)))) begin
            grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_4_fu_472_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | ((ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state19)))) begin
            grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_4_fu_484_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_fu_462_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_karastuba_mul_templa_fu_462_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_fu_462_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_fu_462_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_0_reg_394 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln267_reg_739 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i1_0_reg_394 <= i_17_reg_743;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        i2_0_reg_406 <= 6'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_fu_560_p2 == 1'd0))) begin
        i2_0_reg_406 <= i_18_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i3_0_reg_417 <= 6'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln277_reg_779 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i3_0_reg_417 <= i_19_reg_783;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln294_fu_621_p2 == 1'd0))) begin
        i4_0_reg_429 <= i_20_fu_627_p2;
    end else if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        i4_0_reg_429 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln300_fu_641_p2 == 1'd0))) begin
        i5_0_reg_440 <= i_21_fu_647_p2;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        i5_0_reg_440 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln306_fu_661_p2 == 1'd0))) begin
        i6_0_reg_451 <= i_22_fu_667_p2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i6_0_reg_451 <= 7'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln262_fu_514_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_383 <= i_fu_520_p2;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_383 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_cross_mul_tmp_bits_fu_120 <= 32'd0;
    end else if (((grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        p_cross_mul_tmp_bits_fu_120 <= grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_z0_tmp_bits_fu_104 <= 32'd0;
    end else if (((grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        p_z0_tmp_bits_fu_104 <= grp_karastuba_mul_templa_4_fu_472_res_tmp_bits;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        p_z2_tmp_bits_fu_112 <= 32'd0;
    end else if (((grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        p_z2_tmp_bits_fu_112 <= grp_karastuba_mul_templa_4_fu_484_res_tmp_bits;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i1_0_reg_394_pp1_iter1_reg <= i1_0_reg_394;
        icmp_ln267_reg_739 <= icmp_ln267_fu_531_p2;
        icmp_ln267_reg_739_pp1_iter1_reg <= icmp_ln267_reg_739;
        zext_ln270_1_reg_748_pp1_iter1_reg[5 : 0] <= zext_ln270_1_reg_748[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i3_0_reg_417_pp3_iter1_reg <= i3_0_reg_417;
        icmp_ln277_reg_779 <= icmp_ln277_fu_577_p2;
        icmp_ln277_reg_779_pp3_iter1_reg <= icmp_ln277_reg_779;
        zext_ln280_1_reg_788_pp3_iter1_reg[5 : 0] <= zext_ln280_1_reg_788[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_17_reg_743 <= i_17_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_19_reg_783 <= i_19_fu_583_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln262_reg_718 <= icmp_ln262_fu_514_p2;
        icmp_ln262_reg_718_pp0_iter1_reg <= icmp_ln262_reg_718;
        zext_ln265_reg_727_pp0_iter1_reg[5 : 0] <= zext_ln265_reg_727[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln272_reg_758 <= icmp_ln272_fu_560_p2;
        icmp_ln272_reg_758_pp2_iter1_reg <= icmp_ln272_reg_758;
        zext_ln275_reg_767_pp2_iter1_reg[5 : 0] <= zext_ln275_reg_767[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        icmp_ln294_reg_798 <= icmp_ln294_fu_621_p2;
        icmp_ln294_reg_798_pp4_iter1_reg <= icmp_ln294_reg_798;
        zext_ln297_reg_807_pp4_iter1_reg[6 : 0] <= zext_ln297_reg_807[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        icmp_ln300_reg_827 <= icmp_ln300_fu_641_p2;
        icmp_ln300_reg_827_pp5_iter1_reg <= icmp_ln300_reg_827;
        zext_ln303_reg_836_pp5_iter1_reg[6 : 0] <= zext_ln303_reg_836[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        icmp_ln306_reg_856 <= icmp_ln306_fu_661_p2;
        icmp_ln306_reg_856_pp6_iter1_reg <= icmp_ln306_reg_856;
        zext_ln309_reg_865_pp6_iter1_reg[6 : 0] <= zext_ln309_reg_865[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln306_reg_856 == 1'd0))) begin
        p_cross_mul_digits_da_6_reg_875 <= p_cross_mul_digits_da_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln294_reg_798 == 1'd0))) begin
        p_z0_digits_data_V_lo_reg_817 <= p_z0_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        p_z0_tmp_bits_load_reg_822 <= p_z0_tmp_bits_fu_104;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln300_reg_827 == 1'd0))) begin
        p_z2_digits_data_V_lo_reg_846 <= p_z2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        p_z2_tmp_bits_load_reg_851 <= p_z2_tmp_bits_fu_112;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln267_reg_739 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln262_reg_718 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_496 <= lhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_reg_758 == 1'd0)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln277_reg_779 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        reg_505 <= rhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln262_fu_514_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        zext_ln265_reg_727[5 : 0] <= zext_ln265_fu_526_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln267_fu_531_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        zext_ln270_1_reg_748[5 : 0] <= zext_ln270_1_fu_549_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_fu_560_p2 == 1'd0))) begin
        zext_ln275_reg_767[5 : 0] <= zext_ln275_fu_572_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln277_fu_577_p2 == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        zext_ln280_1_reg_788[5 : 0] <= zext_ln280_1_fu_595_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (1'b1 == ap_CS_fsm_pp4_stage0) & (icmp_ln294_fu_621_p2 == 1'd0))) begin
        zext_ln297_reg_807[6 : 0] <= zext_ln297_fu_633_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (1'b1 == ap_CS_fsm_pp5_stage0) & (icmp_ln300_fu_641_p2 == 1'd0))) begin
        zext_ln303_reg_836[6 : 0] <= zext_ln303_fu_653_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (1'b1 == ap_CS_fsm_pp6_stage0) & (icmp_ln306_fu_661_p2 == 1'd0))) begin
        zext_ln309_reg_865[6 : 0] <= zext_ln309_fu_673_p1[6 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln262_fu_514_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln267_fu_531_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln272_fu_560_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state10 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state10 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln277_fu_577_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln294_fu_621_p2 == 1'd1)) begin
        ap_condition_pp4_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp4_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln300_fu_641_p2 == 1'd1)) begin
        ap_condition_pp5_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp5_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln306_fu_661_p2 == 1'd1)) begin
        ap_condition_pp6_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp6_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp4_iter2 == 1'b0) & (ap_enable_reg_pp4_iter1 == 1'b0) & (ap_enable_reg_pp4_iter0 == 1'b0))) begin
        ap_idle_pp4 = 1'b1;
    end else begin
        ap_idle_pp4 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp5_iter2 == 1'b0) & (ap_enable_reg_pp5_iter1 == 1'b0) & (ap_enable_reg_pp5_iter0 == 1'b0))) begin
        ap_idle_pp5 = 1'b1;
    end else begin
        ap_idle_pp5 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp6_iter2 == 1'b0) & (ap_enable_reg_pp6_iter1 == 1'b0) & (ap_enable_reg_pp6_iter0 == 1'b0))) begin
        ap_idle_pp6 = 1'b1;
    end else begin
        ap_idle_pp6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln267_reg_739 == 1'd0))) begin
        ap_phi_mux_i1_0_phi_fu_398_p4 = i_17_reg_743;
    end else begin
        ap_phi_mux_i1_0_phi_fu_398_p4 = i1_0_reg_394;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln277_reg_779 == 1'd0))) begin
        ap_phi_mux_i3_0_phi_fu_421_p4 = i_19_reg_783;
    end else begin
        ap_phi_mux_i3_0_phi_fu_421_p4 = i3_0_reg_417;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1))) begin
        cross_mul_digits_data_V_ce0 = 1'b1;
    end else begin
        cross_mul_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter2 == 1'b1) & (icmp_ln306_reg_856_pp6_iter1_reg == 1'd0))) begin
        cross_mul_digits_data_V_we0 = 1'b1;
    end else begin
        cross_mul_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        grp_karastuba_mul_templa_4_fu_472_ap_continue = 1'b1;
    end else begin
        grp_karastuba_mul_templa_4_fu_472_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        grp_karastuba_mul_templa_4_fu_484_ap_continue = 1'b1;
    end else begin
        grp_karastuba_mul_templa_4_fu_484_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        inter_lhs_digits_data_V_address0 = zext_ln270_1_reg_748_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        inter_lhs_digits_data_V_address0 = zext_ln265_reg_727_pp0_iter1_reg;
    end else begin
        inter_lhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        inter_lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        inter_lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln262_reg_718_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln267_reg_739_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        inter_lhs_digits_data_V_we0 = 1'b1;
    end else begin
        inter_lhs_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        inter_rhs_digits_data_V_address0 = zext_ln280_1_reg_788_pp3_iter1_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        inter_rhs_digits_data_V_address0 = zext_ln275_reg_767_pp2_iter1_reg;
    end else begin
        inter_rhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        inter_rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        inter_rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_reg_758_pp2_iter1_reg == 1'd0)) | ((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln277_reg_779_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        inter_rhs_digits_data_V_we0 = 1'b1;
    end else begin
        inter_rhs_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        lhs0_digits_data_V_address0 = zext_ln265_reg_727_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0;
    end else begin
        lhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0;
    end else begin
        lhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln262_reg_718_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs0_digits_data_V_we0 = 1'b1;
    end else begin
        lhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        lhs0_tmp_digits_data_address0 = zext_ln265_reg_727_pp0_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln262_reg_718_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        lhs1_digits_data_V_address0 = zext_ln270_fu_554_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs1_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0;
    end else begin
        lhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0;
    end else begin
        lhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln267_reg_739_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lhs1_digits_data_V_we0 = 1'b1;
    end else begin
        lhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        lhs1_tmp_digits_data_address0 = zext_ln270_fu_554_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln267_reg_739_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        lhs_digits_data_V_address0 = zext_ln270_1_fu_549_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lhs_digits_data_V_address0 = zext_ln265_fu_526_p1;
    end else begin
        lhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        p_cross_mul_digits_da_address0 = zext_ln309_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_cross_mul_digits_da_address0 = grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0;
    end else begin
        p_cross_mul_digits_da_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp6_stage0_11001) & (ap_enable_reg_pp6_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp6_stage0))) begin
        p_cross_mul_digits_da_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_cross_mul_digits_da_ce0 = grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0;
    end else begin
        p_cross_mul_digits_da_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_cross_mul_digits_da_we0 = grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0;
    end else begin
        p_cross_mul_digits_da_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_z0_digits_data_V_address0 = zext_ln297_fu_633_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0;
    end else begin
        p_z0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp4_stage0))) begin
        p_z0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0;
    end else begin
        p_z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z0_digits_data_V_we0 = grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0;
    end else begin
        p_z0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        p_z2_digits_data_V_address0 = zext_ln303_fu_653_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z2_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0;
    end else begin
        p_z2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp5_stage0))) begin
        p_z2_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z2_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0;
    end else begin
        p_z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_z2_digits_data_V_we0 = grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0;
    end else begin
        p_z2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        rhs0_digits_data_V_address0 = zext_ln275_reg_767_pp2_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0;
    end else begin
        rhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0;
    end else begin
        rhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_reg_758_pp2_iter1_reg == 1'd0))) begin
        rhs0_digits_data_V_we0 = 1'b1;
    end else begin
        rhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        rhs0_tmp_digits_data_address0 = zext_ln275_reg_767_pp2_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln272_reg_758_pp2_iter1_reg == 1'd0))) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        rhs1_digits_data_V_address0 = zext_ln280_fu_600_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs1_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0;
    end else begin
        rhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        rhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0;
    end else begin
        rhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln277_reg_779_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        rhs1_digits_data_V_we0 = 1'b1;
    end else begin
        rhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter2 == 1'b1))) begin
        rhs1_tmp_digits_data_address0 = zext_ln280_fu_600_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (icmp_ln277_reg_779_pp3_iter1_reg == 1'd0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        rhs_digits_data_V_address0 = zext_ln280_1_fu_595_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        rhs_digits_data_V_address0 = zext_ln275_fu_572_p1;
    end else begin
        rhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1))) begin
        z0_digits_data_V_ce0 = 1'b1;
    end else begin
        z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp4_stage0_11001) & (ap_enable_reg_pp4_iter2 == 1'b1) & (icmp_ln294_reg_798_pp4_iter1_reg == 1'd0))) begin
        z0_digits_data_V_we0 = 1'b1;
    end else begin
        z0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1))) begin
        z2_digits_data_V_ce0 = 1'b1;
    end else begin
        z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp5_stage0_11001) & (ap_enable_reg_pp5_iter2 == 1'b1) & (icmp_ln300_reg_827_pp5_iter1_reg == 1'd0))) begin
        z2_digits_data_V_we0 = 1'b1;
    end else begin
        z2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln262_fu_514_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln262_fu_514_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln267_fu_531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln267_fu_531_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln272_fu_560_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln272_fu_560_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp3_stage0;
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln277_fu_577_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter2 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln277_fu_577_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp4_stage0 : begin
            if ((~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln294_fu_621_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)) & ~((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end else if ((((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (ap_enable_reg_pp4_iter2 == 1'b1)) | ((ap_enable_reg_pp4_iter1 == 1'b0) & (1'b0 == ap_block_pp4_stage0_subdone) & (icmp_ln294_fu_621_p2 == 1'd1) & (ap_enable_reg_pp4_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp4_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_pp5_stage0;
        end
        ap_ST_fsm_pp5_stage0 : begin
            if ((~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln300_fu_641_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)) & ~((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end else if ((((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (ap_enable_reg_pp5_iter2 == 1'b1)) | ((ap_enable_reg_pp5_iter1 == 1'b0) & (1'b0 == ap_block_pp5_stage0_subdone) & (icmp_ln300_fu_641_p2 == 1'd1) & (ap_enable_reg_pp5_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp5_stage0;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_pp6_stage0;
        end
        ap_ST_fsm_pp6_stage0 : begin
            if ((~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln306_fu_661_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)) & ~((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end else if ((((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (ap_enable_reg_pp6_iter2 == 1'b1)) | ((ap_enable_reg_pp6_iter1 == 1'b0) & (1'b0 == ap_block_pp6_stage0_subdone) & (icmp_ln306_fu_661_p2 == 1'd1) & (ap_enable_reg_pp6_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp6_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp4_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp5_stage0 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp6_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp4_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp5_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp6_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state10_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state19_on_subcall_done = ((grp_karastuba_mul_templa_fu_462_ap_done == 1'b0) | ((ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready & ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done) == 1'b0) | ((ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready & ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done) == 1'b0));
end

assign ap_block_state20_pp4_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp4_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp4_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp5_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp5_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp5_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp6_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp6_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp6_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign ap_enable_pp4 = (ap_idle_pp4 ^ 1'b1);

assign ap_enable_pp5 = (ap_idle_pp5 ^ 1'b1);

assign ap_enable_pp6 = (ap_idle_pp6 ^ 1'b1);

assign ap_return_0 = p_z0_tmp_bits_load_reg_822;

assign ap_return_1 = p_z2_tmp_bits_load_reg_851;

assign ap_return_2 = p_cross_mul_tmp_bits_fu_120;

assign ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done = (grp_karastuba_mul_templa_4_fu_472_ap_done | ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done);

assign ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready = (grp_karastuba_mul_templa_4_fu_472_ap_ready | ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready);

assign ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done = (grp_karastuba_mul_templa_4_fu_484_ap_done | ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done);

assign ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready = (grp_karastuba_mul_templa_4_fu_484_ap_ready | ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready);

assign cross_mul_digits_data_V_address0 = zext_ln309_reg_865_pp6_iter1_reg;

assign cross_mul_digits_data_V_d0 = p_cross_mul_digits_da_6_reg_875;

assign grp_karastuba_mul_templa_4_fu_472_ap_start = grp_karastuba_mul_templa_4_fu_472_ap_start_reg;

assign grp_karastuba_mul_templa_4_fu_484_ap_start = grp_karastuba_mul_templa_4_fu_484_ap_start_reg;

assign grp_karastuba_mul_templa_fu_462_ap_start = grp_karastuba_mul_templa_fu_462_ap_start_reg;

assign i_17_fu_537_p2 = (ap_phi_mux_i1_0_phi_fu_398_p4 + 6'd1);

assign i_18_fu_566_p2 = (i2_0_reg_406 + 6'd1);

assign i_19_fu_583_p2 = (ap_phi_mux_i3_0_phi_fu_421_p4 + 6'd1);

assign i_20_fu_627_p2 = (i4_0_reg_429 + 7'd1);

assign i_21_fu_647_p2 = (i5_0_reg_440 + 7'd1);

assign i_22_fu_667_p2 = (i6_0_reg_451 + 7'd1);

assign i_fu_520_p2 = (i_0_reg_383 + 6'd1);

assign icmp_ln262_fu_514_p2 = ((i_0_reg_383 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln267_fu_531_p2 = ((ap_phi_mux_i1_0_phi_fu_398_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln272_fu_560_p2 = ((i2_0_reg_406 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln277_fu_577_p2 = ((ap_phi_mux_i3_0_phi_fu_421_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln294_fu_621_p2 = ((i4_0_reg_429 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln300_fu_641_p2 = ((i5_0_reg_440 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln306_fu_661_p2 = ((i6_0_reg_451 == 7'd64) ? 1'b1 : 1'b0);

assign inter_lhs_digits_data_V_d0 = reg_496;

assign inter_rhs_digits_data_V_d0 = reg_505;

assign xor_ln270_fu_543_p2 = (ap_phi_mux_i1_0_phi_fu_398_p4 ^ 6'd32);

assign xor_ln280_fu_589_p2 = (ap_phi_mux_i3_0_phi_fu_421_p4 ^ 6'd32);

assign z0_digits_data_V_address0 = zext_ln297_reg_807_pp4_iter1_reg;

assign z0_digits_data_V_d0 = p_z0_digits_data_V_lo_reg_817;

assign z2_digits_data_V_address0 = zext_ln303_reg_836_pp5_iter1_reg;

assign z2_digits_data_V_d0 = p_z2_digits_data_V_lo_reg_846;

assign zext_ln265_fu_526_p1 = i_0_reg_383;

assign zext_ln270_1_fu_549_p1 = xor_ln270_fu_543_p2;

assign zext_ln270_fu_554_p1 = i1_0_reg_394_pp1_iter1_reg;

assign zext_ln275_fu_572_p1 = i2_0_reg_406;

assign zext_ln280_1_fu_595_p1 = xor_ln280_fu_589_p2;

assign zext_ln280_fu_600_p1 = i3_0_reg_417_pp3_iter1_reg;

assign zext_ln297_fu_633_p1 = i4_0_reg_429;

assign zext_ln303_fu_653_p1 = i5_0_reg_440;

assign zext_ln309_fu_673_p1 = i6_0_reg_451;

always @ (posedge ap_clk) begin
    zext_ln265_reg_727[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln265_reg_727_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln270_1_reg_748[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln270_1_reg_748_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln275_reg_767[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln275_reg_767_pp2_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln280_1_reg_788[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln280_1_reg_788_pp3_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln297_reg_807[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln297_reg_807_pp4_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln303_reg_836[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln303_reg_836_pp5_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln309_reg_865[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln309_reg_865_pp6_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //karastuba_mul_MUL_st
