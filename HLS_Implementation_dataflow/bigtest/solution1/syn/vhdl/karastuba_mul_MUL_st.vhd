-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity karastuba_mul_MUL_st is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    lhs_digits_data_V_ce0 : OUT STD_LOGIC;
    lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    rhs_digits_data_V_ce0 : OUT STD_LOGIC;
    rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    z0_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    z0_digits_data_V_ce0 : OUT STD_LOGIC;
    z0_digits_data_V_we0 : OUT STD_LOGIC;
    z0_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    z2_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    z2_digits_data_V_ce0 : OUT STD_LOGIC;
    z2_digits_data_V_we0 : OUT STD_LOGIC;
    z2_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    cross_mul_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    cross_mul_digits_data_V_ce0 : OUT STD_LOGIC;
    cross_mul_digits_data_V_we0 : OUT STD_LOGIC;
    cross_mul_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    inter_lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    inter_lhs_digits_data_V_ce0 : OUT STD_LOGIC;
    inter_lhs_digits_data_V_we0 : OUT STD_LOGIC;
    inter_lhs_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    inter_rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    inter_rhs_digits_data_V_ce0 : OUT STD_LOGIC;
    inter_rhs_digits_data_V_we0 : OUT STD_LOGIC;
    inter_rhs_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of karastuba_mul_MUL_st is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_pp4_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_pp5_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_pp6_stage0 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal i_0_reg_383 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_0_reg_394 : STD_LOGIC_VECTOR (5 downto 0);
    signal i1_0_reg_394_pp1_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state6_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state8_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal i2_0_reg_406 : STD_LOGIC_VECTOR (5 downto 0);
    signal i3_0_reg_417 : STD_LOGIC_VECTOR (5 downto 0);
    signal i3_0_reg_417_pp3_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_block_state14_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state15_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state16_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal i4_0_reg_429 : STD_LOGIC_VECTOR (6 downto 0);
    signal i5_0_reg_440 : STD_LOGIC_VECTOR (6 downto 0);
    signal i6_0_reg_451 : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_496 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln262_reg_718 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal icmp_ln267_reg_739 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_505 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state10_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln272_reg_758 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal icmp_ln277_reg_779 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln262_fu_514_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln262_reg_718_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_520_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln265_fu_526_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_reg_727 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln265_reg_727_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln267_fu_531_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln267_reg_739_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_17_fu_537_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_17_reg_743 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln270_1_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln270_1_reg_748 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln270_1_reg_748_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln272_fu_560_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_758_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_18_fu_566_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal zext_ln275_fu_572_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln275_reg_767 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln275_reg_767_pp2_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln277_fu_577_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln277_reg_779_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_19_fu_583_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_19_reg_783 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal zext_ln280_1_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_1_reg_788 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln280_1_reg_788_pp3_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln294_fu_621_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln294_reg_798 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp4_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp4_stage0 : signal is "none";
    signal ap_block_state20_pp4_stage0_iter0 : BOOLEAN;
    signal ap_block_state21_pp4_stage0_iter1 : BOOLEAN;
    signal ap_block_state22_pp4_stage0_iter2 : BOOLEAN;
    signal ap_block_pp4_stage0_11001 : BOOLEAN;
    signal icmp_ln294_reg_798_pp4_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_20_fu_627_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp4_iter0 : STD_LOGIC := '0';
    signal zext_ln297_fu_633_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln297_reg_807 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln297_reg_807_pp4_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z0_digits_data_V_lo_reg_817 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z0_tmp_bits_load_reg_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal icmp_ln300_fu_641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln300_reg_827 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp5_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp5_stage0 : signal is "none";
    signal ap_block_state24_pp5_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp5_stage0_iter1 : BOOLEAN;
    signal ap_block_state26_pp5_stage0_iter2 : BOOLEAN;
    signal ap_block_pp5_stage0_11001 : BOOLEAN;
    signal icmp_ln300_reg_827_pp5_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_21_fu_647_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp5_iter0 : STD_LOGIC := '0';
    signal zext_ln303_fu_653_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln303_reg_836 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln303_reg_836_pp5_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z2_digits_data_V_lo_reg_846 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z2_tmp_bits_load_reg_851 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal icmp_ln306_fu_661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln306_reg_856 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp6_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp6_stage0 : signal is "none";
    signal ap_block_state28_pp6_stage0_iter0 : BOOLEAN;
    signal ap_block_state29_pp6_stage0_iter1 : BOOLEAN;
    signal ap_block_state30_pp6_stage0_iter2 : BOOLEAN;
    signal ap_block_pp6_stage0_11001 : BOOLEAN;
    signal icmp_ln306_reg_856_pp6_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_22_fu_667_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp6_iter0 : STD_LOGIC := '0';
    signal zext_ln309_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln309_reg_865 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln309_reg_865_pp6_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cross_mul_digits_da_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cross_mul_digits_da_6_reg_875 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state10 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state14 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_karastuba_mul_templa_4_fu_472_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_ap_done : STD_LOGIC;
    signal ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready : STD_LOGIC;
    signal ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_ap_done : STD_LOGIC;
    signal ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready : STD_LOGIC;
    signal ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_ap_done : STD_LOGIC;
    signal ap_block_state19_on_subcall_done : BOOLEAN;
    signal ap_block_pp4_stage0_subdone : BOOLEAN;
    signal ap_condition_pp4_exit_iter0_state20 : STD_LOGIC;
    signal ap_enable_reg_pp4_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp4_iter2 : STD_LOGIC := '0';
    signal ap_block_pp5_stage0_subdone : BOOLEAN;
    signal ap_condition_pp5_exit_iter0_state24 : STD_LOGIC;
    signal ap_enable_reg_pp5_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp5_iter2 : STD_LOGIC := '0';
    signal ap_block_pp6_stage0_subdone : BOOLEAN;
    signal ap_condition_pp6_exit_iter0_state28 : STD_LOGIC;
    signal ap_enable_reg_pp6_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp6_iter2 : STD_LOGIC := '0';
    signal lhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs0_digits_data_V_ce0 : STD_LOGIC;
    signal lhs0_digits_data_V_we0 : STD_LOGIC;
    signal lhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs1_digits_data_V_ce0 : STD_LOGIC;
    signal lhs1_digits_data_V_we0 : STD_LOGIC;
    signal lhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs0_digits_data_V_ce0 : STD_LOGIC;
    signal rhs0_digits_data_V_we0 : STD_LOGIC;
    signal rhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs1_digits_data_V_ce0 : STD_LOGIC;
    signal rhs1_digits_data_V_we0 : STD_LOGIC;
    signal rhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_z0_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_z0_digits_data_V_ce0 : STD_LOGIC;
    signal p_z0_digits_data_V_we0 : STD_LOGIC;
    signal p_z2_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_z2_digits_data_V_ce0 : STD_LOGIC;
    signal p_z2_digits_data_V_we0 : STD_LOGIC;
    signal p_cross_mul_digits_da_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_cross_mul_digits_da_ce0 : STD_LOGIC;
    signal p_cross_mul_digits_da_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_res_tmp_bits : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_472_ap_continue : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_res_tmp_bits : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_484_ap_continue : STD_LOGIC;
    signal ap_phi_mux_i1_0_phi_fu_398_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_i3_0_phi_fu_421_p4 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal grp_karastuba_mul_templa_fu_462_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal p_cross_mul_tmp_bits_fu_120 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_karastuba_mul_templa_4_fu_472_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done : STD_LOGIC := '0';
    signal p_z0_tmp_bits_fu_104 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_karastuba_mul_templa_4_fu_484_ap_start_reg : STD_LOGIC := '0';
    signal ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready : STD_LOGIC := '0';
    signal ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done : STD_LOGIC := '0';
    signal p_z2_tmp_bits_fu_112 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln270_fu_554_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln280_fu_600_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp4_stage0 : BOOLEAN;
    signal ap_block_pp5_stage0 : BOOLEAN;
    signal ap_block_pp6_stage0 : BOOLEAN;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal xor_ln270_fu_543_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln280_fu_589_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal ap_idle_pp4 : STD_LOGIC;
    signal ap_enable_pp4 : STD_LOGIC;
    signal ap_idle_pp5 : STD_LOGIC;
    signal ap_enable_pp5 : STD_LOGIC;
    signal ap_idle_pp6 : STD_LOGIC;
    signal ap_enable_pp6 : STD_LOGIC;

    component karastuba_mul_templa IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_tmp_bits : OUT STD_LOGIC_VECTOR (31 downto 0);
        cross_mul_tmp_bits_ap_vld : OUT STD_LOGIC;
        cross_mul_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cross_mul_digits_data_V_ce0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_templa_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        lhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs_digits_data_V_we0 : OUT STD_LOGIC;
        lhs_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs_digits_data_V_ce1 : OUT STD_LOGIC;
        lhs_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        lhs_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs_digits_data_V_we1 : OUT STD_LOGIC;
        rhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs_digits_data_V_we0 : OUT STD_LOGIC;
        rhs_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs_digits_data_V_ce1 : OUT STD_LOGIC;
        rhs_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        rhs_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs_digits_data_V_we1 : OUT STD_LOGIC;
        res_tmp_bits : OUT STD_LOGIC_VECTOR (31 downto 0);
        res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        res_digits_data_V_ce0 : OUT STD_LOGIC;
        res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_we0 : OUT STD_LOGIC;
        res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        res_digits_data_V_ce1 : OUT STD_LOGIC;
        res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_we1 : OUT STD_LOGIC;
        lhs_tmp_bits_read_ap_vld : IN STD_LOGIC;
        rhs_tmp_bits_read_ap_vld : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        res_tmp_bits_ap_vld : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC );
    end component;


    component karastuba_mul_ADDrcU IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_ADDNgs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    lhs0_digits_data_V_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_digits_data_V_address0,
        ce0 => lhs0_digits_data_V_ce0,
        we0 => lhs0_digits_data_V_we0,
        d0 => reg_496,
        q0 => lhs0_digits_data_V_q0);

    lhs1_digits_data_V_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_digits_data_V_address0,
        ce0 => lhs1_digits_data_V_ce0,
        we0 => lhs1_digits_data_V_we0,
        d0 => reg_496,
        q0 => lhs1_digits_data_V_q0);

    rhs0_digits_data_V_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_digits_data_V_address0,
        ce0 => rhs0_digits_data_V_ce0,
        we0 => rhs0_digits_data_V_we0,
        d0 => reg_505,
        q0 => rhs0_digits_data_V_q0);

    rhs1_digits_data_V_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_digits_data_V_address0,
        ce0 => rhs1_digits_data_V_ce0,
        we0 => rhs1_digits_data_V_we0,
        d0 => reg_505,
        q0 => rhs1_digits_data_V_q0);

    lhs0_tmp_digits_data_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_tmp_digits_data_address0,
        ce0 => lhs0_tmp_digits_data_ce0,
        we0 => lhs0_tmp_digits_data_we0,
        d0 => reg_496,
        q0 => lhs0_tmp_digits_data_q0);

    lhs1_tmp_digits_data_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_tmp_digits_data_address0,
        ce0 => lhs1_tmp_digits_data_ce0,
        we0 => lhs1_tmp_digits_data_we0,
        d0 => reg_496,
        q0 => lhs1_tmp_digits_data_q0);

    rhs0_tmp_digits_data_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_tmp_digits_data_address0,
        ce0 => rhs0_tmp_digits_data_ce0,
        we0 => rhs0_tmp_digits_data_we0,
        d0 => reg_505,
        q0 => rhs0_tmp_digits_data_q0);

    rhs1_tmp_digits_data_U : component karastuba_mul_ADDrcU
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_tmp_digits_data_address0,
        ce0 => rhs1_tmp_digits_data_ce0,
        we0 => rhs1_tmp_digits_data_we0,
        d0 => reg_505,
        q0 => rhs1_tmp_digits_data_q0);

    p_z0_digits_data_V_U : component karastuba_mul_ADDNgs
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_z0_digits_data_V_address0,
        ce0 => p_z0_digits_data_V_ce0,
        we0 => p_z0_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0,
        q0 => p_z0_digits_data_V_q0);

    p_z2_digits_data_V_U : component karastuba_mul_ADDNgs
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_z2_digits_data_V_address0,
        ce0 => p_z2_digits_data_V_ce0,
        we0 => p_z2_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0,
        q0 => p_z2_digits_data_V_q0);

    p_cross_mul_digits_da_U : component karastuba_mul_ADDNgs
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_cross_mul_digits_da_address0,
        ce0 => p_cross_mul_digits_da_ce0,
        we0 => p_cross_mul_digits_da_we0,
        d0 => grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0,
        q0 => p_cross_mul_digits_da_q0);

    grp_karastuba_mul_templa_fu_462 : component karastuba_mul_templa
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_fu_462_ap_start,
        ap_done => grp_karastuba_mul_templa_fu_462_ap_done,
        ap_idle => grp_karastuba_mul_templa_fu_462_ap_idle,
        ap_ready => grp_karastuba_mul_templa_fu_462_ap_ready,
        lhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0,
        lhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0,
        lhs0_tmp_digits_data_V_q0 => lhs0_tmp_digits_data_q0,
        lhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0,
        lhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0,
        lhs1_tmp_digits_data_V_q0 => lhs1_tmp_digits_data_q0,
        rhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0,
        rhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0,
        rhs0_tmp_digits_data_V_q0 => rhs0_tmp_digits_data_q0,
        rhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0,
        rhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0,
        rhs1_tmp_digits_data_V_q0 => rhs1_tmp_digits_data_q0,
        cross_mul_tmp_bits => grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits,
        cross_mul_tmp_bits_ap_vld => grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld,
        cross_mul_digits_data_V_address0 => grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_we0 => grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0,
        cross_mul_digits_data_V_d0 => grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_d0);

    grp_karastuba_mul_templa_4_fu_472 : component karastuba_mul_templa_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0,
        lhs_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d0,
        lhs_digits_data_V_q0 => lhs0_digits_data_V_q0,
        lhs_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we0,
        lhs_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address1,
        lhs_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce1,
        lhs_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_d1,
        lhs_digits_data_V_q1 => ap_const_lv64_0,
        lhs_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_we1,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0,
        rhs_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d0,
        rhs_digits_data_V_q0 => rhs0_digits_data_V_q0,
        rhs_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we0,
        rhs_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address1,
        rhs_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce1,
        rhs_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_d1,
        rhs_digits_data_V_q1 => ap_const_lv64_0,
        rhs_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_we1,
        res_tmp_bits => grp_karastuba_mul_templa_4_fu_472_res_tmp_bits,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d0,
        res_digits_data_V_q0 => ap_const_lv64_0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_d1,
        res_digits_data_V_q1 => ap_const_lv64_0,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we1,
        lhs_tmp_bits_read_ap_vld => ap_const_logic_1,
        rhs_tmp_bits_read_ap_vld => ap_const_logic_1,
        ap_start => grp_karastuba_mul_templa_4_fu_472_ap_start,
        res_tmp_bits_ap_vld => grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld,
        ap_done => grp_karastuba_mul_templa_4_fu_472_ap_done,
        ap_ready => grp_karastuba_mul_templa_4_fu_472_ap_ready,
        ap_idle => grp_karastuba_mul_templa_4_fu_472_ap_idle,
        ap_continue => grp_karastuba_mul_templa_4_fu_472_ap_continue);

    grp_karastuba_mul_templa_4_fu_484 : component karastuba_mul_templa_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0,
        lhs_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d0,
        lhs_digits_data_V_q0 => lhs1_digits_data_V_q0,
        lhs_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we0,
        lhs_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address1,
        lhs_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce1,
        lhs_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_d1,
        lhs_digits_data_V_q1 => ap_const_lv64_0,
        lhs_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_we1,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0,
        rhs_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d0,
        rhs_digits_data_V_q0 => rhs1_digits_data_V_q0,
        rhs_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we0,
        rhs_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address1,
        rhs_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce1,
        rhs_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_d1,
        rhs_digits_data_V_q1 => ap_const_lv64_0,
        rhs_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_we1,
        res_tmp_bits => grp_karastuba_mul_templa_4_fu_484_res_tmp_bits,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d0,
        res_digits_data_V_q0 => ap_const_lv64_0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_d1,
        res_digits_data_V_q1 => ap_const_lv64_0,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we1,
        lhs_tmp_bits_read_ap_vld => ap_const_logic_1,
        rhs_tmp_bits_read_ap_vld => ap_const_logic_1,
        ap_start => grp_karastuba_mul_templa_4_fu_484_ap_start,
        res_tmp_bits_ap_vld => grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld,
        ap_done => grp_karastuba_mul_templa_4_fu_484_ap_done,
        ap_ready => grp_karastuba_mul_templa_4_fu_484_ap_ready,
        ap_idle => grp_karastuba_mul_templa_4_fu_484_ap_idle,
        ap_continue => grp_karastuba_mul_templa_4_fu_484_ap_continue);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state6)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state6);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state10)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state10);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state14) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state14)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state14);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp4_exit_iter0_state20) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_enable_reg_pp4_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp4_exit_iter0_state20)) then 
                        ap_enable_reg_pp4_iter1 <= (ap_const_logic_1 xor ap_condition_pp4_exit_iter0_state20);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp4_iter1 <= ap_enable_reg_pp4_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp4_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp4_stage0_subdone)) then 
                    ap_enable_reg_pp4_iter2 <= ap_enable_reg_pp4_iter1;
                elsif (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_enable_reg_pp4_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp5_exit_iter0_state24) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    ap_enable_reg_pp5_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp5_exit_iter0_state24)) then 
                        ap_enable_reg_pp5_iter1 <= (ap_const_logic_1 xor ap_condition_pp5_exit_iter0_state24);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp5_iter1 <= ap_enable_reg_pp5_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp5_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp5_stage0_subdone)) then 
                    ap_enable_reg_pp5_iter2 <= ap_enable_reg_pp5_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                    ap_enable_reg_pp5_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp6_exit_iter0_state28) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_enable_reg_pp6_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp6_exit_iter0_state28)) then 
                        ap_enable_reg_pp6_iter1 <= (ap_const_logic_1 xor ap_condition_pp6_exit_iter0_state28);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp6_iter1 <= ap_enable_reg_pp6_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp6_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp6_stage0_subdone)) then 
                    ap_enable_reg_pp6_iter2 <= ap_enable_reg_pp6_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                    ap_enable_reg_pp6_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= ap_const_logic_0;
                elsif ((grp_karastuba_mul_templa_4_fu_472_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= ap_const_logic_0;
                elsif ((grp_karastuba_mul_templa_4_fu_472_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= ap_const_logic_0;
                elsif ((grp_karastuba_mul_templa_4_fu_484_ap_done = ap_const_logic_1)) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= ap_const_logic_0;
                elsif ((grp_karastuba_mul_templa_4_fu_484_ap_ready = ap_const_logic_1)) then 
                    ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_4_fu_472_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_4_fu_472_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_4_fu_472_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_4_fu_484_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state18) or ((ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state19)))) then 
                    grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_4_fu_484_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_4_fu_484_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_fu_462_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_fu_462_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
                    grp_karastuba_mul_templa_fu_462_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_fu_462_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_fu_462_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i1_0_reg_394 <= ap_const_lv6_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln267_reg_739 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                i1_0_reg_394 <= i_17_reg_743;
            end if; 
        end if;
    end process;

    i2_0_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i2_0_reg_406 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_fu_560_p2 = ap_const_lv1_0))) then 
                i2_0_reg_406 <= i_18_fu_566_p2;
            end if; 
        end if;
    end process;

    i3_0_reg_417_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i3_0_reg_417 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln277_reg_779 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
                i3_0_reg_417 <= i_19_reg_783;
            end if; 
        end if;
    end process;

    i4_0_reg_429_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (icmp_ln294_fu_621_p2 = ap_const_lv1_0))) then 
                i4_0_reg_429 <= i_20_fu_627_p2;
            elsif (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                i4_0_reg_429 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i5_0_reg_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (icmp_ln300_fu_641_p2 = ap_const_lv1_0))) then 
                i5_0_reg_440 <= i_21_fu_647_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                i5_0_reg_440 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i6_0_reg_451_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (icmp_ln306_fu_661_p2 = ap_const_lv1_0))) then 
                i6_0_reg_451 <= i_22_fu_667_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
                i6_0_reg_451 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    i_0_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln262_fu_514_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                i_0_reg_383 <= i_fu_520_p2;
            elsif ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_383 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    p_cross_mul_tmp_bits_fu_120_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_cross_mul_tmp_bits_fu_120 <= ap_const_lv32_0;
            elsif (((grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_cross_mul_tmp_bits_fu_120 <= grp_karastuba_mul_templa_fu_462_cross_mul_tmp_bits;
            end if; 
        end if;
    end process;

    p_z0_tmp_bits_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_z0_tmp_bits_fu_104 <= ap_const_lv32_0;
            elsif (((grp_karastuba_mul_templa_4_fu_472_res_tmp_bits_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_z0_tmp_bits_fu_104 <= grp_karastuba_mul_templa_4_fu_472_res_tmp_bits;
            end if; 
        end if;
    end process;

    p_z2_tmp_bits_fu_112_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                p_z2_tmp_bits_fu_112 <= ap_const_lv32_0;
            elsif (((grp_karastuba_mul_templa_4_fu_484_res_tmp_bits_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
                p_z2_tmp_bits_fu_112 <= grp_karastuba_mul_templa_4_fu_484_res_tmp_bits;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                i1_0_reg_394_pp1_iter1_reg <= i1_0_reg_394;
                icmp_ln267_reg_739 <= icmp_ln267_fu_531_p2;
                icmp_ln267_reg_739_pp1_iter1_reg <= icmp_ln267_reg_739;
                    zext_ln270_1_reg_748_pp1_iter1_reg(5 downto 0) <= zext_ln270_1_reg_748(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                i3_0_reg_417_pp3_iter1_reg <= i3_0_reg_417;
                icmp_ln277_reg_779 <= icmp_ln277_fu_577_p2;
                icmp_ln277_reg_779_pp3_iter1_reg <= icmp_ln277_reg_779;
                    zext_ln280_1_reg_788_pp3_iter1_reg(5 downto 0) <= zext_ln280_1_reg_788(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                i_17_reg_743 <= i_17_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                i_19_reg_783 <= i_19_fu_583_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln262_reg_718 <= icmp_ln262_fu_514_p2;
                icmp_ln262_reg_718_pp0_iter1_reg <= icmp_ln262_reg_718;
                    zext_ln265_reg_727_pp0_iter1_reg(5 downto 0) <= zext_ln265_reg_727(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln272_reg_758 <= icmp_ln272_fu_560_p2;
                icmp_ln272_reg_758_pp2_iter1_reg <= icmp_ln272_reg_758;
                    zext_ln275_reg_767_pp2_iter1_reg(5 downto 0) <= zext_ln275_reg_767(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then
                icmp_ln294_reg_798 <= icmp_ln294_fu_621_p2;
                icmp_ln294_reg_798_pp4_iter1_reg <= icmp_ln294_reg_798;
                    zext_ln297_reg_807_pp4_iter1_reg(6 downto 0) <= zext_ln297_reg_807(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then
                icmp_ln300_reg_827 <= icmp_ln300_fu_641_p2;
                icmp_ln300_reg_827_pp5_iter1_reg <= icmp_ln300_reg_827;
                    zext_ln303_reg_836_pp5_iter1_reg(6 downto 0) <= zext_ln303_reg_836(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then
                icmp_ln306_reg_856 <= icmp_ln306_fu_661_p2;
                icmp_ln306_reg_856_pp6_iter1_reg <= icmp_ln306_reg_856;
                    zext_ln309_reg_865_pp6_iter1_reg(6 downto 0) <= zext_ln309_reg_865(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (icmp_ln306_reg_856 = ap_const_lv1_0))) then
                p_cross_mul_digits_da_6_reg_875 <= p_cross_mul_digits_da_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (icmp_ln294_reg_798 = ap_const_lv1_0))) then
                p_z0_digits_data_V_lo_reg_817 <= p_z0_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                p_z0_tmp_bits_load_reg_822 <= p_z0_tmp_bits_fu_104;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (icmp_ln300_reg_827 = ap_const_lv1_0))) then
                p_z2_digits_data_V_lo_reg_846 <= p_z2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                p_z2_tmp_bits_load_reg_851 <= p_z2_tmp_bits_fu_112;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln267_reg_739 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln262_reg_718 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then
                reg_496 <= lhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_reg_758 = ap_const_lv1_0)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln277_reg_779 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then
                reg_505 <= rhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln262_fu_514_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln265_reg_727(5 downto 0) <= zext_ln265_fu_526_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln267_fu_531_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                    zext_ln270_1_reg_748(5 downto 0) <= zext_ln270_1_fu_549_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_fu_560_p2 = ap_const_lv1_0))) then
                    zext_ln275_reg_767(5 downto 0) <= zext_ln275_fu_572_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln277_fu_577_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                    zext_ln280_1_reg_788(5 downto 0) <= zext_ln280_1_fu_595_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0) and (icmp_ln294_fu_621_p2 = ap_const_lv1_0))) then
                    zext_ln297_reg_807(6 downto 0) <= zext_ln297_fu_633_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0) and (icmp_ln300_fu_641_p2 = ap_const_lv1_0))) then
                    zext_ln303_reg_836(6 downto 0) <= zext_ln303_fu_653_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0) and (icmp_ln306_fu_661_p2 = ap_const_lv1_0))) then
                    zext_ln309_reg_865(6 downto 0) <= zext_ln309_fu_673_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln265_reg_727(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln265_reg_727_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln270_1_reg_748(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln270_1_reg_748_pp1_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln275_reg_767(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln275_reg_767_pp2_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln280_1_reg_788(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln280_1_reg_788_pp3_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln297_reg_807(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln297_reg_807_pp4_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln303_reg_836(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln303_reg_836_pp5_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln309_reg_865(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln309_reg_865_pp6_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, icmp_ln262_fu_514_p2, ap_enable_reg_pp0_iter0, icmp_ln267_fu_531_p2, ap_enable_reg_pp1_iter0, icmp_ln272_fu_560_p2, ap_enable_reg_pp2_iter0, icmp_ln277_fu_577_p2, ap_enable_reg_pp3_iter0, icmp_ln294_fu_621_p2, ap_enable_reg_pp4_iter0, icmp_ln300_fu_641_p2, ap_enable_reg_pp5_iter0, icmp_ln306_fu_661_p2, ap_enable_reg_pp6_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter2, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter2, ap_CS_fsm_state19, ap_block_state19_on_subcall_done, ap_block_pp4_stage0_subdone, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2, ap_block_pp5_stage0_subdone, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2, ap_block_pp6_stage0_subdone, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln262_fu_514_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln262_fu_514_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln267_fu_531_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln267_fu_531_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln272_fu_560_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln272_fu_560_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln277_fu_577_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln277_fu_577_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_pp4_stage0 => 
                if ((not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (icmp_ln294_fu_621_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                elsif ((((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp4_stage0_subdone) and (icmp_ln294_fu_621_p2 = ap_const_lv1_1) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp4_stage0;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
            when ap_ST_fsm_pp5_stage0 => 
                if ((not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (icmp_ln300_fu_641_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                elsif ((((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp5_stage0_subdone) and (icmp_ln300_fu_641_p2 = ap_const_lv1_1) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp5_stage0;
                end if;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
            when ap_ST_fsm_pp6_stage0 => 
                if ((not(((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (icmp_ln306_fu_661_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                elsif ((((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1)) or ((ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp6_stage0_subdone) and (icmp_ln306_fu_661_p2 = ap_const_lv1_1) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp6_stage0;
                end if;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(7);
    ap_CS_fsm_pp4_stage0 <= ap_CS_fsm(11);
    ap_CS_fsm_pp5_stage0 <= ap_CS_fsm(13);
    ap_CS_fsm_pp6_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state13 <= ap_CS_fsm(6);
    ap_CS_fsm_state17 <= ap_CS_fsm(8);
    ap_CS_fsm_state18 <= ap_CS_fsm(9);
    ap_CS_fsm_state19 <= ap_CS_fsm(10);
    ap_CS_fsm_state23 <= ap_CS_fsm(12);
    ap_CS_fsm_state27 <= ap_CS_fsm(14);
    ap_CS_fsm_state31 <= ap_CS_fsm(16);
    ap_CS_fsm_state5 <= ap_CS_fsm(2);
    ap_CS_fsm_state9 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp4_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp5_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp6_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state19_on_subcall_done_assign_proc : process(ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready, ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done, ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready, ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done, grp_karastuba_mul_templa_fu_462_ap_done)
    begin
                ap_block_state19_on_subcall_done <= ((grp_karastuba_mul_templa_fu_462_ap_done = ap_const_logic_0) or ((ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready and ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done) = ap_const_logic_0) or ((ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready and ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done) = ap_const_logic_0));
    end process;

        ap_block_state20_pp4_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp4_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp4_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp5_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp5_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp5_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp6_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp6_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp6_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln262_fu_514_p2)
    begin
        if ((icmp_ln262_fu_514_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state6_assign_proc : process(icmp_ln267_fu_531_p2)
    begin
        if ((icmp_ln267_fu_531_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state10_assign_proc : process(icmp_ln272_fu_560_p2)
    begin
        if ((icmp_ln272_fu_560_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state10 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state14_assign_proc : process(icmp_ln277_fu_577_p2)
    begin
        if ((icmp_ln277_fu_577_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state14 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state14 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp4_exit_iter0_state20_assign_proc : process(icmp_ln294_fu_621_p2)
    begin
        if ((icmp_ln294_fu_621_p2 = ap_const_lv1_1)) then 
            ap_condition_pp4_exit_iter0_state20 <= ap_const_logic_1;
        else 
            ap_condition_pp4_exit_iter0_state20 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp5_exit_iter0_state24_assign_proc : process(icmp_ln300_fu_641_p2)
    begin
        if ((icmp_ln300_fu_641_p2 = ap_const_lv1_1)) then 
            ap_condition_pp5_exit_iter0_state24 <= ap_const_logic_1;
        else 
            ap_condition_pp5_exit_iter0_state24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp6_exit_iter0_state28_assign_proc : process(icmp_ln306_fu_661_p2)
    begin
        if ((icmp_ln306_fu_661_p2 = ap_const_lv1_1)) then 
            ap_condition_pp6_exit_iter0_state28 <= ap_const_logic_1;
        else 
            ap_condition_pp6_exit_iter0_state28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);
    ap_enable_pp4 <= (ap_idle_pp4 xor ap_const_logic_1);
    ap_enable_pp5 <= (ap_idle_pp5 xor ap_const_logic_1);
    ap_enable_pp6 <= (ap_idle_pp6 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp4_assign_proc : process(ap_enable_reg_pp4_iter0, ap_enable_reg_pp4_iter1, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_enable_reg_pp4_iter2 = ap_const_logic_0) and (ap_enable_reg_pp4_iter1 = ap_const_logic_0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_0))) then 
            ap_idle_pp4 <= ap_const_logic_1;
        else 
            ap_idle_pp4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp5_assign_proc : process(ap_enable_reg_pp5_iter0, ap_enable_reg_pp5_iter1, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_enable_reg_pp5_iter2 = ap_const_logic_0) and (ap_enable_reg_pp5_iter1 = ap_const_logic_0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_0))) then 
            ap_idle_pp5 <= ap_const_logic_1;
        else 
            ap_idle_pp5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp6_assign_proc : process(ap_enable_reg_pp6_iter0, ap_enable_reg_pp6_iter1, ap_enable_reg_pp6_iter2)
    begin
        if (((ap_enable_reg_pp6_iter2 = ap_const_logic_0) and (ap_enable_reg_pp6_iter1 = ap_const_logic_0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_0))) then 
            ap_idle_pp6 <= ap_const_logic_1;
        else 
            ap_idle_pp6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_i1_0_phi_fu_398_p4_assign_proc : process(i1_0_reg_394, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, icmp_ln267_reg_739, i_17_reg_743, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln267_reg_739 = ap_const_lv1_0))) then 
            ap_phi_mux_i1_0_phi_fu_398_p4 <= i_17_reg_743;
        else 
            ap_phi_mux_i1_0_phi_fu_398_p4 <= i1_0_reg_394;
        end if; 
    end process;


    ap_phi_mux_i3_0_phi_fu_421_p4_assign_proc : process(i3_0_reg_417, ap_CS_fsm_pp3_stage0, ap_enable_reg_pp3_iter1, icmp_ln277_reg_779, i_19_reg_783, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (icmp_ln277_reg_779 = ap_const_lv1_0))) then 
            ap_phi_mux_i3_0_phi_fu_421_p4 <= i_19_reg_783;
        else 
            ap_phi_mux_i3_0_phi_fu_421_p4 <= i3_0_reg_417;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= p_z0_tmp_bits_load_reg_822;
    ap_return_1 <= p_z2_tmp_bits_load_reg_851;
    ap_return_2 <= p_cross_mul_tmp_bits_fu_120;
    ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_done <= (grp_karastuba_mul_templa_4_fu_472_ap_done or ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_done);
    ap_sync_grp_karastuba_mul_templa_4_fu_472_ap_ready <= (grp_karastuba_mul_templa_4_fu_472_ap_ready or ap_sync_reg_grp_karastuba_mul_templa_4_fu_472_ap_ready);
    ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_done <= (grp_karastuba_mul_templa_4_fu_484_ap_done or ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_done);
    ap_sync_grp_karastuba_mul_templa_4_fu_484_ap_ready <= (grp_karastuba_mul_templa_4_fu_484_ap_ready or ap_sync_reg_grp_karastuba_mul_templa_4_fu_484_ap_ready);
    cross_mul_digits_data_V_address0 <= zext_ln309_reg_865_pp6_iter1_reg(6 - 1 downto 0);

    cross_mul_digits_data_V_ce0_assign_proc : process(ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1))) then 
            cross_mul_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            cross_mul_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    cross_mul_digits_data_V_d0 <= p_cross_mul_digits_da_6_reg_875;

    cross_mul_digits_data_V_we0_assign_proc : process(ap_block_pp6_stage0_11001, icmp_ln306_reg_856_pp6_iter1_reg, ap_enable_reg_pp6_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter2 = ap_const_logic_1) and (icmp_ln306_reg_856_pp6_iter1_reg = ap_const_lv1_0))) then 
            cross_mul_digits_data_V_we0 <= ap_const_logic_1;
        else 
            cross_mul_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    grp_karastuba_mul_templa_4_fu_472_ap_continue_assign_proc : process(ap_CS_fsm_state19, ap_block_state19_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_karastuba_mul_templa_4_fu_472_ap_continue <= ap_const_logic_1;
        else 
            grp_karastuba_mul_templa_4_fu_472_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_karastuba_mul_templa_4_fu_472_ap_start <= grp_karastuba_mul_templa_4_fu_472_ap_start_reg;

    grp_karastuba_mul_templa_4_fu_484_ap_continue_assign_proc : process(ap_CS_fsm_state19, ap_block_state19_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state19_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state19))) then 
            grp_karastuba_mul_templa_4_fu_484_ap_continue <= ap_const_logic_1;
        else 
            grp_karastuba_mul_templa_4_fu_484_ap_continue <= ap_const_logic_0;
        end if; 
    end process;

    grp_karastuba_mul_templa_4_fu_484_ap_start <= grp_karastuba_mul_templa_4_fu_484_ap_start_reg;
    grp_karastuba_mul_templa_fu_462_ap_start <= grp_karastuba_mul_templa_fu_462_ap_start_reg;
    i_17_fu_537_p2 <= std_logic_vector(unsigned(ap_phi_mux_i1_0_phi_fu_398_p4) + unsigned(ap_const_lv6_1));
    i_18_fu_566_p2 <= std_logic_vector(unsigned(i2_0_reg_406) + unsigned(ap_const_lv6_1));
    i_19_fu_583_p2 <= std_logic_vector(unsigned(ap_phi_mux_i3_0_phi_fu_421_p4) + unsigned(ap_const_lv6_1));
    i_20_fu_627_p2 <= std_logic_vector(unsigned(i4_0_reg_429) + unsigned(ap_const_lv7_1));
    i_21_fu_647_p2 <= std_logic_vector(unsigned(i5_0_reg_440) + unsigned(ap_const_lv7_1));
    i_22_fu_667_p2 <= std_logic_vector(unsigned(i6_0_reg_451) + unsigned(ap_const_lv7_1));
    i_fu_520_p2 <= std_logic_vector(unsigned(i_0_reg_383) + unsigned(ap_const_lv6_1));
    icmp_ln262_fu_514_p2 <= "1" when (i_0_reg_383 = ap_const_lv6_20) else "0";
    icmp_ln267_fu_531_p2 <= "1" when (ap_phi_mux_i1_0_phi_fu_398_p4 = ap_const_lv6_20) else "0";
    icmp_ln272_fu_560_p2 <= "1" when (i2_0_reg_406 = ap_const_lv6_20) else "0";
    icmp_ln277_fu_577_p2 <= "1" when (ap_phi_mux_i3_0_phi_fu_421_p4 = ap_const_lv6_20) else "0";
    icmp_ln294_fu_621_p2 <= "1" when (i4_0_reg_429 = ap_const_lv7_40) else "0";
    icmp_ln300_fu_641_p2 <= "1" when (i5_0_reg_440 = ap_const_lv7_40) else "0";
    icmp_ln306_fu_661_p2 <= "1" when (i6_0_reg_451 = ap_const_lv7_40) else "0";

    inter_lhs_digits_data_V_address0_assign_proc : process(zext_ln265_reg_727_pp0_iter1_reg, zext_ln270_1_reg_748_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2, ap_block_pp1_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            inter_lhs_digits_data_V_address0 <= zext_ln270_1_reg_748_pp1_iter1_reg(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            inter_lhs_digits_data_V_address0 <= zext_ln265_reg_727_pp0_iter1_reg(6 - 1 downto 0);
        else 
            inter_lhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    inter_lhs_digits_data_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            inter_lhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            inter_lhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inter_lhs_digits_data_V_d0 <= reg_496;

    inter_lhs_digits_data_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001, icmp_ln262_reg_718_pp0_iter1_reg, icmp_ln267_reg_739_pp1_iter1_reg, ap_enable_reg_pp0_iter2, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln262_reg_718_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln267_reg_739_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            inter_lhs_digits_data_V_we0 <= ap_const_logic_1;
        else 
            inter_lhs_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    inter_rhs_digits_data_V_address0_assign_proc : process(zext_ln275_reg_767_pp2_iter1_reg, zext_ln280_1_reg_788_pp3_iter1_reg, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2, ap_block_pp3_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            inter_rhs_digits_data_V_address0 <= zext_ln280_1_reg_788_pp3_iter1_reg(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            inter_rhs_digits_data_V_address0 <= zext_ln275_reg_767_pp2_iter1_reg(6 - 1 downto 0);
        else 
            inter_rhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    inter_rhs_digits_data_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            inter_rhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            inter_rhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    inter_rhs_digits_data_V_d0 <= reg_505;

    inter_rhs_digits_data_V_we0_assign_proc : process(ap_block_pp3_stage0_11001, ap_block_pp2_stage0_11001, icmp_ln272_reg_758_pp2_iter1_reg, icmp_ln277_reg_779_pp3_iter1_reg, ap_enable_reg_pp2_iter2, ap_enable_reg_pp3_iter2)
    begin
        if ((((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_reg_758_pp2_iter1_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln277_reg_779_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            inter_rhs_digits_data_V_we0 <= ap_const_logic_1;
        else 
            inter_rhs_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_digits_data_V_address0_assign_proc : process(zext_ln265_reg_727_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lhs0_digits_data_V_address0 <= zext_ln265_reg_727_pp0_iter1_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_address0;
        else 
            lhs0_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    lhs0_digits_data_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_472_lhs_digits_data_V_ce0;
        else 
            lhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_digits_data_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln262_reg_718_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln262_reg_718_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_address0_assign_proc : process(zext_ln265_reg_727_pp0_iter1_reg, ap_enable_reg_pp0_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            lhs0_tmp_digits_data_address0 <= zext_ln265_reg_727_pp0_iter1_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_address0;
        else 
            lhs0_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    lhs0_tmp_digits_data_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_462_lhs0_tmp_digits_data_V_ce0;
        else 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln262_reg_718_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln262_reg_718_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_address0_assign_proc : process(ap_enable_reg_pp1_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0, ap_block_pp1_stage0, zext_ln270_fu_554_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            lhs1_digits_data_V_address0 <= zext_ln270_fu_554_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_address0;
        else 
            lhs1_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    lhs1_digits_data_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            lhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_484_lhs_digits_data_V_ce0;
        else 
            lhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln267_reg_739_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln267_reg_739_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            lhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_address0_assign_proc : process(ap_enable_reg_pp1_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0, ap_block_pp1_stage0, zext_ln270_fu_554_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            lhs1_tmp_digits_data_address0 <= zext_ln270_fu_554_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_address0;
        else 
            lhs1_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    lhs1_tmp_digits_data_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            lhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_462_lhs1_tmp_digits_data_V_ce0;
        else 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln267_reg_739_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (icmp_ln267_reg_739_pp1_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln265_fu_526_p1, ap_enable_reg_pp1_iter0, zext_ln270_1_fu_549_p1, ap_block_pp1_stage0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            lhs_digits_data_V_address0 <= zext_ln270_1_fu_549_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            lhs_digits_data_V_address0 <= zext_ln265_fu_526_p1(6 - 1 downto 0);
        else 
            lhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    lhs_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            lhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            lhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_cross_mul_digits_da_address0_assign_proc : process(ap_CS_fsm_pp6_stage0, ap_enable_reg_pp6_iter0, zext_ln309_fu_673_p1, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0, ap_block_pp6_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            p_cross_mul_digits_da_address0 <= zext_ln309_fu_673_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_cross_mul_digits_da_address0 <= grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_address0;
        else 
            p_cross_mul_digits_da_address0 <= "XXXXXX";
        end if; 
    end process;


    p_cross_mul_digits_da_ce0_assign_proc : process(ap_CS_fsm_pp6_stage0, ap_block_pp6_stage0_11001, ap_enable_reg_pp6_iter0, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp6_stage0_11001) and (ap_enable_reg_pp6_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp6_stage0))) then 
            p_cross_mul_digits_da_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_cross_mul_digits_da_ce0 <= grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_ce0;
        else 
            p_cross_mul_digits_da_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_cross_mul_digits_da_we0_assign_proc : process(ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_cross_mul_digits_da_we0 <= grp_karastuba_mul_templa_fu_462_cross_mul_digits_data_V_we0;
        else 
            p_cross_mul_digits_da_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_z0_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_enable_reg_pp4_iter0, zext_ln297_fu_633_p1, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0, ap_block_pp4_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            p_z0_digits_data_V_address0 <= zext_ln297_fu_633_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_address0;
        else 
            p_z0_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    p_z0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp4_stage0, ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter0, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp4_stage0))) then 
            p_z0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_ce0;
        else 
            p_z0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_z0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z0_digits_data_V_we0 <= grp_karastuba_mul_templa_4_fu_472_res_digits_data_V_we0;
        else 
            p_z0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_z2_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_enable_reg_pp5_iter0, zext_ln303_fu_653_p1, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0, ap_block_pp5_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            p_z2_digits_data_V_address0 <= zext_ln303_fu_653_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z2_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_address0;
        else 
            p_z2_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    p_z2_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp5_stage0, ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter0, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp5_stage0))) then 
            p_z2_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z2_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_ce0;
        else 
            p_z2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    p_z2_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            p_z2_digits_data_V_we0 <= grp_karastuba_mul_templa_4_fu_484_res_digits_data_V_we0;
        else 
            p_z2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_address0_assign_proc : process(zext_ln275_reg_767_pp2_iter1_reg, ap_enable_reg_pp2_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            rhs0_digits_data_V_address0 <= zext_ln275_reg_767_pp2_iter1_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_address0;
        else 
            rhs0_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    rhs0_digits_data_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            rhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_472_rhs_digits_data_V_ce0;
        else 
            rhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln272_reg_758_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_reg_758_pp2_iter1_reg = ap_const_lv1_0))) then 
            rhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_address0_assign_proc : process(zext_ln275_reg_767_pp2_iter1_reg, ap_enable_reg_pp2_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            rhs0_tmp_digits_data_address0 <= zext_ln275_reg_767_pp2_iter1_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_address0;
        else 
            rhs0_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    rhs0_tmp_digits_data_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_462_rhs0_tmp_digits_data_V_ce0;
        else 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln272_reg_758_pp2_iter1_reg, ap_enable_reg_pp2_iter2)
    begin
        if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln272_reg_758_pp2_iter1_reg = ap_const_lv1_0))) then 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_address0_assign_proc : process(ap_enable_reg_pp3_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0, ap_block_pp3_stage0, zext_ln280_fu_600_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            rhs1_digits_data_V_address0 <= zext_ln280_fu_600_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_address0;
        else 
            rhs1_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    rhs1_digits_data_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            rhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_484_rhs_digits_data_V_ce0;
        else 
            rhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_779_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln277_reg_779_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            rhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_address0_assign_proc : process(ap_enable_reg_pp3_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0, ap_block_pp3_stage0, zext_ln280_fu_600_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_1))) then 
            rhs1_tmp_digits_data_address0 <= zext_ln280_fu_600_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_address0;
        else 
            rhs1_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    rhs1_tmp_digits_data_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_enable_reg_pp3_iter2, ap_CS_fsm_state19, grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            rhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_462_rhs1_tmp_digits_data_V_ce0;
        else 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_we0_assign_proc : process(ap_block_pp3_stage0_11001, icmp_ln277_reg_779_pp3_iter1_reg, ap_enable_reg_pp3_iter2)
    begin
        if (((ap_enable_reg_pp3_iter2 = ap_const_logic_1) and (icmp_ln277_reg_779_pp3_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, zext_ln275_fu_572_p1, ap_enable_reg_pp3_iter0, zext_ln280_1_fu_595_p1, ap_block_pp3_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            rhs_digits_data_V_address0 <= zext_ln280_1_fu_595_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            rhs_digits_data_V_address0 <= zext_ln275_fu_572_p1(6 - 1 downto 0);
        else 
            rhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    rhs_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0)
    begin
        if ((((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            rhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            rhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    xor_ln270_fu_543_p2 <= (ap_phi_mux_i1_0_phi_fu_398_p4 xor ap_const_lv6_20);
    xor_ln280_fu_589_p2 <= (ap_phi_mux_i3_0_phi_fu_421_p4 xor ap_const_lv6_20);
    z0_digits_data_V_address0 <= zext_ln297_reg_807_pp4_iter1_reg(6 - 1 downto 0);

    z0_digits_data_V_ce0_assign_proc : process(ap_block_pp4_stage0_11001, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1))) then 
            z0_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            z0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z0_digits_data_V_d0 <= p_z0_digits_data_V_lo_reg_817;

    z0_digits_data_V_we0_assign_proc : process(ap_block_pp4_stage0_11001, icmp_ln294_reg_798_pp4_iter1_reg, ap_enable_reg_pp4_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp4_stage0_11001) and (ap_enable_reg_pp4_iter2 = ap_const_logic_1) and (icmp_ln294_reg_798_pp4_iter1_reg = ap_const_lv1_0))) then 
            z0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            z0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z2_digits_data_V_address0 <= zext_ln303_reg_836_pp5_iter1_reg(6 - 1 downto 0);

    z2_digits_data_V_ce0_assign_proc : process(ap_block_pp5_stage0_11001, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1))) then 
            z2_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            z2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    z2_digits_data_V_d0 <= p_z2_digits_data_V_lo_reg_846;

    z2_digits_data_V_we0_assign_proc : process(ap_block_pp5_stage0_11001, icmp_ln300_reg_827_pp5_iter1_reg, ap_enable_reg_pp5_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp5_stage0_11001) and (ap_enable_reg_pp5_iter2 = ap_const_logic_1) and (icmp_ln300_reg_827_pp5_iter1_reg = ap_const_lv1_0))) then 
            z2_digits_data_V_we0 <= ap_const_logic_1;
        else 
            z2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln265_fu_526_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_383),64));
    zext_ln270_1_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln270_fu_543_p2),64));
    zext_ln270_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_394_pp1_iter1_reg),64));
    zext_ln275_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_reg_406),64));
    zext_ln280_1_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln280_fu_589_p2),64));
    zext_ln280_fu_600_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_417_pp3_iter1_reg),64));
    zext_ln297_fu_633_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i4_0_reg_429),64));
    zext_ln303_fu_653_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i5_0_reg_440),64));
    zext_ln309_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i6_0_reg_451),64));
end behav;
