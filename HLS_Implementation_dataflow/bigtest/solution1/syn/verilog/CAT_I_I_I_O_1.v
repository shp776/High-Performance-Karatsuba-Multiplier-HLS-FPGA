// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CAT_I_I_I_O_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        x0_digits_data_V_address0,
        x0_digits_data_V_ce0,
        x0_digits_data_V_q0,
        x1_tmp_bits_read,
        x1_digits_data_V_address0,
        x1_digits_data_V_ce0,
        x1_digits_data_V_q0,
        x2_digits_data_V_address0,
        x2_digits_data_V_ce0,
        x2_digits_data_V_q0,
        w_digits_data_V_address0,
        w_digits_data_V_ce0,
        w_digits_data_V_we0,
        w_digits_data_V_d0,
        w_digits_data_V_q0
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_pp0_stage0 = 14'd32;
parameter    ap_ST_fsm_pp0_stage1 = 14'd64;
parameter    ap_ST_fsm_state10 = 14'd128;
parameter    ap_ST_fsm_state11 = 14'd256;
parameter    ap_ST_fsm_state12 = 14'd512;
parameter    ap_ST_fsm_state13 = 14'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 14'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 14'd4096;
parameter    ap_ST_fsm_state18 = 14'd8192;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] x0_digits_data_V_address0;
output   x0_digits_data_V_ce0;
input  [63:0] x0_digits_data_V_q0;
input  [31:0] x1_tmp_bits_read;
output  [4:0] x1_digits_data_V_address0;
output   x1_digits_data_V_ce0;
input  [63:0] x1_digits_data_V_q0;
output  [4:0] x2_digits_data_V_address0;
output   x2_digits_data_V_ce0;
input  [63:0] x2_digits_data_V_q0;
output  [5:0] w_digits_data_V_address0;
output   w_digits_data_V_ce0;
output   w_digits_data_V_we0;
output  [63:0] w_digits_data_V_d0;
input  [63:0] w_digits_data_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg x0_digits_data_V_ce0;
reg x1_digits_data_V_ce0;
reg x2_digits_data_V_ce0;
reg[5:0] w_digits_data_V_address0;
reg w_digits_data_V_ce0;
reg w_digits_data_V_we0;
reg[63:0] w_digits_data_V_d0;

(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] p_0136_0_reg_174;
reg   [5:0] j1_0_reg_186;
reg   [5:0] i2_0_reg_198;
reg   [1:0] p_0136_2_reg_209;
reg   [6:0] j1_1_reg_221;
reg   [5:0] i3_0_reg_233;
reg   [63:0] reg_244;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln175_reg_499;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state15_pp1_stage1_iter0;
wire    ap_block_state17_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln191_reg_559;
wire   [6:0] j_fu_259_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln168_fu_248_p2;
wire   [0:0] icmp_ln170_fu_265_p2;
wire    ap_CS_fsm_state3;
wire   [5:0] i_fu_271_p2;
reg   [5:0] i_reg_479;
wire   [63:0] zext_ln170_fu_277_p1;
reg   [63:0] zext_ln170_reg_484;
reg   [63:0] x0_digits_data_V_loa_reg_494;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln175_fu_282_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln175_reg_499_pp0_iter1_reg;
wire   [5:0] i_35_fu_288_p2;
reg   [5:0] i_35_reg_503;
reg   [5:0] w_digits_data_V_addr_11_reg_513;
reg   [5:0] w_digits_data_V_addr_11_reg_513_pp0_iter1_reg;
reg   [63:0] x1_digits_data_V_loa_reg_518;
wire   [5:0] j_8_fu_304_p2;
reg   [5:0] j_8_reg_524;
wire   [64:0] tmp_V_35_fu_321_p2;
reg   [64:0] tmp_V_35_reg_529;
wire   [63:0] add_ln209_9_fu_333_p2;
reg   [63:0] add_ln209_9_reg_534;
reg    ap_enable_reg_pp0_iter1;
wire   [5:0] w_digits_data_V_addr_10_reg_544;
wire    ap_CS_fsm_state10;
wire   [32:0] add_ln209_fu_368_p2;
reg   [32:0] add_ln209_reg_549;
wire   [63:0] add_ln209_2_fu_377_p2;
reg   [63:0] add_ln209_2_reg_554;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln191_fu_383_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln191_reg_559_pp1_iter1_reg;
wire   [5:0] i_36_fu_389_p2;
reg   [5:0] i_36_reg_563;
reg   [5:0] w_digits_data_V_addr_12_reg_573;
reg   [5:0] w_digits_data_V_addr_12_reg_573_pp1_iter1_reg;
reg   [63:0] x2_digits_data_V_loa_reg_578;
wire   [6:0] j_9_fu_405_p2;
reg   [6:0] j_9_reg_584;
wire   [64:0] tmp_V_36_fu_422_p2;
reg   [64:0] tmp_V_36_reg_589;
wire   [63:0] add_ln209_10_fu_434_p2;
reg   [63:0] add_ln209_10_reg_594;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
wire    ap_block_pp0_stage1_subdone;
wire    ap_CS_fsm_state13;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
wire    ap_block_pp1_stage1_subdone;
reg   [6:0] j_0_reg_152;
reg   [5:0] i_0_reg_163;
wire    ap_CS_fsm_state5;
reg   [5:0] ap_phi_mux_j1_0_phi_fu_190_p4;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_i2_0_phi_fu_202_p4;
reg   [6:0] ap_phi_mux_j1_1_phi_fu_225_p4;
wire    ap_block_pp1_stage0;
reg   [5:0] ap_phi_mux_i3_0_phi_fu_237_p4;
wire   [63:0] zext_ln168_fu_254_p1;
wire   [63:0] zext_ln180_fu_294_p1;
wire   [63:0] zext_ln181_fu_299_p1;
wire   [63:0] zext_ln196_fu_395_p1;
wire   [63:0] zext_ln197_fu_400_p1;
wire    ap_block_pp0_stage1;
wire    ap_block_pp1_stage1;
wire   [64:0] zext_ln700_fu_314_p1;
wire   [64:0] zext_ln175_fu_310_p1;
wire   [63:0] zext_ln700_44_fu_317_p1;
wire   [63:0] add_ln209_19_fu_327_p2;
wire   [65:0] zext_ln700_45_fu_342_p1;
wire   [65:0] zext_ln700_43_fu_338_p1;
wire   [65:0] tmp_V_fu_345_p2;
wire   [32:0] zext_ln209_fu_365_p1;
wire   [32:0] zext_ln1468_fu_361_p1;
wire   [63:0] zext_ln209_3_fu_374_p1;
wire   [64:0] zext_ln700_46_fu_415_p1;
wire   [64:0] zext_ln191_fu_411_p1;
wire   [63:0] zext_ln700_48_fu_418_p1;
wire   [63:0] add_ln209_20_fu_428_p2;
wire   [65:0] zext_ln700_49_fu_443_p1;
wire   [65:0] zext_ln700_47_fu_439_p1;
wire   [65:0] tmp_V_34_fu_446_p2;
wire    ap_CS_fsm_state18;
reg   [13:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 14'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
        i2_0_reg_198 <= 6'd0;
    end else if (((icmp_ln175_reg_499 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i2_0_reg_198 <= i_35_reg_503;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i3_0_reg_233 <= i_36_reg_563;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i3_0_reg_233 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_248_p2 == 1'd1))) begin
        i_0_reg_163 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i_0_reg_163 <= i_reg_479;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
        j1_0_reg_186 <= 6'd16;
    end else if (((icmp_ln175_reg_499 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        j1_0_reg_186 <= j_8_reg_524;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j1_1_reg_221 <= j_9_reg_584;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        j1_1_reg_221 <= 7'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln168_fu_248_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_152 <= j_fu_259_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        j_0_reg_152 <= 7'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
        p_0136_0_reg_174 <= 2'd0;
    end else if (((icmp_ln175_reg_499_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        p_0136_0_reg_174 <= {{tmp_V_fu_345_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        p_0136_2_reg_209 <= {{tmp_V_34_fu_446_p2[65:64]}};
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        p_0136_2_reg_209 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln209_10_reg_594 <= add_ln209_10_fu_434_p2;
        tmp_V_36_reg_589 <= tmp_V_36_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln209_2_reg_554 <= add_ln209_2_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_reg_499 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln209_9_reg_534 <= add_ln209_9_fu_333_p2;
        tmp_V_35_reg_529 <= tmp_V_35_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        add_ln209_reg_549 <= add_ln209_fu_368_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_35_reg_503 <= i_35_fu_288_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_36_reg_563 <= i_36_fu_389_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_479 <= i_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln175_reg_499 <= icmp_ln175_fu_282_p2;
        icmp_ln175_reg_499_pp0_iter1_reg <= icmp_ln175_reg_499;
        w_digits_data_V_addr_11_reg_513_pp0_iter1_reg <= w_digits_data_V_addr_11_reg_513;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln191_reg_559 <= icmp_ln191_fu_383_p2;
        icmp_ln191_reg_559_pp1_iter1_reg <= icmp_ln191_reg_559;
        w_digits_data_V_addr_12_reg_573_pp1_iter1_reg <= w_digits_data_V_addr_12_reg_573;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_reg_499 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        j_8_reg_524 <= j_8_fu_304_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        j_9_reg_584 <= j_9_fu_405_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln175_reg_499 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln191_reg_559 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        reg_244 <= w_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_fu_282_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        w_digits_data_V_addr_11_reg_513 <= zext_ln181_fu_299_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_fu_383_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        w_digits_data_V_addr_12_reg_573 <= zext_ln197_fu_400_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        x0_digits_data_V_loa_reg_494 <= x0_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_reg_499 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        x1_digits_data_V_loa_reg_518 <= x1_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        x2_digits_data_V_loa_reg_578 <= x2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln170_fu_265_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln170_reg_484[5 : 0] <= zext_ln170_fu_277_p1[5 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln175_fu_282_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln191_fu_383_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln175_reg_499 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i2_0_phi_fu_202_p4 = i_35_reg_503;
    end else begin
        ap_phi_mux_i2_0_phi_fu_202_p4 = i2_0_reg_198;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i3_0_phi_fu_237_p4 = i_36_reg_563;
    end else begin
        ap_phi_mux_i3_0_phi_fu_237_p4 = i3_0_reg_233;
    end
end

always @ (*) begin
    if (((icmp_ln175_reg_499 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j1_0_phi_fu_190_p4 = j_8_reg_524;
    end else begin
        ap_phi_mux_j1_0_phi_fu_190_p4 = j1_0_reg_186;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_559 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j1_1_phi_fu_225_p4 = j_9_reg_584;
    end else begin
        ap_phi_mux_j1_1_phi_fu_225_p4 = j1_1_reg_221;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_12_reg_573_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        w_digits_data_V_address0 = zext_ln197_fu_400_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_10_reg_544;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        w_digits_data_V_address0 = 64'd48;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_11_reg_513_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_digits_data_V_address0 = zext_ln181_fu_299_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_digits_data_V_address0 = zext_ln170_reg_484;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_digits_data_V_address0 = zext_ln168_fu_254_p1;
    end else begin
        w_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        w_digits_data_V_ce0 = 1'b1;
    end else begin
        w_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        w_digits_data_V_d0 = add_ln209_10_reg_594;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        w_digits_data_V_d0 = add_ln209_2_reg_554;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        w_digits_data_V_d0 = add_ln209_9_reg_534;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        w_digits_data_V_d0 = x0_digits_data_V_loa_reg_494;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_digits_data_V_d0 = 64'd0;
    end else begin
        w_digits_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state13) | ((icmp_ln175_reg_499_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((icmp_ln168_fu_248_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln191_reg_559_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        w_digits_data_V_we0 = 1'b1;
    end else begin
        w_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        x0_digits_data_V_ce0 = 1'b1;
    end else begin
        x0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x1_digits_data_V_ce0 = 1'b1;
    end else begin
        x1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        x2_digits_data_V_ce0 = 1'b1;
    end else begin
        x2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln168_fu_248_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln170_fu_265_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln175_fu_282_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (icmp_ln175_fu_282_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln191_fu_383_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln191_fu_383_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln209_10_fu_434_p2 = (add_ln209_20_fu_428_p2 + x2_digits_data_V_loa_reg_578);

assign add_ln209_19_fu_327_p2 = (reg_244 + zext_ln700_44_fu_317_p1);

assign add_ln209_20_fu_428_p2 = (reg_244 + zext_ln700_48_fu_418_p1);

assign add_ln209_2_fu_377_p2 = (zext_ln209_3_fu_374_p1 + reg_244);

assign add_ln209_9_fu_333_p2 = (add_ln209_19_fu_327_p2 + x1_digits_data_V_loa_reg_518);

assign add_ln209_fu_368_p2 = (zext_ln209_fu_365_p1 + zext_ln1468_fu_361_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign i_35_fu_288_p2 = (ap_phi_mux_i2_0_phi_fu_202_p4 + 6'd1);

assign i_36_fu_389_p2 = (ap_phi_mux_i3_0_phi_fu_237_p4 + 6'd1);

assign i_fu_271_p2 = (i_0_reg_163 + 6'd1);

assign icmp_ln168_fu_248_p2 = ((j_0_reg_152 == 7'd64) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_265_p2 = ((i_0_reg_163 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_282_p2 = ((ap_phi_mux_i2_0_phi_fu_202_p4 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_383_p2 = ((ap_phi_mux_i3_0_phi_fu_237_p4 == 6'd32) ? 1'b1 : 1'b0);

assign j_8_fu_304_p2 = (j1_0_reg_186 + 6'd1);

assign j_9_fu_405_p2 = (j1_1_reg_221 + 7'd1);

assign j_fu_259_p2 = (j_0_reg_152 + 7'd1);

assign tmp_V_34_fu_446_p2 = (zext_ln700_49_fu_443_p1 + zext_ln700_47_fu_439_p1);

assign tmp_V_35_fu_321_p2 = (zext_ln700_fu_314_p1 + zext_ln175_fu_310_p1);

assign tmp_V_36_fu_422_p2 = (zext_ln700_46_fu_415_p1 + zext_ln191_fu_411_p1);

assign tmp_V_fu_345_p2 = (zext_ln700_45_fu_342_p1 + zext_ln700_43_fu_338_p1);

assign w_digits_data_V_addr_10_reg_544 = 64'd48;

assign x0_digits_data_V_address0 = zext_ln170_fu_277_p1;

assign x1_digits_data_V_address0 = zext_ln180_fu_294_p1;

assign x2_digits_data_V_address0 = zext_ln196_fu_395_p1;

assign zext_ln1468_fu_361_p1 = p_0136_0_reg_174;

assign zext_ln168_fu_254_p1 = j_0_reg_152;

assign zext_ln170_fu_277_p1 = i_0_reg_163;

assign zext_ln175_fu_310_p1 = p_0136_0_reg_174;

assign zext_ln180_fu_294_p1 = ap_phi_mux_i2_0_phi_fu_202_p4;

assign zext_ln181_fu_299_p1 = ap_phi_mux_j1_0_phi_fu_190_p4;

assign zext_ln191_fu_411_p1 = p_0136_2_reg_209;

assign zext_ln196_fu_395_p1 = ap_phi_mux_i3_0_phi_fu_237_p4;

assign zext_ln197_fu_400_p1 = ap_phi_mux_j1_1_phi_fu_225_p4;

assign zext_ln209_3_fu_374_p1 = add_ln209_reg_549;

assign zext_ln209_fu_365_p1 = x1_tmp_bits_read;

assign zext_ln700_43_fu_338_p1 = reg_244;

assign zext_ln700_44_fu_317_p1 = p_0136_0_reg_174;

assign zext_ln700_45_fu_342_p1 = tmp_V_35_reg_529;

assign zext_ln700_46_fu_415_p1 = x2_digits_data_V_loa_reg_578;

assign zext_ln700_47_fu_439_p1 = reg_244;

assign zext_ln700_48_fu_418_p1 = p_0136_2_reg_209;

assign zext_ln700_49_fu_443_p1 = tmp_V_36_reg_589;

assign zext_ln700_fu_314_p1 = x1_digits_data_V_loa_reg_518;

always @ (posedge ap_clk) begin
    zext_ln170_reg_484[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
end

endmodule //CAT_I_I_I_O_1
