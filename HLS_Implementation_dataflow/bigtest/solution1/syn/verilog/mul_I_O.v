// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module mul_I_O (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        u_tmp_bits_read,
        u_digits_data_V_address0,
        u_digits_data_V_ce0,
        u_digits_data_V_q0,
        v_tmp_bits_read,
        v_digits_data_V_address0,
        v_digits_data_V_ce0,
        v_digits_data_V_q0,
        w_digits_data_V_address0,
        w_digits_data_V_ce0,
        w_digits_data_V_we0,
        w_digits_data_V_d0,
        w_digits_data_V_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_pp0_stage0 = 19'd8;
parameter    ap_ST_fsm_pp0_stage1 = 19'd16;
parameter    ap_ST_fsm_pp0_stage2 = 19'd32;
parameter    ap_ST_fsm_pp0_stage3 = 19'd64;
parameter    ap_ST_fsm_state15 = 19'd128;
parameter    ap_ST_fsm_state16 = 19'd256;
parameter    ap_ST_fsm_state17 = 19'd512;
parameter    ap_ST_fsm_state18 = 19'd1024;
parameter    ap_ST_fsm_pp1_stage0 = 19'd2048;
parameter    ap_ST_fsm_pp1_stage1 = 19'd4096;
parameter    ap_ST_fsm_state23 = 19'd8192;
parameter    ap_ST_fsm_state24 = 19'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 19'd32768;
parameter    ap_ST_fsm_pp2_stage1 = 19'd65536;
parameter    ap_ST_fsm_state29 = 19'd131072;
parameter    ap_ST_fsm_state30 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] u_tmp_bits_read;
output  [2:0] u_digits_data_V_address0;
output   u_digits_data_V_ce0;
input  [63:0] u_digits_data_V_q0;
input  [1:0] v_tmp_bits_read;
output  [2:0] v_digits_data_V_address0;
output   v_digits_data_V_ce0;
input  [63:0] v_digits_data_V_q0;
output  [3:0] w_digits_data_V_address0;
output   w_digits_data_V_ce0;
output   w_digits_data_V_we0;
output  [63:0] w_digits_data_V_d0;
input  [63:0] w_digits_data_V_q0;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[2:0] u_digits_data_V_address0;
reg u_digits_data_V_ce0;
reg[2:0] v_digits_data_V_address0;
reg v_digits_data_V_ce0;
reg[3:0] w_digits_data_V_address0;
reg w_digits_data_V_ce0;
reg w_digits_data_V_we0;
reg[63:0] w_digits_data_V_d0;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [63:0] p_0176_1_reg_188;
reg   [3:0] i_0_reg_200;
reg   [1:0] p_0288_0_reg_211;
reg   [3:0] i2_0_reg_223;
reg   [4:0] j3_0_reg_234;
reg   [1:0] p_0356_0_reg_258;
reg   [3:0] i6_0_reg_270;
reg   [4:0] j7_0_reg_281;
reg   [63:0] reg_302;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state5_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state13_pp0_stage1_iter2;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] icmp_ln111_reg_694;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state20_pp1_stage1_iter0;
wire    ap_block_state22_pp1_stage1_iter1;
wire    ap_block_pp1_stage1_11001;
reg   [0:0] icmp_ln133_reg_767;
reg   [63:0] reg_306;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state26_pp2_stage1_iter0;
wire    ap_block_state28_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
reg   [0:0] icmp_ln147_reg_816;
reg   [63:0] reg_310;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_state4_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state12_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln111_reg_694_pp0_iter1_reg;
wire    ap_CS_fsm_state16;
wire   [4:0] j_fu_320_p2;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln108_fu_331_p2;
wire    ap_CS_fsm_state3;
wire   [3:0] j_2_fu_337_p2;
reg   [3:0] j_2_reg_680;
reg   [2:0] v_digits_data_V_addr_reg_685;
wire   [0:0] icmp_ln129_fu_348_p2;
wire   [0:0] icmp_ln111_fu_353_p2;
reg   [0:0] icmp_ln111_reg_694_pp0_iter2_reg;
wire   [3:0] add_ln111_fu_359_p2;
reg   [3:0] add_ln111_reg_698;
wire   [3:0] add_ln114_fu_365_p2;
reg   [3:0] add_ln114_reg_703;
reg   [3:0] add_ln114_reg_703_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state6_pp0_stage2_iter0;
wire    ap_block_state10_pp0_stage2_iter1;
wire    ap_block_state14_pp0_stage2_iter2;
wire    ap_block_pp0_stage2_11001;
wire   [127:0] grp_fu_384_p2;
reg   [127:0] mul_ln700_reg_723;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state7_pp0_stage3_iter0;
wire    ap_block_state11_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
reg   [3:0] w_digits_data_V_addr_1_reg_728;
wire   [127:0] add_ln700_fu_398_p2;
reg   [127:0] add_ln700_reg_733;
wire   [63:0] trunc_ln700_fu_403_p1;
reg   [63:0] trunc_ln700_reg_738;
wire   [63:0] add_ln209_1_fu_407_p2;
reg   [63:0] add_ln209_1_reg_743;
wire   [0:0] icmp_ln883_fu_431_p2;
reg   [0:0] icmp_ln883_reg_753;
wire    ap_CS_fsm_state15;
reg   [3:0] w_digits_data_V_addr_3_reg_757;
wire   [63:0] add_ln209_2_fu_448_p2;
reg   [63:0] add_ln209_2_reg_762;
wire    ap_CS_fsm_state17;
wire   [0:0] icmp_ln133_fu_454_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state19_pp1_stage0_iter0;
wire    ap_block_state21_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln133_reg_767_pp1_iter1_reg;
wire   [3:0] i_fu_460_p2;
reg   [3:0] i_reg_771;
reg   [3:0] w_digits_data_V_addr_2_reg_781;
reg   [3:0] w_digits_data_V_addr_2_reg_781_pp1_iter1_reg;
wire   [4:0] j_1_fu_476_p2;
reg   [4:0] j_1_reg_786;
wire   [64:0] tmp_V_4_fu_494_p2;
reg   [64:0] tmp_V_4_reg_791;
wire   [63:0] add_ln209_fu_506_p2;
reg   [63:0] add_ln209_reg_796;
reg    ap_enable_reg_pp1_iter1;
wire   [2:0] zext_ln143_fu_535_p1;
reg   [2:0] zext_ln143_reg_806;
wire    ap_CS_fsm_state24;
wire   [0:0] icmp_ln143_fu_539_p2;
wire   [0:0] icmp_ln147_fu_544_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state25_pp2_stage0_iter0;
wire    ap_block_state27_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln147_reg_816_pp2_iter1_reg;
wire   [3:0] i_1_fu_550_p2;
reg   [3:0] i_1_reg_820;
reg   [3:0] w_digits_data_V_addr_4_reg_830;
reg   [3:0] w_digits_data_V_addr_4_reg_830_pp2_iter1_reg;
wire   [4:0] j_3_fu_566_p2;
reg   [4:0] j_3_reg_835;
wire   [64:0] tmp_V_5_fu_584_p2;
reg   [64:0] tmp_V_5_reg_840;
wire   [63:0] add_ln209_3_fu_596_p2;
reg   [63:0] add_ln209_3_reg_845;
reg    ap_enable_reg_pp2_iter1;
wire   [2:0] add_ln155_fu_629_p2;
wire    ap_CS_fsm_state29;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state4;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state25;
wire    ap_block_pp2_stage1_subdone;
reg   [4:0] j_0_reg_165;
wire   [0:0] icmp_ln105_fu_314_p2;
reg   [3:0] j1_0_reg_176;
wire    ap_CS_fsm_state18;
reg   [3:0] ap_phi_mux_i_0_phi_fu_204_p4;
wire    ap_block_pp0_stage0;
reg   [3:0] ap_phi_mux_i2_0_phi_fu_227_p4;
wire    ap_block_pp1_stage0;
reg   [4:0] ap_phi_mux_j3_0_phi_fu_238_p4;
reg   [1:0] w_tmp_bits_0_reg_246;
wire    ap_CS_fsm_state23;
reg   [3:0] ap_phi_mux_i6_0_phi_fu_274_p4;
wire    ap_block_pp2_stage0;
reg   [4:0] ap_phi_mux_j7_0_phi_fu_285_p4;
reg   [2:0] w_tmp_bits_1_reg_293;
wire   [63:0] zext_ln105_fu_326_p1;
wire   [63:0] zext_ln116_fu_343_p1;
wire   [63:0] zext_ln116_1_fu_371_p1;
wire   [63:0] zext_ln116_2_fu_390_p1;
wire    ap_block_pp0_stage3;
wire   [63:0] zext_ln123_fu_443_p1;
wire   [63:0] zext_ln136_fu_466_p1;
wire   [63:0] zext_ln137_fu_471_p1;
wire   [63:0] zext_ln150_fu_556_p1;
wire   [63:0] zext_ln151_fu_561_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp1_stage1;
wire    ap_block_pp2_stage1;
wire   [63:0] grp_fu_384_p0;
wire   [63:0] grp_fu_384_p1;
wire   [127:0] zext_ln111_fu_394_p1;
wire    ap_block_pp0_stage1;
wire   [127:0] zext_ln700_2_fu_412_p1;
wire   [127:0] k_V_fu_416_p2;
wire   [3:0] xor_ln123_fu_437_p2;
wire   [64:0] zext_ln700_3_fu_486_p1;
wire   [64:0] zext_ln133_fu_482_p1;
wire   [63:0] zext_ln700_5_fu_490_p1;
wire   [63:0] add_ln209_4_fu_500_p2;
wire   [65:0] zext_ln700_6_fu_516_p1;
wire   [65:0] zext_ln700_4_fu_512_p1;
wire   [65:0] tmp_V_fu_519_p2;
wire   [64:0] zext_ln700_7_fu_576_p1;
wire   [64:0] zext_ln147_fu_572_p1;
wire   [63:0] zext_ln700_9_fu_580_p1;
wire   [63:0] add_ln209_5_fu_590_p2;
wire   [65:0] zext_ln700_10_fu_606_p1;
wire   [65:0] zext_ln700_8_fu_602_p1;
wire   [65:0] tmp_V_3_fu_609_p2;
wire   [2:0] zext_ln155_fu_625_p1;
wire    ap_CS_fsm_state30;
wire   [1:0] mul_ln157_fu_644_p0;
wire   [1:0] mul_ln157_fu_644_p1;
wire   [3:0] mul_ln157_fu_644_p2;
wire   [3:0] zext_ln157_fu_634_p1;
wire   [3:0] add_ln157_fu_650_p2;
reg   [3:0] ap_return_preg;
reg   [18:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [127:0] grp_fu_384_p00;
wire   [127:0] grp_fu_384_p10;
wire   [3:0] mul_ln157_fu_644_p00;
wire   [3:0] mul_ln157_fu_644_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 4'd0;
end

karastuba_mul_mulbkb #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 128 ))
karastuba_mul_mulbkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_384_p0),
    .din1(grp_fu_384_p1),
    .ce(1'b1),
    .dout(grp_fu_384_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state4) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln108_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln108_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state25) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            ap_return_preg <= add_ln157_fu_650_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
        i2_0_reg_223 <= 4'd0;
    end else if (((icmp_ln133_reg_767 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_0_reg_223 <= i_reg_771;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        i6_0_reg_270 <= 4'd0;
    end else if (((icmp_ln147_reg_816 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i6_0_reg_270 <= i_1_reg_820;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_200 <= 4'd0;
    end else if (((icmp_ln111_reg_694 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_200 <= add_ln111_reg_698;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln105_fu_314_p2 == 1'd1))) begin
        j1_0_reg_176 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        j1_0_reg_176 <= j_2_reg_680;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
        j3_0_reg_234 <= 5'd8;
    end else if (((icmp_ln133_reg_767 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        j3_0_reg_234 <= j_1_reg_786;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        j7_0_reg_281 <= 5'd8;
    end else if (((icmp_ln147_reg_816 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        j7_0_reg_281 <= j_3_reg_835;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln105_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_165 <= j_fu_320_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        j_0_reg_165 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        p_0176_1_reg_188 <= 64'd0;
    end else if (((icmp_ln111_reg_694_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0176_1_reg_188 <= {{k_V_fu_416_p2[127:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
        p_0288_0_reg_211 <= 2'd0;
    end else if (((icmp_ln133_reg_767_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        p_0288_0_reg_211 <= {{tmp_V_fu_519_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        p_0356_0_reg_258 <= 2'd0;
    end else if (((icmp_ln147_reg_816_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        p_0356_0_reg_258 <= {{tmp_V_3_fu_609_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        w_tmp_bits_0_reg_246 <= p_0288_0_reg_211;
    end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_348_p2 == 1'd1) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
        w_tmp_bits_0_reg_246 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        w_tmp_bits_1_reg_293 <= add_ln155_fu_629_p2;
    end else if (((1'b1 == ap_CS_fsm_state24) & (icmp_ln143_fu_539_p2 == 1'd1))) begin
        w_tmp_bits_1_reg_293 <= zext_ln143_fu_535_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln111_reg_698 <= add_ln111_fu_359_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_fu_353_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln114_reg_703 <= add_ln114_fu_365_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln114_reg_703_pp0_iter1_reg <= add_ln114_reg_703;
        icmp_ln111_reg_694 <= icmp_ln111_fu_353_p2;
        icmp_ln111_reg_694_pp0_iter1_reg <= icmp_ln111_reg_694;
        icmp_ln111_reg_694_pp0_iter2_reg <= icmp_ln111_reg_694_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_694_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln209_1_reg_743 <= add_ln209_1_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        add_ln209_2_reg_762 <= add_ln209_2_fu_448_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln147_reg_816 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        add_ln209_3_reg_845 <= add_ln209_3_fu_596_p2;
        tmp_V_5_reg_840 <= tmp_V_5_fu_584_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_reg_767 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add_ln209_reg_796 <= add_ln209_fu_506_p2;
        tmp_V_4_reg_791 <= tmp_V_4_fu_494_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_694_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln700_reg_733 <= add_ln700_fu_398_p2;
        trunc_ln700_reg_738 <= trunc_ln700_fu_403_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_1_reg_820 <= i_1_fu_550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        i_reg_771 <= i_fu_460_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln133_reg_767 <= icmp_ln133_fu_454_p2;
        icmp_ln133_reg_767_pp1_iter1_reg <= icmp_ln133_reg_767;
        w_digits_data_V_addr_2_reg_781_pp1_iter1_reg <= w_digits_data_V_addr_2_reg_781;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln147_reg_816 <= icmp_ln147_fu_544_p2;
        icmp_ln147_reg_816_pp2_iter1_reg <= icmp_ln147_reg_816;
        w_digits_data_V_addr_4_reg_830_pp2_iter1_reg <= w_digits_data_V_addr_4_reg_830;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln883_reg_753 <= icmp_ln883_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_reg_767 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        j_1_reg_786 <= j_1_fu_476_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_2_reg_680 <= j_2_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln147_reg_816 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        j_3_reg_835 <= j_3_fu_566_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln111_reg_694_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln700_reg_723 <= grp_fu_384_p2;
        w_digits_data_V_addr_1_reg_728 <= zext_ln116_2_fu_390_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln111_reg_694 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln133_reg_767 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        reg_302 <= u_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln111_reg_694 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln147_reg_816 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)))) begin
        reg_306 <= v_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | ((icmp_ln111_reg_694_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((icmp_ln147_reg_816 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln133_reg_767 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        reg_310 <= w_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        v_digits_data_V_addr_reg_685 <= zext_ln116_fu_343_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln133_fu_454_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        w_digits_data_V_addr_2_reg_781 <= zext_ln137_fu_471_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln883_fu_431_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state15))) begin
        w_digits_data_V_addr_3_reg_757 <= zext_ln123_fu_443_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln147_fu_544_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        w_digits_data_V_addr_4_reg_830 <= zext_ln151_fu_561_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        zext_ln143_reg_806[1 : 0] <= zext_ln143_fu_535_p1[1 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln111_fu_353_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state4 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state4 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln133_fu_454_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln147_fu_544_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state25 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state25 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state30) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln133_reg_767 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i2_0_phi_fu_227_p4 = i_reg_771;
    end else begin
        ap_phi_mux_i2_0_phi_fu_227_p4 = i2_0_reg_223;
    end
end

always @ (*) begin
    if (((icmp_ln147_reg_816 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i6_0_phi_fu_274_p4 = i_1_reg_820;
    end else begin
        ap_phi_mux_i6_0_phi_fu_274_p4 = i6_0_reg_270;
    end
end

always @ (*) begin
    if (((icmp_ln111_reg_694 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_0_phi_fu_204_p4 = add_ln111_reg_698;
    end else begin
        ap_phi_mux_i_0_phi_fu_204_p4 = i_0_reg_200;
    end
end

always @ (*) begin
    if (((icmp_ln133_reg_767 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_j3_0_phi_fu_238_p4 = j_1_reg_786;
    end else begin
        ap_phi_mux_j3_0_phi_fu_238_p4 = j3_0_reg_234;
    end
end

always @ (*) begin
    if (((icmp_ln147_reg_816 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_j7_0_phi_fu_285_p4 = j_3_reg_835;
    end else begin
        ap_phi_mux_j7_0_phi_fu_285_p4 = j7_0_reg_281;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        ap_return = add_ln157_fu_650_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        u_digits_data_V_address0 = zext_ln136_fu_466_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        u_digits_data_V_address0 = zext_ln116_1_fu_371_p1;
    end else begin
        u_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        u_digits_data_V_ce0 = 1'b1;
    end else begin
        u_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        v_digits_data_V_address0 = zext_ln150_fu_556_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        v_digits_data_V_address0 = v_digits_data_V_addr_reg_685;
    end else begin
        v_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        v_digits_data_V_ce0 = 1'b1;
    end else begin
        v_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_4_reg_830_pp2_iter1_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        w_digits_data_V_address0 = zext_ln151_fu_561_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_2_reg_781_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        w_digits_data_V_address0 = zext_ln137_fu_471_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_3_reg_757;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        w_digits_data_V_address0 = zext_ln123_fu_443_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_digits_data_V_address0 = w_digits_data_V_addr_1_reg_728;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        w_digits_data_V_address0 = zext_ln116_2_fu_390_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_digits_data_V_address0 = zext_ln105_fu_326_p1;
    end else begin
        w_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        w_digits_data_V_ce0 = 1'b1;
    end else begin
        w_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        w_digits_data_V_d0 = add_ln209_3_reg_845;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        w_digits_data_V_d0 = add_ln209_reg_796;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        w_digits_data_V_d0 = add_ln209_2_reg_762;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        w_digits_data_V_d0 = add_ln209_1_reg_743;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        w_digits_data_V_d0 = 64'd0;
    end else begin
        w_digits_data_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln883_reg_753 == 1'd0) & (1'b1 == ap_CS_fsm_state18)) | ((icmp_ln105_fu_314_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2)) | ((icmp_ln111_reg_694_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((icmp_ln147_reg_816_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001)) | ((icmp_ln133_reg_767_pp1_iter1_reg == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        w_digits_data_V_we0 = 1'b1;
    end else begin
        w_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln105_fu_314_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln129_fu_348_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln129_fu_348_p2 == 1'd1) & (icmp_ln108_fu_331_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_fu_353_p2 == 1'd1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln111_fu_353_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((~((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1)) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln883_fu_431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln133_fu_454_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln133_fu_454_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage1_subdone) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((icmp_ln143_fu_539_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln147_fu_544_p2 == 1'd1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln147_fu_544_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln111_fu_359_p2 = (ap_phi_mux_i_0_phi_fu_204_p4 + 4'd1);

assign add_ln114_fu_365_p2 = (ap_phi_mux_i_0_phi_fu_204_p4 + j1_0_reg_176);

assign add_ln155_fu_629_p2 = (zext_ln143_reg_806 + zext_ln155_fu_625_p1);

assign add_ln157_fu_650_p2 = (mul_ln157_fu_644_p2 + zext_ln157_fu_634_p1);

assign add_ln209_1_fu_407_p2 = (trunc_ln700_reg_738 + reg_310);

assign add_ln209_2_fu_448_p2 = (reg_310 + p_0176_1_reg_188);

assign add_ln209_3_fu_596_p2 = (add_ln209_5_fu_590_p2 + reg_306);

assign add_ln209_4_fu_500_p2 = (reg_310 + zext_ln700_5_fu_490_p1);

assign add_ln209_5_fu_590_p2 = (reg_310 + zext_ln700_9_fu_580_p1);

assign add_ln209_fu_506_p2 = (add_ln209_4_fu_500_p2 + reg_302);

assign add_ln700_fu_398_p2 = (zext_ln111_fu_394_p1 + mul_ln700_reg_723);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd18];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign grp_fu_384_p0 = grp_fu_384_p00;

assign grp_fu_384_p00 = reg_302;

assign grp_fu_384_p1 = grp_fu_384_p10;

assign grp_fu_384_p10 = reg_306;

assign i_1_fu_550_p2 = (ap_phi_mux_i6_0_phi_fu_274_p4 + 4'd1);

assign i_fu_460_p2 = (ap_phi_mux_i2_0_phi_fu_227_p4 + 4'd1);

assign icmp_ln105_fu_314_p2 = ((j_0_reg_165 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_331_p2 = ((j1_0_reg_176 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_353_p2 = ((ap_phi_mux_i_0_phi_fu_204_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln129_fu_348_p2 = ((v_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_454_p2 = ((ap_phi_mux_i2_0_phi_fu_227_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_539_p2 = ((u_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln147_fu_544_p2 = ((ap_phi_mux_i6_0_phi_fu_274_p4 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_431_p2 = ((p_0176_1_reg_188 == 64'd0) ? 1'b1 : 1'b0);

assign j_1_fu_476_p2 = (j3_0_reg_234 + 5'd1);

assign j_2_fu_337_p2 = (j1_0_reg_176 + 4'd1);

assign j_3_fu_566_p2 = (j7_0_reg_281 + 5'd1);

assign j_fu_320_p2 = (j_0_reg_165 + 5'd1);

assign k_V_fu_416_p2 = (zext_ln700_2_fu_412_p1 + add_ln700_reg_733);

assign mul_ln157_fu_644_p0 = mul_ln157_fu_644_p00;

assign mul_ln157_fu_644_p00 = v_tmp_bits_read;

assign mul_ln157_fu_644_p1 = mul_ln157_fu_644_p10;

assign mul_ln157_fu_644_p10 = u_tmp_bits_read;

assign mul_ln157_fu_644_p2 = (mul_ln157_fu_644_p0 * mul_ln157_fu_644_p1);

assign tmp_V_3_fu_609_p2 = (zext_ln700_10_fu_606_p1 + zext_ln700_8_fu_602_p1);

assign tmp_V_4_fu_494_p2 = (zext_ln700_3_fu_486_p1 + zext_ln133_fu_482_p1);

assign tmp_V_5_fu_584_p2 = (zext_ln700_7_fu_576_p1 + zext_ln147_fu_572_p1);

assign tmp_V_fu_519_p2 = (zext_ln700_6_fu_516_p1 + zext_ln700_4_fu_512_p1);

assign trunc_ln700_fu_403_p1 = add_ln700_fu_398_p2[63:0];

assign xor_ln123_fu_437_p2 = (j1_0_reg_176 ^ 4'd8);

assign zext_ln105_fu_326_p1 = j_0_reg_165;

assign zext_ln111_fu_394_p1 = p_0176_1_reg_188;

assign zext_ln116_1_fu_371_p1 = ap_phi_mux_i_0_phi_fu_204_p4;

assign zext_ln116_2_fu_390_p1 = add_ln114_reg_703_pp0_iter1_reg;

assign zext_ln116_fu_343_p1 = j1_0_reg_176;

assign zext_ln123_fu_443_p1 = xor_ln123_fu_437_p2;

assign zext_ln133_fu_482_p1 = p_0288_0_reg_211;

assign zext_ln136_fu_466_p1 = ap_phi_mux_i2_0_phi_fu_227_p4;

assign zext_ln137_fu_471_p1 = ap_phi_mux_j3_0_phi_fu_238_p4;

assign zext_ln143_fu_535_p1 = w_tmp_bits_0_reg_246;

assign zext_ln147_fu_572_p1 = p_0356_0_reg_258;

assign zext_ln150_fu_556_p1 = ap_phi_mux_i6_0_phi_fu_274_p4;

assign zext_ln151_fu_561_p1 = ap_phi_mux_j7_0_phi_fu_285_p4;

assign zext_ln155_fu_625_p1 = p_0356_0_reg_258;

assign zext_ln157_fu_634_p1 = w_tmp_bits_1_reg_293;

assign zext_ln700_10_fu_606_p1 = tmp_V_5_reg_840;

assign zext_ln700_2_fu_412_p1 = reg_310;

assign zext_ln700_3_fu_486_p1 = reg_302;

assign zext_ln700_4_fu_512_p1 = reg_310;

assign zext_ln700_5_fu_490_p1 = p_0288_0_reg_211;

assign zext_ln700_6_fu_516_p1 = tmp_V_4_reg_791;

assign zext_ln700_7_fu_576_p1 = reg_306;

assign zext_ln700_8_fu_602_p1 = reg_310;

assign zext_ln700_9_fu_580_p1 = p_0356_0_reg_258;

always @ (posedge ap_clk) begin
    zext_ln143_reg_806[2] <= 1'b0;
end

endmodule //mul_I_O
