// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _karastuba_mul_ADD_SU_HH_
#define _karastuba_mul_ADD_SU_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "CAT_I_I_I_O.h"
#include "karastuba_mul_ADDNgs.h"
#include "karastuba_mul_ADD8jQ.h"

namespace ap_rtl {

struct karastuba_mul_ADD_SU : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > z0_tmp_bits_read;
    sc_out< sc_lv<6> > z0_digits_data_V_address0;
    sc_out< sc_logic > z0_digits_data_V_ce0;
    sc_in< sc_lv<64> > z0_digits_data_V_q0;
    sc_in< sc_lv<32> > z2_tmp_bits_read;
    sc_out< sc_lv<6> > z2_digits_data_V_address0;
    sc_out< sc_logic > z2_digits_data_V_ce0;
    sc_in< sc_lv<64> > z2_digits_data_V_q0;
    sc_in< sc_lv<32> > cross_mul_tmp_bits_read;
    sc_out< sc_lv<6> > cross_mul_digits_data_V_address0;
    sc_out< sc_logic > cross_mul_digits_data_V_ce0;
    sc_in< sc_lv<64> > cross_mul_digits_data_V_q0;
    sc_out< sc_lv<7> > res_digits_data_V_address0;
    sc_out< sc_logic > res_digits_data_V_ce0;
    sc_out< sc_logic > res_digits_data_V_we0;
    sc_out< sc_lv<64> > res_digits_data_V_d0;


    // Module declarations
    karastuba_mul_ADD_SU(sc_module_name name);
    SC_HAS_PROCESS(karastuba_mul_ADD_SU);

    ~karastuba_mul_ADD_SU();

    sc_trace_file* mVcdFile;

    karastuba_mul_ADDNgs* add2_digits_data_V_U;
    karastuba_mul_ADDNgs* z1_digits_data_V_U;
    karastuba_mul_ADD8jQ* p_res_digits_data_V_U;
    CAT_I_I_I_O* grp_CAT_I_I_I_O_fu_260;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > p_088_0_i_reg_203;
    sc_signal< sc_lv<7> > i_0_i_reg_215;
    sc_signal< sc_lv<1> > op2_assign_reg_226;
    sc_signal< sc_lv<7> > i_0_i11_reg_238;
    sc_signal< sc_lv<8> > i5_0_reg_249;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > icmp_ln54_fu_271_p2;
    sc_signal< sc_lv<1> > icmp_ln54_reg_471;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln54_reg_471_pp0_iter1_reg;
    sc_signal< sc_lv<7> > i_fu_277_p2;
    sc_signal< sc_lv<7> > i_reg_475;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln59_fu_283_p1;
    sc_signal< sc_lv<64> > zext_ln59_reg_480;
    sc_signal< sc_lv<64> > zext_ln59_reg_480_pp0_iter1_reg;
    sc_signal< sc_lv<64> > z0_digits_data_V_loa_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<64> > z2_digits_data_V_loa_reg_501;
    sc_signal< sc_lv<65> > add_ln700_fu_300_p2;
    sc_signal< sc_lv<65> > add_ln700_reg_507;
    sc_signal< sc_lv<64> > add_ln209_5_fu_311_p2;
    sc_signal< sc_lv<64> > add_ln209_5_reg_512;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<32> > add2_tmp_bits_fu_347_p2;
    sc_signal< sc_lv<32> > add2_tmp_bits_reg_522;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_i_fu_352_p2;
    sc_signal< sc_lv<1> > exitcond_i_reg_527;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state7_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter3;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter4;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<1> > exitcond_i_reg_527_pp1_iter1_reg;
    sc_signal< sc_lv<1> > exitcond_i_reg_527_pp1_iter2_reg;
    sc_signal< sc_lv<1> > exitcond_i_reg_527_pp1_iter3_reg;
    sc_signal< sc_lv<7> > i_31_fu_358_p2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<64> > zext_ln81_fu_364_p1;
    sc_signal< sc_lv<64> > zext_ln81_reg_536;
    sc_signal< sc_lv<64> > zext_ln81_reg_536_pp1_iter1_reg;
    sc_signal< sc_lv<64> > zext_ln81_reg_536_pp1_iter2_reg;
    sc_signal< sc_lv<64> > zext_ln81_reg_536_pp1_iter3_reg;
    sc_signal< sc_lv<64> > cross_mul_digits_dat_5_reg_551;
    sc_signal< sc_lv<64> > add2_digits_data_V_q0;
    sc_signal< sc_lv<64> > add2_digits_data_V_l_reg_556;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_lv<65> > tmp_V_25_fu_376_p2;
    sc_signal< sc_lv<65> > tmp_V_25_reg_561;
    sc_signal< sc_lv<1> > tmp_reg_567;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< sc_lv<64> > add_ln700_15_fu_414_p2;
    sc_signal< sc_lv<64> > add_ln700_15_reg_572;
    sc_signal< sc_lv<32> > z1_tmp_bits_fu_433_p2;
    sc_signal< sc_lv<32> > z1_tmp_bits_reg_577;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<1> > icmp_ln364_fu_439_p2;
    sc_signal< sc_lv<1> > icmp_ln364_reg_582;
    sc_signal< sc_logic > ap_CS_fsm_pp2_stage0;
    sc_signal< bool > ap_block_state14_pp2_stage0_iter0;
    sc_signal< bool > ap_block_state15_pp2_stage0_iter1;
    sc_signal< bool > ap_block_state16_pp2_stage0_iter2;
    sc_signal< bool > ap_block_pp2_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln364_reg_582_pp2_iter1_reg;
    sc_signal< sc_lv<8> > i_32_fu_445_p2;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter0;
    sc_signal< sc_lv<64> > zext_ln367_fu_451_p1;
    sc_signal< sc_lv<64> > zext_ln367_reg_591;
    sc_signal< sc_lv<64> > zext_ln367_reg_591_pp2_iter1_reg;
    sc_signal< sc_lv<64> > p_res_digits_data_V_q0;
    sc_signal< sc_lv<64> > p_res_digits_data_V_l_reg_601;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state7;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter4;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_ap_ready;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_ap_done;
    sc_signal< bool > ap_block_pp2_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp2_exit_iter0_state14;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp2_iter2;
    sc_signal< sc_lv<6> > add2_digits_data_V_address0;
    sc_signal< sc_logic > add2_digits_data_V_ce0;
    sc_signal< sc_logic > add2_digits_data_V_we0;
    sc_signal< sc_lv<6> > z1_digits_data_V_address0;
    sc_signal< sc_logic > z1_digits_data_V_ce0;
    sc_signal< sc_logic > z1_digits_data_V_we0;
    sc_signal< sc_lv<64> > z1_digits_data_V_q0;
    sc_signal< sc_lv<7> > p_res_digits_data_V_address0;
    sc_signal< sc_logic > p_res_digits_data_V_ce0;
    sc_signal< sc_logic > p_res_digits_data_V_we0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_ap_start;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_ap_idle;
    sc_signal< sc_lv<6> > grp_CAT_I_I_I_O_fu_260_x0_digits_data_V_address0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_x0_digits_data_V_ce0;
    sc_signal< sc_lv<6> > grp_CAT_I_I_I_O_fu_260_x1_digits_data_V_address0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_x1_digits_data_V_ce0;
    sc_signal< sc_lv<6> > grp_CAT_I_I_I_O_fu_260_x2_digits_data_V_address0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_x2_digits_data_V_ce0;
    sc_signal< sc_lv<7> > grp_CAT_I_I_I_O_fu_260_w_digits_data_V_address0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_w_digits_data_V_ce0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_w_digits_data_V_we0;
    sc_signal< sc_lv<64> > grp_CAT_I_I_I_O_fu_260_w_digits_data_V_d0;
    sc_signal< sc_lv<7> > ap_phi_mux_i_0_i_phi_fu_219_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > ap_phi_mux_op2_assign_phi_fu_230_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_logic > grp_CAT_I_I_I_O_fu_260_ap_start_reg;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp2_stage0;
    sc_signal< sc_lv<65> > zext_ln209_fu_293_p1;
    sc_signal< sc_lv<65> > zext_ln54_fu_289_p1;
    sc_signal< sc_lv<64> > zext_ln700_16_fu_296_p1;
    sc_signal< sc_lv<64> > add_ln209_14_fu_306_p2;
    sc_signal< sc_lv<66> > zext_ln700_17_fu_319_p1;
    sc_signal< sc_lv<66> > zext_ln700_fu_316_p1;
    sc_signal< sc_lv<66> > tmp_V_fu_322_p2;
    sc_signal< sc_lv<32> > zext_ln64_fu_338_p1;
    sc_signal< sc_lv<32> > add_ln64_fu_342_p2;
    sc_signal< sc_lv<65> > zext_ln180_fu_370_p1;
    sc_signal< sc_lv<65> > zext_ln701_fu_373_p1;
    sc_signal< sc_lv<65> > select_ln701_fu_382_p3;
    sc_signal< sc_lv<65> > tmp_V_26_fu_401_p2;
    sc_signal< sc_lv<64> > trunc_ln701_fu_398_p1;
    sc_signal< sc_lv<64> > select_ln701_3_fu_390_p3;
    sc_signal< sc_lv<32> > p_neg207_i_fu_420_p3;
    sc_signal< sc_lv<32> > add_ln96_fu_428_p2;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > ap_idle_pp2;
    sc_signal< sc_logic > ap_enable_pp2;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_pp0_stage0;
    static const sc_lv<9> ap_ST_fsm_pp0_stage1;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_pp1_stage0;
    static const sc_lv<9> ap_ST_fsm_state12;
    static const sc_lv<9> ap_ST_fsm_state13;
    static const sc_lv<9> ap_ST_fsm_pp2_stage0;
    static const sc_lv<9> ap_ST_fsm_state17;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<7> ap_const_lv7_40;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_41;
    static const sc_lv<65> ap_const_lv65_1FFFFFFFFFFFFFFFF;
    static const sc_lv<65> ap_const_lv65_0;
    static const sc_lv<64> ap_const_lv64_FFFFFFFFFFFFFFFF;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_FFFFFFFF;
    static const sc_lv<8> ap_const_lv8_80;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<32> ap_const_lv32_8;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add2_digits_data_V_address0();
    void thread_add2_digits_data_V_ce0();
    void thread_add2_digits_data_V_we0();
    void thread_add2_tmp_bits_fu_347_p2();
    void thread_add_ln209_14_fu_306_p2();
    void thread_add_ln209_5_fu_311_p2();
    void thread_add_ln64_fu_342_p2();
    void thread_add_ln700_15_fu_414_p2();
    void thread_add_ln700_fu_300_p2();
    void thread_add_ln96_fu_428_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp2_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state6();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp2_stage0();
    void thread_ap_block_pp2_stage0_11001();
    void thread_ap_block_pp2_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state10_pp1_stage0_iter3();
    void thread_ap_block_state11_pp1_stage0_iter4();
    void thread_ap_block_state14_pp2_stage0_iter0();
    void thread_ap_block_state15_pp2_stage0_iter1();
    void thread_ap_block_state16_pp2_stage0_iter2();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage1_iter1();
    void thread_ap_block_state7_pp1_stage0_iter0();
    void thread_ap_block_state8_pp1_stage0_iter1();
    void thread_ap_block_state9_pp1_stage0_iter2();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state7();
    void thread_ap_condition_pp2_exit_iter0_state14();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_enable_pp2();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_idle_pp2();
    void thread_ap_phi_mux_i_0_i_phi_fu_219_p4();
    void thread_ap_phi_mux_op2_assign_phi_fu_230_p4();
    void thread_ap_ready();
    void thread_cross_mul_digits_data_V_address0();
    void thread_cross_mul_digits_data_V_ce0();
    void thread_exitcond_i_fu_352_p2();
    void thread_grp_CAT_I_I_I_O_fu_260_ap_start();
    void thread_i_31_fu_358_p2();
    void thread_i_32_fu_445_p2();
    void thread_i_fu_277_p2();
    void thread_icmp_ln364_fu_439_p2();
    void thread_icmp_ln54_fu_271_p2();
    void thread_p_neg207_i_fu_420_p3();
    void thread_p_res_digits_data_V_address0();
    void thread_p_res_digits_data_V_ce0();
    void thread_p_res_digits_data_V_we0();
    void thread_res_digits_data_V_address0();
    void thread_res_digits_data_V_ce0();
    void thread_res_digits_data_V_d0();
    void thread_res_digits_data_V_we0();
    void thread_select_ln701_3_fu_390_p3();
    void thread_select_ln701_fu_382_p3();
    void thread_tmp_V_25_fu_376_p2();
    void thread_tmp_V_26_fu_401_p2();
    void thread_tmp_V_fu_322_p2();
    void thread_trunc_ln701_fu_398_p1();
    void thread_z0_digits_data_V_address0();
    void thread_z0_digits_data_V_ce0();
    void thread_z1_digits_data_V_address0();
    void thread_z1_digits_data_V_ce0();
    void thread_z1_digits_data_V_we0();
    void thread_z1_tmp_bits_fu_433_p2();
    void thread_z2_digits_data_V_address0();
    void thread_z2_digits_data_V_ce0();
    void thread_zext_ln180_fu_370_p1();
    void thread_zext_ln209_fu_293_p1();
    void thread_zext_ln367_fu_451_p1();
    void thread_zext_ln54_fu_289_p1();
    void thread_zext_ln59_fu_283_p1();
    void thread_zext_ln64_fu_338_p1();
    void thread_zext_ln700_16_fu_296_p1();
    void thread_zext_ln700_17_fu_319_p1();
    void thread_zext_ln700_fu_316_p1();
    void thread_zext_ln701_fu_373_p1();
    void thread_zext_ln81_fu_364_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
