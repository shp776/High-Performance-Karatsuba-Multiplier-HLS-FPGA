// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _karastuba_mul_templa_2_HH_
#define _karastuba_mul_templa_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "mul_I_O.h"
#include "karastuba_mul_temcud.h"

namespace ap_rtl {

struct karastuba_mul_templa_2 : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<3> > lhs0_tmp_digits_data_V_address0;
    sc_out< sc_logic > lhs0_tmp_digits_data_V_ce0;
    sc_in< sc_lv<64> > lhs0_tmp_digits_data_V_q0;
    sc_out< sc_lv<3> > lhs1_tmp_digits_data_V_address0;
    sc_out< sc_logic > lhs1_tmp_digits_data_V_ce0;
    sc_in< sc_lv<64> > lhs1_tmp_digits_data_V_q0;
    sc_out< sc_lv<3> > rhs0_tmp_digits_data_V_address0;
    sc_out< sc_logic > rhs0_tmp_digits_data_V_ce0;
    sc_in< sc_lv<64> > rhs0_tmp_digits_data_V_q0;
    sc_out< sc_lv<3> > rhs1_tmp_digits_data_V_address0;
    sc_out< sc_logic > rhs1_tmp_digits_data_V_ce0;
    sc_in< sc_lv<64> > rhs1_tmp_digits_data_V_q0;
    sc_out< sc_lv<4> > cross_mul_digits_data_V_address0;
    sc_out< sc_logic > cross_mul_digits_data_V_ce0;
    sc_out< sc_logic > cross_mul_digits_data_V_we0;
    sc_out< sc_lv<64> > cross_mul_digits_data_V_d0;
    sc_in< sc_lv<64> > cross_mul_digits_data_V_q0;
    sc_out< sc_lv<4> > ap_return;


    // Module declarations
    karastuba_mul_templa_2(sc_module_name name);
    SC_HAS_PROCESS(karastuba_mul_templa_2);

    ~karastuba_mul_templa_2();

    sc_trace_file* mVcdFile;

    karastuba_mul_temcud* add0_digits_data_V_U;
    karastuba_mul_temcud* add1_digits_data_V_U;
    mul_I_O* grp_mul_I_O_fu_180;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<2> > p_088_0_i_reg_134;
    sc_signal< sc_lv<4> > i_0_i_reg_146;
    sc_signal< sc_lv<2> > p_088_0_i1_reg_157;
    sc_signal< sc_lv<4> > i_0_i2_reg_169;
    sc_signal< sc_lv<1> > icmp_ln54_fu_192_p2;
    sc_signal< sc_lv<1> > icmp_ln54_reg_334;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<4> > i_fu_198_p2;
    sc_signal< sc_lv<4> > i_reg_338;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln59_fu_204_p1;
    sc_signal< sc_lv<64> > zext_ln59_reg_343;
    sc_signal< sc_lv<64> > lhs1_tmp_digits_data_1_reg_358;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< bool > ap_block_state3_pp0_stage1_iter0;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<65> > add_ln700_fu_222_p2;
    sc_signal< sc_lv<65> > add_ln700_reg_363;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_lv<1> > icmp_ln54_1_fu_263_p2;
    sc_signal< sc_lv<1> > icmp_ln54_1_reg_373;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state6_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<4> > i_2_fu_269_p2;
    sc_signal< sc_lv<4> > i_2_reg_377;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<64> > zext_ln59_1_fu_275_p1;
    sc_signal< sc_lv<64> > zext_ln59_1_reg_382;
    sc_signal< sc_lv<64> > rhs1_tmp_digits_data_1_reg_397;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage1;
    sc_signal< bool > ap_block_state7_pp1_stage1_iter0;
    sc_signal< bool > ap_block_pp1_stage1_11001;
    sc_signal< sc_lv<65> > add_ln700_7_fu_293_p2;
    sc_signal< sc_lv<65> > add_ln700_7_reg_402;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state6;
    sc_signal< bool > ap_block_pp1_stage1_subdone;
    sc_signal< sc_lv<3> > add0_digits_data_V_address0;
    sc_signal< sc_logic > add0_digits_data_V_ce0;
    sc_signal< sc_logic > add0_digits_data_V_we0;
    sc_signal< sc_lv<64> > add0_digits_data_V_d0;
    sc_signal< sc_lv<64> > add0_digits_data_V_q0;
    sc_signal< sc_lv<3> > add1_digits_data_V_address0;
    sc_signal< sc_logic > add1_digits_data_V_ce0;
    sc_signal< sc_logic > add1_digits_data_V_we0;
    sc_signal< sc_lv<64> > add1_digits_data_V_d0;
    sc_signal< sc_lv<64> > add1_digits_data_V_q0;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_ap_start;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_ap_done;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_ap_idle;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_ap_ready;
    sc_signal< sc_lv<3> > grp_mul_I_O_fu_180_u_digits_data_V_address0;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_u_digits_data_V_ce0;
    sc_signal< sc_lv<3> > grp_mul_I_O_fu_180_v_digits_data_V_address0;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_v_digits_data_V_ce0;
    sc_signal< sc_lv<4> > grp_mul_I_O_fu_180_w_digits_data_V_address0;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_w_digits_data_V_ce0;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_w_digits_data_V_we0;
    sc_signal< sc_lv<64> > grp_mul_I_O_fu_180_w_digits_data_V_d0;
    sc_signal< sc_lv<4> > grp_mul_I_O_fu_180_ap_return;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_i_phi_fu_150_p4;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<4> > ap_phi_mux_i_0_i2_phi_fu_173_p4;
    sc_signal< sc_logic > grp_mul_I_O_fu_180_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< bool > ap_block_pp1_stage1;
    sc_signal< sc_lv<65> > zext_ln209_fu_214_p1;
    sc_signal< sc_lv<65> > zext_ln54_fu_210_p1;
    sc_signal< sc_lv<64> > zext_ln700_11_fu_218_p1;
    sc_signal< sc_lv<64> > add_ln209_6_fu_228_p2;
    sc_signal< sc_lv<66> > zext_ln700_12_fu_244_p1;
    sc_signal< sc_lv<66> > zext_ln700_fu_241_p1;
    sc_signal< sc_lv<66> > tmp_V_fu_247_p2;
    sc_signal< sc_lv<65> > zext_ln209_1_fu_285_p1;
    sc_signal< sc_lv<65> > zext_ln54_1_fu_281_p1;
    sc_signal< sc_lv<64> > zext_ln700_14_fu_289_p1;
    sc_signal< sc_lv<64> > add_ln209_7_fu_299_p2;
    sc_signal< sc_lv<66> > zext_ln700_15_fu_315_p1;
    sc_signal< sc_lv<66> > zext_ln700_13_fu_312_p1;
    sc_signal< sc_lv<66> > tmp_V_6_fu_318_p2;
    sc_signal< sc_lv<4> > ap_return_preg;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_pp0_stage1;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_pp1_stage1;
    static const sc_lv<8> ap_ST_fsm_state9;
    static const sc_lv<8> ap_ST_fsm_state10;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_41;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add0_digits_data_V_address0();
    void thread_add0_digits_data_V_ce0();
    void thread_add0_digits_data_V_d0();
    void thread_add0_digits_data_V_we0();
    void thread_add1_digits_data_V_address0();
    void thread_add1_digits_data_V_ce0();
    void thread_add1_digits_data_V_d0();
    void thread_add1_digits_data_V_we0();
    void thread_add_ln209_6_fu_228_p2();
    void thread_add_ln209_7_fu_299_p2();
    void thread_add_ln700_7_fu_293_p2();
    void thread_add_ln700_fu_222_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_pp1_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_pp1_stage1();
    void thread_ap_block_pp1_stage1_11001();
    void thread_ap_block_pp1_stage1_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage1_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state6_pp1_stage0_iter0();
    void thread_ap_block_state7_pp1_stage1_iter0();
    void thread_ap_block_state8_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_condition_pp1_exit_iter0_state6();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i_0_i2_phi_fu_173_p4();
    void thread_ap_phi_mux_i_0_i_phi_fu_150_p4();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_cross_mul_digits_data_V_address0();
    void thread_cross_mul_digits_data_V_ce0();
    void thread_cross_mul_digits_data_V_d0();
    void thread_cross_mul_digits_data_V_we0();
    void thread_grp_mul_I_O_fu_180_ap_start();
    void thread_i_2_fu_269_p2();
    void thread_i_fu_198_p2();
    void thread_icmp_ln54_1_fu_263_p2();
    void thread_icmp_ln54_fu_192_p2();
    void thread_lhs0_tmp_digits_data_V_address0();
    void thread_lhs0_tmp_digits_data_V_ce0();
    void thread_lhs1_tmp_digits_data_V_address0();
    void thread_lhs1_tmp_digits_data_V_ce0();
    void thread_rhs0_tmp_digits_data_V_address0();
    void thread_rhs0_tmp_digits_data_V_ce0();
    void thread_rhs1_tmp_digits_data_V_address0();
    void thread_rhs1_tmp_digits_data_V_ce0();
    void thread_tmp_V_6_fu_318_p2();
    void thread_tmp_V_fu_247_p2();
    void thread_zext_ln209_1_fu_285_p1();
    void thread_zext_ln209_fu_214_p1();
    void thread_zext_ln54_1_fu_281_p1();
    void thread_zext_ln54_fu_210_p1();
    void thread_zext_ln59_1_fu_275_p1();
    void thread_zext_ln59_fu_204_p1();
    void thread_zext_ln700_11_fu_218_p1();
    void thread_zext_ln700_12_fu_244_p1();
    void thread_zext_ln700_13_fu_312_p1();
    void thread_zext_ln700_14_fu_289_p1();
    void thread_zext_ln700_15_fu_315_p1();
    void thread_zext_ln700_fu_241_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
