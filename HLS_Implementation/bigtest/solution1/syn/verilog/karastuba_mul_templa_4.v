// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_templa_4 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lhs_tmp_bits_read,
        lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0,
        res_digits_data_V_address0,
        res_digits_data_V_ce0,
        res_digits_data_V_we0,
        res_digits_data_V_d0,
        res_digits_data_V_q0,
        res_digits_data_V_address1,
        res_digits_data_V_ce1,
        res_digits_data_V_we1,
        res_digits_data_V_d1,
        res_digits_data_V_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 24'd1;
parameter    ap_ST_fsm_state2 = 24'd2;
parameter    ap_ST_fsm_state3 = 24'd4;
parameter    ap_ST_fsm_state4 = 24'd8;
parameter    ap_ST_fsm_state5 = 24'd16;
parameter    ap_ST_fsm_state6 = 24'd32;
parameter    ap_ST_fsm_state7 = 24'd64;
parameter    ap_ST_fsm_state8 = 24'd128;
parameter    ap_ST_fsm_state9 = 24'd256;
parameter    ap_ST_fsm_state10 = 24'd512;
parameter    ap_ST_fsm_state11 = 24'd1024;
parameter    ap_ST_fsm_state12 = 24'd2048;
parameter    ap_ST_fsm_state13 = 24'd4096;
parameter    ap_ST_fsm_state14 = 24'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 24'd16384;
parameter    ap_ST_fsm_state20 = 24'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 24'd65536;
parameter    ap_ST_fsm_state26 = 24'd131072;
parameter    ap_ST_fsm_state27 = 24'd262144;
parameter    ap_ST_fsm_pp2_stage0 = 24'd524288;
parameter    ap_ST_fsm_state33 = 24'd1048576;
parameter    ap_ST_fsm_pp3_stage0 = 24'd2097152;
parameter    ap_ST_fsm_state39 = 24'd4194304;
parameter    ap_ST_fsm_state40 = 24'd8388608;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] lhs_tmp_bits_read;
output  [4:0] lhs_digits_data_V_address0;
output   lhs_digits_data_V_ce0;
input  [63:0] lhs_digits_data_V_q0;
input  [1:0] rhs_tmp_bits_read;
output  [4:0] rhs_digits_data_V_address0;
output   rhs_digits_data_V_ce0;
input  [63:0] rhs_digits_data_V_q0;
output  [5:0] res_digits_data_V_address0;
output   res_digits_data_V_ce0;
output   res_digits_data_V_we0;
output  [63:0] res_digits_data_V_d0;
input  [63:0] res_digits_data_V_q0;
output  [5:0] res_digits_data_V_address1;
output   res_digits_data_V_ce1;
output   res_digits_data_V_we1;
output  [63:0] res_digits_data_V_d1;
input  [63:0] res_digits_data_V_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] lhs_digits_data_V_address0;
reg lhs_digits_data_V_ce0;
reg[4:0] rhs_digits_data_V_address0;
reg rhs_digits_data_V_ce0;
reg[5:0] res_digits_data_V_address0;
reg res_digits_data_V_ce0;
reg res_digits_data_V_we0;
reg[5:0] res_digits_data_V_address1;
reg res_digits_data_V_ce1;
reg res_digits_data_V_we1;
reg[63:0] res_digits_data_V_d1;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [23:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] p_088_0_i_reg_442;
reg   [5:0] i_0_i_reg_454;
reg   [0:0] op2_assign_reg_465;
reg   [5:0] i_0_i1_reg_477;
reg   [1:0] p_084_0_reg_488;
reg   [5:0] i4_0_reg_500;
reg   [6:0] j_0_reg_511;
reg   [1:0] p_0160_0_reg_534;
reg   [5:0] i7_0_reg_546;
reg   [6:0] j8_0_reg_557;
reg   [63:0] reg_618;
wire    ap_CS_fsm_state3;
reg   [63:0] reg_618_pp2_iter2_reg;
wire    ap_block_state28_pp2_stage0_iter0;
wire    ap_block_state29_pp2_stage0_iter1;
wire    ap_block_state30_pp2_stage0_iter2;
wire    ap_block_state31_pp2_stage0_iter3;
wire    ap_block_state32_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
reg   [0:0] icmp_ln282_reg_1335;
reg   [63:0] reg_626;
wire    ap_CS_fsm_state9;
reg   [63:0] reg_626_pp3_iter2_reg;
wire    ap_block_state34_pp3_stage0_iter0;
wire    ap_block_state35_pp3_stage0_iter1;
wire    ap_block_state36_pp3_stage0_iter2;
wire    ap_block_state37_pp3_stage0_iter3;
wire    ap_block_state38_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln296_reg_1385;
reg   [63:0] reg_634;
reg   [63:0] reg_634_pp2_iter2_reg;
reg   [63:0] reg_634_pp3_iter2_reg;
wire   [4:0] i_fu_644_p2;
reg   [4:0] i_reg_1144;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln255_fu_650_p1;
reg   [63:0] zext_ln255_reg_1149;
wire   [0:0] icmp_ln255_fu_638_p2;
wire   [4:0] i_9_fu_661_p2;
reg   [4:0] i_9_reg_1163;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln256_fu_655_p2;
wire   [4:0] i_10_fu_690_p2;
reg   [4:0] i_10_reg_1176;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln257_fu_696_p1;
reg   [63:0] zext_ln257_reg_1181;
wire   [0:0] icmp_ln257_fu_684_p2;
wire   [4:0] i_11_fu_707_p2;
reg   [4:0] i_11_reg_1195;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln258_fu_701_p2;
wire   [3:0] grp_karastuba_mul_templa_5_fu_586_ap_return;
reg   [3:0] z0_tmp_bits_reg_1205;
wire    ap_CS_fsm_state14;
wire    grp_karastuba_mul_templa_5_fu_586_ap_ready;
wire    grp_karastuba_mul_templa_5_fu_586_ap_done;
wire    grp_karastuba_mul_templa_5_fu_597_ap_ready;
wire    grp_karastuba_mul_templa_5_fu_597_ap_done;
wire    grp_karastuba_mul_templa_1_fu_577_ap_ready;
wire    grp_karastuba_mul_templa_1_fu_577_ap_done;
reg    ap_block_state14_on_subcall_done;
wire   [3:0] grp_karastuba_mul_templa_5_fu_597_ap_return;
reg   [3:0] z2_tmp_bits_reg_1210;
wire   [4:0] zext_ln266_fu_730_p1;
reg   [4:0] zext_ln266_reg_1215;
wire   [0:0] icmp_ln53_fu_734_p2;
reg   [0:0] icmp_ln53_reg_1220;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state18_pp0_stage0_iter3;
wire    ap_block_state19_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_1220_pp0_iter1_reg;
reg   [0:0] icmp_ln53_reg_1220_pp0_iter2_reg;
reg   [0:0] icmp_ln53_reg_1220_pp0_iter3_reg;
wire   [5:0] i_12_fu_740_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln58_fu_746_p1;
reg   [63:0] zext_ln58_reg_1229;
reg   [63:0] zext_ln58_reg_1229_pp0_iter1_reg;
reg   [63:0] zext_ln58_reg_1229_pp0_iter2_reg;
reg   [63:0] zext_ln58_reg_1229_pp0_iter3_reg;
wire   [63:0] z0_digits_data_V_q0;
reg   [63:0] z0_digits_data_V_loa_reg_1244;
reg   [63:0] z0_digits_data_V_loa_reg_1244_pp0_iter2_reg;
wire   [63:0] z2_digits_data_V_q0;
reg   [63:0] z2_digits_data_V_loa_reg_1250;
reg   [63:0] z2_digits_data_V_loa_reg_1250_pp0_iter2_reg;
wire   [64:0] add_ln700_fu_758_p2;
reg   [64:0] add_ln700_reg_1256;
wire   [63:0] add_ln209_5_fu_786_p2;
reg   [63:0] add_ln209_5_reg_1261;
reg   [1:0] trunc_ln_reg_1266;
reg    ap_enable_reg_pp0_iter3;
wire   [6:0] zext_ln63_7_fu_827_p1;
reg   [6:0] zext_ln63_7_reg_1271;
wire    ap_CS_fsm_state20;
wire   [0:0] exitcond_i_fu_831_p2;
reg   [0:0] exitcond_i_reg_1276;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state21_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
wire    ap_block_state24_pp1_stage0_iter3;
wire    ap_block_state25_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_1276_pp1_iter1_reg;
reg   [0:0] exitcond_i_reg_1276_pp1_iter2_reg;
reg   [0:0] exitcond_i_reg_1276_pp1_iter3_reg;
wire   [5:0] i_13_fu_837_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln80_fu_843_p1;
reg   [63:0] zext_ln80_reg_1285;
reg   [63:0] zext_ln80_reg_1285_pp1_iter1_reg;
reg   [63:0] zext_ln80_reg_1285_pp1_iter2_reg;
reg   [63:0] zext_ln80_reg_1285_pp1_iter3_reg;
wire   [63:0] cross_mul_digits_dat_q0;
reg   [63:0] cross_mul_digits_dat_4_reg_1300;
wire   [63:0] add2_digits_data_V_q0;
reg   [63:0] add2_digits_data_V_l_reg_1305;
reg    ap_enable_reg_pp1_iter1;
wire   [64:0] tmp_V_7_fu_855_p2;
reg   [64:0] tmp_V_7_reg_1310;
reg   [0:0] tmp_2_reg_1316;
reg    ap_enable_reg_pp1_iter3;
wire   [63:0] add_ln700_13_fu_893_p2;
reg   [63:0] add_ln700_13_reg_1321;
wire   [6:0] z1_tmp_bits_fu_916_p2;
reg   [6:0] z1_tmp_bits_reg_1326;
wire    ap_CS_fsm_state26;
wire   [0:0] icmp_ln278_fu_922_p2;
reg   [0:0] icmp_ln278_reg_1331;
wire    ap_CS_fsm_state27;
wire    grp_CAT_I_I_I_O_1_fu_608_ap_ready;
wire    grp_CAT_I_I_I_O_1_fu_608_ap_done;
wire   [0:0] icmp_ln282_fu_927_p2;
reg   [0:0] icmp_ln282_reg_1335_pp2_iter1_reg;
reg   [0:0] icmp_ln282_reg_1335_pp2_iter2_reg;
reg   [0:0] icmp_ln282_reg_1335_pp2_iter3_reg;
wire   [5:0] i_14_fu_933_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [5:0] res_digits_data_V_ad_reg_1349;
reg   [5:0] res_digits_data_V_ad_reg_1349_pp2_iter1_reg;
reg   [5:0] res_digits_data_V_ad_reg_1349_pp2_iter2_reg;
reg   [5:0] res_digits_data_V_ad_reg_1349_pp2_iter3_reg;
wire   [6:0] j_fu_949_p2;
wire   [64:0] add_ln700_14_fu_963_p2;
reg   [64:0] add_ln700_14_reg_1360;
wire   [63:0] add_ln209_fu_992_p2;
reg   [63:0] add_ln209_reg_1365;
reg   [1:0] trunc_ln858_6_reg_1370;
reg    ap_enable_reg_pp2_iter3;
wire   [2:0] zext_ln292_fu_1008_p1;
reg   [2:0] zext_ln292_reg_1375;
wire    ap_CS_fsm_state33;
wire   [0:0] icmp_ln292_fu_1012_p2;
wire   [0:0] icmp_ln296_fu_1017_p2;
reg   [0:0] icmp_ln296_reg_1385_pp3_iter1_reg;
reg   [0:0] icmp_ln296_reg_1385_pp3_iter2_reg;
reg   [0:0] icmp_ln296_reg_1385_pp3_iter3_reg;
wire   [5:0] i_15_fu_1023_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [5:0] res_digits_data_V_ad_2_reg_1399;
reg   [5:0] res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg;
reg   [5:0] res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg;
reg   [5:0] res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg;
wire   [6:0] j_5_fu_1039_p2;
wire   [64:0] add_ln700_16_fu_1053_p2;
reg   [64:0] add_ln700_16_reg_1410;
wire   [63:0] add_ln209_4_fu_1082_p2;
reg   [63:0] add_ln209_4_reg_1415;
reg   [1:0] trunc_ln858_7_reg_1420;
reg    ap_enable_reg_pp3_iter3;
wire   [2:0] add_ln304_fu_1102_p2;
wire    ap_CS_fsm_state39;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state28;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state34;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg   [3:0] lhs0_digits_data_V_address0;
reg    lhs0_digits_data_V_ce0;
reg    lhs0_digits_data_V_we0;
wire   [63:0] lhs0_digits_data_V_q0;
reg   [3:0] lhs1_digits_data_V_address0;
reg    lhs1_digits_data_V_ce0;
reg    lhs1_digits_data_V_we0;
wire   [63:0] lhs1_digits_data_V_q0;
reg   [3:0] rhs0_digits_data_V_address0;
reg    rhs0_digits_data_V_ce0;
reg    rhs0_digits_data_V_we0;
wire   [63:0] rhs0_digits_data_V_q0;
reg   [3:0] rhs1_digits_data_V_address0;
reg    rhs1_digits_data_V_ce0;
reg    rhs1_digits_data_V_we0;
wire   [63:0] rhs1_digits_data_V_q0;
reg   [3:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [63:0] lhs0_tmp_digits_data_q0;
reg   [3:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [63:0] lhs1_tmp_digits_data_q0;
reg   [3:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [63:0] rhs0_tmp_digits_data_q0;
reg   [3:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [63:0] rhs1_tmp_digits_data_q0;
reg   [4:0] z0_digits_data_V_address0;
reg    z0_digits_data_V_ce0;
reg    z0_digits_data_V_we0;
reg    z0_digits_data_V_ce1;
reg    z0_digits_data_V_we1;
wire   [63:0] z0_digits_data_V_q1;
reg   [4:0] z2_digits_data_V_address0;
reg    z2_digits_data_V_ce0;
reg    z2_digits_data_V_we0;
reg    z2_digits_data_V_ce1;
reg    z2_digits_data_V_we1;
wire   [63:0] z2_digits_data_V_q1;
reg   [4:0] cross_mul_digits_dat_address0;
reg    cross_mul_digits_dat_ce0;
reg    cross_mul_digits_dat_we0;
reg    cross_mul_digits_dat_ce1;
reg    cross_mul_digits_dat_we1;
wire   [63:0] cross_mul_digits_dat_q1;
reg   [4:0] add2_digits_data_V_address0;
reg    add2_digits_data_V_ce0;
reg    add2_digits_data_V_we0;
reg   [4:0] z1_digits_data_V_address0;
reg    z1_digits_data_V_ce0;
reg    z1_digits_data_V_we0;
wire   [63:0] z1_digits_data_V_q0;
wire    grp_karastuba_mul_templa_1_fu_577_ap_start;
wire    grp_karastuba_mul_templa_1_fu_577_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0;
wire    grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0;
wire   [4:0] grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1;
wire    grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1;
wire   [3:0] grp_karastuba_mul_templa_1_fu_577_ap_return;
wire    grp_karastuba_mul_templa_5_fu_586_ap_start;
wire    grp_karastuba_mul_templa_5_fu_586_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0;
wire   [4:0] grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1;
wire    grp_karastuba_mul_templa_5_fu_597_ap_start;
wire    grp_karastuba_mul_templa_5_fu_597_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0;
wire   [4:0] grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1;
wire    grp_CAT_I_I_I_O_1_fu_608_ap_start;
wire    grp_CAT_I_I_I_O_1_fu_608_ap_idle;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0;
wire   [5:0] grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0;
wire    grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0;
wire   [63:0] grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0;
wire   [5:0] grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1;
wire    grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1;
wire    grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1;
wire   [63:0] grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1;
reg   [4:0] i_0_reg_396;
wire    ap_CS_fsm_state4;
reg   [4:0] i1_0_reg_407;
wire    ap_CS_fsm_state7;
reg   [4:0] i2_0_reg_419;
wire    ap_CS_fsm_state10;
reg   [4:0] i3_0_reg_430;
wire    ap_CS_fsm_state13;
reg   [1:0] ap_phi_mux_p_088_0_i_phi_fu_446_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_op2_assign_phi_fu_469_p4;
wire    ap_block_pp1_stage0;
reg   [1:0] ap_phi_mux_p_084_0_phi_fu_492_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4;
reg   [1:0] res_tmp_bits_0_reg_522;
reg   [1:0] ap_phi_mux_p_0160_0_phi_fu_538_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] res_tmp_bits_1_reg_568;
reg    grp_karastuba_mul_templa_1_fu_577_ap_start_reg;
reg    grp_karastuba_mul_templa_5_fu_586_ap_start_reg;
reg    grp_karastuba_mul_templa_5_fu_597_ap_start_reg;
reg    grp_CAT_I_I_I_O_1_fu_608_ap_start_reg;
wire   [63:0] zext_ln256_2_fu_673_p1;
wire   [63:0] zext_ln256_fu_678_p1;
wire   [63:0] zext_ln258_2_fu_719_p1;
wire   [63:0] zext_ln258_fu_724_p1;
wire   [63:0] zext_ln285_fu_939_p1;
wire   [63:0] zext_ln286_fu_944_p1;
wire   [63:0] zext_ln299_fu_1029_p1;
wire   [63:0] zext_ln300_fu_1034_p1;
wire   [4:0] xor_ln256_fu_667_p2;
wire   [4:0] xor_ln258_fu_713_p2;
wire   [64:0] zext_ln209_fu_752_p1;
wire   [64:0] zext_ln700_fu_755_p1;
wire   [65:0] zext_ln700_18_fu_772_p1;
wire   [65:0] zext_ln53_fu_764_p1;
wire   [63:0] zext_ln700_17_fu_768_p1;
wire   [63:0] add_ln209_10_fu_781_p2;
wire   [65:0] tmp_V_6_fu_775_p2;
wire   [4:0] zext_ln63_5_fu_808_p1;
wire   [4:0] zext_ln63_4_fu_805_p1;
wire   [4:0] add_ln63_fu_811_p2;
wire   [5:0] zext_ln63_fu_801_p1;
wire   [5:0] zext_ln63_6_fu_817_p1;
wire   [5:0] add2_tmp_bits_fu_821_p2;
wire   [64:0] zext_ln180_fu_849_p1;
wire   [64:0] zext_ln701_fu_852_p1;
wire   [64:0] select_ln701_fu_861_p3;
wire   [64:0] tmp_V_8_fu_880_p2;
wire   [63:0] trunc_ln701_fu_877_p1;
wire   [63:0] select_ln701_2_fu_869_p3;
wire   [4:0] empty_33_fu_899_p3;
wire   [4:0] add_ln95_fu_907_p2;
wire  signed [6:0] sext_ln95_fu_912_p1;
wire   [64:0] zext_ln286_1_fu_955_p1;
wire   [64:0] zext_ln700_19_fu_959_p1;
wire   [65:0] zext_ln700_21_fu_977_p1;
wire   [65:0] zext_ln282_fu_969_p1;
wire   [63:0] zext_ln700_20_fu_973_p1;
wire   [63:0] add_ln209_11_fu_986_p2;
wire   [65:0] tmp_V_fu_980_p2;
wire   [64:0] zext_ln300_1_fu_1045_p1;
wire   [64:0] zext_ln700_22_fu_1049_p1;
wire   [65:0] zext_ln700_24_fu_1067_p1;
wire   [65:0] zext_ln296_fu_1059_p1;
wire   [63:0] zext_ln700_23_fu_1063_p1;
wire   [63:0] add_ln209_12_fu_1076_p2;
wire   [65:0] tmp_V_9_fu_1070_p2;
wire   [2:0] zext_ln304_fu_1098_p1;
wire    ap_CS_fsm_state40;
wire   [1:0] mul_ln306_fu_1117_p0;
wire   [1:0] mul_ln306_fu_1117_p1;
wire   [3:0] zext_ln306_fu_1107_p1;
wire   [3:0] mul_ln306_fu_1117_p2;
wire   [3:0] add_ln306_fu_1123_p2;
reg   [3:0] ap_return_preg;
reg   [23:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [3:0] mul_ln306_fu_1117_p00;
wire   [3:0] mul_ln306_fu_1117_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 24'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 grp_karastuba_mul_templa_1_fu_577_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_5_fu_586_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_5_fu_597_ap_start_reg = 1'b0;
#0 grp_CAT_I_I_I_O_1_fu_608_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_V_address0),
    .ce0(lhs0_digits_data_V_ce0),
    .we0(lhs0_digits_data_V_we0),
    .d0(reg_618),
    .q0(lhs0_digits_data_V_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_V_address0),
    .ce0(lhs1_digits_data_V_ce0),
    .we0(lhs1_digits_data_V_we0),
    .d0(reg_618),
    .q0(lhs1_digits_data_V_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_V_address0),
    .ce0(rhs0_digits_data_V_ce0),
    .we0(rhs0_digits_data_V_we0),
    .d0(reg_626),
    .q0(rhs0_digits_data_V_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_V_address0),
    .ce0(rhs1_digits_data_V_ce0),
    .we0(rhs1_digits_data_V_we0),
    .d0(reg_626),
    .q0(rhs1_digits_data_V_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(reg_618),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(reg_618),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(reg_626),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(reg_626),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_temBew #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z0_digits_data_V_address0),
    .ce0(z0_digits_data_V_ce0),
    .we0(z0_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0),
    .q0(z0_digits_data_V_q0),
    .address1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1),
    .ce1(z0_digits_data_V_ce1),
    .we1(z0_digits_data_V_we1),
    .d1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1),
    .q1(z0_digits_data_V_q1)
);

karastuba_mul_temBew #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_digits_data_V_address0),
    .ce0(z2_digits_data_V_ce0),
    .we0(z2_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0),
    .q0(z2_digits_data_V_q0),
    .address1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1),
    .ce1(z2_digits_data_V_ce1),
    .we1(z2_digits_data_V_we1),
    .d1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1),
    .q1(z2_digits_data_V_q1)
);

karastuba_mul_temBew #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
cross_mul_digits_dat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cross_mul_digits_dat_address0),
    .ce0(cross_mul_digits_dat_ce0),
    .we0(cross_mul_digits_dat_we0),
    .d0(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0),
    .q0(cross_mul_digits_dat_q0),
    .address1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1),
    .ce1(cross_mul_digits_dat_ce1),
    .we1(cross_mul_digits_dat_we1),
    .d1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1),
    .q1(cross_mul_digits_dat_q1)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
add2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_V_address0),
    .ce0(add2_digits_data_V_ce0),
    .we0(add2_digits_data_V_we0),
    .d0(add_ln209_5_reg_1261),
    .q0(add2_digits_data_V_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_V_address0),
    .ce0(z1_digits_data_V_ce0),
    .we0(z1_digits_data_V_we0),
    .d0(add_ln700_13_reg_1321),
    .q0(z1_digits_data_V_q0)
);

karastuba_mul_templa_1 grp_karastuba_mul_templa_1_fu_577(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_1_fu_577_ap_start),
    .ap_done(grp_karastuba_mul_templa_1_fu_577_ap_done),
    .ap_idle(grp_karastuba_mul_templa_1_fu_577_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_1_fu_577_ap_ready),
    .lhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0),
    .lhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0),
    .lhs0_tmp_digits_data_V_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0),
    .lhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0),
    .lhs1_tmp_digits_data_V_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0),
    .rhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0),
    .rhs0_tmp_digits_data_V_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0),
    .rhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0),
    .rhs1_tmp_digits_data_V_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_digits_data_V_address0(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0),
    .cross_mul_digits_data_V_ce0(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0),
    .cross_mul_digits_data_V_we0(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0),
    .cross_mul_digits_data_V_d0(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0),
    .cross_mul_digits_data_V_q0(cross_mul_digits_dat_q0),
    .cross_mul_digits_data_V_address1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1),
    .cross_mul_digits_data_V_ce1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1),
    .cross_mul_digits_data_V_we1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1),
    .cross_mul_digits_data_V_d1(grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1),
    .cross_mul_digits_data_V_q1(cross_mul_digits_dat_q1),
    .ap_return(grp_karastuba_mul_templa_1_fu_577_ap_return)
);

karastuba_mul_templa_5 grp_karastuba_mul_templa_5_fu_586(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_5_fu_586_ap_start),
    .ap_done(grp_karastuba_mul_templa_5_fu_586_ap_done),
    .ap_idle(grp_karastuba_mul_templa_5_fu_586_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_5_fu_586_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_q0(lhs0_digits_data_V_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_q0(rhs0_digits_data_V_q0),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0),
    .res_digits_data_V_q0(z0_digits_data_V_q0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1),
    .res_digits_data_V_q1(z0_digits_data_V_q1),
    .ap_return(grp_karastuba_mul_templa_5_fu_586_ap_return)
);

karastuba_mul_templa_5 grp_karastuba_mul_templa_5_fu_597(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_5_fu_597_ap_start),
    .ap_done(grp_karastuba_mul_templa_5_fu_597_ap_done),
    .ap_idle(grp_karastuba_mul_templa_5_fu_597_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_5_fu_597_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_q0(lhs1_digits_data_V_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_q0(rhs1_digits_data_V_q0),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0),
    .res_digits_data_V_q0(z2_digits_data_V_q0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1),
    .res_digits_data_V_q1(z2_digits_data_V_q1),
    .ap_return(grp_karastuba_mul_templa_5_fu_597_ap_return)
);

CAT_I_I_I_O_1 grp_CAT_I_I_I_O_1_fu_608(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_1_fu_608_ap_start),
    .ap_done(grp_CAT_I_I_I_O_1_fu_608_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_1_fu_608_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_1_fu_608_ap_ready),
    .x0_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0),
    .x0_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0),
    .x0_digits_data_V_q0(z0_digits_data_V_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_1326),
    .x1_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0),
    .x1_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0),
    .x1_digits_data_V_q0(z1_digits_data_V_q0),
    .x2_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0),
    .x2_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0),
    .x2_digits_data_V_q0(z2_digits_data_V_q0),
    .w_digits_data_V_address0(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0),
    .w_digits_data_V_q0(res_digits_data_V_q0),
    .w_digits_data_V_address1(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1),
    .w_digits_data_V_ce1(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1),
    .w_digits_data_V_we1(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1),
    .w_digits_data_V_d1(grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1),
    .w_digits_data_V_q1(res_digits_data_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state15)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state15);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state28) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state28)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state28);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state34) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state34)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state34);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            ap_return_preg <= add_ln306_fu_1123_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_1_fu_608_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln258_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_1_fu_577_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln258_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_5_fu_586_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln258_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_5_fu_597_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_638_p2 == 1'd1))) begin
        i1_0_reg_407 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i1_0_reg_407 <= i_9_reg_1163;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln256_fu_655_p2 == 1'd1))) begin
        i2_0_reg_419 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_0_reg_419 <= i_10_reg_1176;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln257_fu_684_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        i3_0_reg_430 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i3_0_reg_430 <= i_11_reg_1195;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
        i4_0_reg_500 <= 6'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_fu_927_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i4_0_reg_500 <= i_14_fu_933_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
        i7_0_reg_546 <= 6'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1017_p2 == 1'd0))) begin
        i7_0_reg_546 <= i_15_fu_1023_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_0_i1_reg_477 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_831_p2 == 1'd0))) begin
        i_0_i1_reg_477 <= i_13_fu_837_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        i_0_i_reg_454 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_734_p2 == 1'd0))) begin
        i_0_i_reg_454 <= i_12_fu_740_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_396 <= i_reg_1144;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_396 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
        j8_0_reg_557 <= 7'd32;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1017_p2 == 1'd0))) begin
        j8_0_reg_557 <= j_5_fu_1039_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
        j_0_reg_511 <= 7'd32;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_fu_927_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_0_reg_511 <= j_fu_949_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        op2_assign_reg_465 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1276_pp1_iter3_reg == 1'd0))) begin
        op2_assign_reg_465 <= tmp_2_reg_1316;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
        p_0160_0_reg_534 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385_pp3_iter3_reg == 1'd0))) begin
        p_0160_0_reg_534 <= trunc_ln858_7_reg_1420;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
        p_084_0_reg_488 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1335_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_084_0_reg_488 <= trunc_ln858_6_reg_1370;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        p_088_0_i_reg_442 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1220_pp0_iter3_reg == 1'd0))) begin
        p_088_0_i_reg_442 <= trunc_ln_reg_1266;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln278_reg_1331 == 1'd0))) begin
        res_tmp_bits_0_reg_522 <= p_084_0_reg_488;
    end else if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (icmp_ln278_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
        res_tmp_bits_0_reg_522 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        res_tmp_bits_1_reg_568 <= add_ln304_fu_1102_p2;
    end else if (((icmp_ln292_fu_1012_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state33))) begin
        res_tmp_bits_1_reg_568 <= zext_ln292_fu_1008_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1276 == 1'd0))) begin
        add2_digits_data_V_l_reg_1305 <= add2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385_pp3_iter2_reg == 1'd0))) begin
        add_ln209_4_reg_1415 <= add_ln209_4_fu_1082_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_1220_pp0_iter2_reg == 1'd0))) begin
        add_ln209_5_reg_1261 <= add_ln209_5_fu_786_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1335_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln209_reg_1365 <= add_ln209_fu_992_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1276_pp1_iter2_reg == 1'd0))) begin
        add_ln700_13_reg_1321 <= add_ln700_13_fu_893_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1335_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln700_14_reg_1360 <= add_ln700_14_fu_963_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385_pp3_iter1_reg == 1'd0))) begin
        add_ln700_16_reg_1410 <= add_ln700_16_fu_1053_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_1220_pp0_iter1_reg == 1'd0))) begin
        add_ln700_reg_1256 <= add_ln700_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1276 == 1'd0))) begin
        cross_mul_digits_dat_4_reg_1300 <= cross_mul_digits_dat_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_1276 <= exitcond_i_fu_831_p2;
        exitcond_i_reg_1276_pp1_iter1_reg <= exitcond_i_reg_1276;
        zext_ln80_reg_1285_pp1_iter1_reg[5 : 0] <= zext_ln80_reg_1285[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_reg_1276_pp1_iter2_reg <= exitcond_i_reg_1276_pp1_iter1_reg;
        exitcond_i_reg_1276_pp1_iter3_reg <= exitcond_i_reg_1276_pp1_iter2_reg;
        zext_ln80_reg_1285_pp1_iter2_reg[5 : 0] <= zext_ln80_reg_1285_pp1_iter1_reg[5 : 0];
        zext_ln80_reg_1285_pp1_iter3_reg[5 : 0] <= zext_ln80_reg_1285_pp1_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_10_reg_1176 <= i_10_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_11_reg_1195 <= i_11_fu_707_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_9_reg_1163 <= i_9_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1144 <= i_fu_644_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        icmp_ln278_reg_1331 <= icmp_ln278_fu_922_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln282_reg_1335 <= icmp_ln282_fu_927_p2;
        icmp_ln282_reg_1335_pp2_iter1_reg <= icmp_ln282_reg_1335;
        res_digits_data_V_ad_reg_1349_pp2_iter1_reg <= res_digits_data_V_ad_reg_1349;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln282_reg_1335_pp2_iter2_reg <= icmp_ln282_reg_1335_pp2_iter1_reg;
        icmp_ln282_reg_1335_pp2_iter3_reg <= icmp_ln282_reg_1335_pp2_iter2_reg;
        reg_618_pp2_iter2_reg <= reg_618;
        reg_634_pp2_iter2_reg <= reg_634;
        res_digits_data_V_ad_reg_1349_pp2_iter2_reg <= res_digits_data_V_ad_reg_1349_pp2_iter1_reg;
        res_digits_data_V_ad_reg_1349_pp2_iter3_reg <= res_digits_data_V_ad_reg_1349_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln296_reg_1385 <= icmp_ln296_fu_1017_p2;
        icmp_ln296_reg_1385_pp3_iter1_reg <= icmp_ln296_reg_1385;
        res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg <= res_digits_data_V_ad_2_reg_1399;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln296_reg_1385_pp3_iter2_reg <= icmp_ln296_reg_1385_pp3_iter1_reg;
        icmp_ln296_reg_1385_pp3_iter3_reg <= icmp_ln296_reg_1385_pp3_iter2_reg;
        reg_626_pp3_iter2_reg <= reg_626;
        reg_634_pp3_iter2_reg <= reg_634;
        res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg <= res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg;
        res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg <= res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln53_reg_1220 <= icmp_ln53_fu_734_p2;
        icmp_ln53_reg_1220_pp0_iter1_reg <= icmp_ln53_reg_1220;
        zext_ln58_reg_1229_pp0_iter1_reg[5 : 0] <= zext_ln58_reg_1229[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln53_reg_1220_pp0_iter2_reg <= icmp_ln53_reg_1220_pp0_iter1_reg;
        icmp_ln53_reg_1220_pp0_iter3_reg <= icmp_ln53_reg_1220_pp0_iter2_reg;
        z0_digits_data_V_loa_reg_1244_pp0_iter2_reg <= z0_digits_data_V_loa_reg_1244;
        z2_digits_data_V_loa_reg_1250_pp0_iter2_reg <= z2_digits_data_V_loa_reg_1250;
        zext_ln58_reg_1229_pp0_iter2_reg[5 : 0] <= zext_ln58_reg_1229_pp0_iter1_reg[5 : 0];
        zext_ln58_reg_1229_pp0_iter3_reg[5 : 0] <= zext_ln58_reg_1229_pp0_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1335 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        reg_618 <= lhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385 == 1'd0)))) begin
        reg_626 <= rhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385 == 1'd0)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1335 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        reg_634 <= res_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1017_p2 == 1'd0))) begin
        res_digits_data_V_ad_2_reg_1399 <= zext_ln300_fu_1034_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_fu_927_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        res_digits_data_V_ad_reg_1349 <= zext_ln286_fu_944_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_i_reg_1276_pp1_iter2_reg == 1'd0))) begin
        tmp_2_reg_1316 <= tmp_V_8_fu_880_p2[32'd64];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1276_pp1_iter1_reg == 1'd0))) begin
        tmp_V_7_reg_1310 <= tmp_V_7_fu_855_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln282_reg_1335_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln858_6_reg_1370 <= {{tmp_V_fu_980_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385_pp3_iter2_reg == 1'd0))) begin
        trunc_ln858_7_reg_1420 <= {{tmp_V_9_fu_1070_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln53_reg_1220_pp0_iter2_reg == 1'd0))) begin
        trunc_ln_reg_1266 <= {{tmp_V_6_fu_775_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1220 == 1'd0))) begin
        z0_digits_data_V_loa_reg_1244 <= z0_digits_data_V_q0;
        z2_digits_data_V_loa_reg_1250 <= z2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        z0_tmp_bits_reg_1205 <= grp_karastuba_mul_templa_5_fu_586_ap_return;
        z2_tmp_bits_reg_1210 <= grp_karastuba_mul_templa_5_fu_597_ap_return;
        zext_ln266_reg_1215[3 : 0] <= zext_ln266_fu_730_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        z1_tmp_bits_reg_1326 <= z1_tmp_bits_fu_916_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_638_p2 == 1'd0))) begin
        zext_ln255_reg_1149[4 : 0] <= zext_ln255_fu_650_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln257_fu_684_p2 == 1'd0))) begin
        zext_ln257_reg_1181[4 : 0] <= zext_ln257_fu_696_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        zext_ln292_reg_1375[1 : 0] <= zext_ln292_fu_1008_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_734_p2 == 1'd0))) begin
        zext_ln58_reg_1229[5 : 0] <= zext_ln58_fu_746_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        zext_ln63_7_reg_1271[5 : 0] <= zext_ln63_7_fu_827_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_831_p2 == 1'd0))) begin
        zext_ln80_reg_1285[5 : 0] <= zext_ln80_fu_843_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_V_address0 = zext_ln80_fu_843_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add2_digits_data_V_address0 = zext_ln58_reg_1229_pp0_iter3_reg;
    end else begin
        add2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        add2_digits_data_V_ce0 = 1'b1;
    end else begin
        add2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1220_pp0_iter3_reg == 1'd0))) begin
        add2_digits_data_V_we0 = 1'b1;
    end else begin
        add2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln53_fu_734_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_831_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln282_fu_927_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state28 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state28 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln296_fu_1017_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state34 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state34 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1276_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_op2_assign_phi_fu_469_p4 = tmp_2_reg_1316;
    end else begin
        ap_phi_mux_op2_assign_phi_fu_469_p4 = op2_assign_reg_465;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln296_reg_1385_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_0160_0_phi_fu_538_p4 = trunc_ln858_7_reg_1420;
    end else begin
        ap_phi_mux_p_0160_0_phi_fu_538_p4 = p_0160_0_reg_534;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1335_pp2_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_084_0_phi_fu_492_p4 = trunc_ln858_6_reg_1370;
    end else begin
        ap_phi_mux_p_084_0_phi_fu_492_p4 = p_084_0_reg_488;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1220_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_088_0_i_phi_fu_446_p4 = trunc_ln_reg_1266;
    end else begin
        ap_phi_mux_p_088_0_i_phi_fu_446_p4 = p_088_0_i_reg_442;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln278_reg_1331 == 1'd0))) begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4 = p_084_0_reg_488;
    end else begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4 = res_tmp_bits_0_reg_522;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        ap_return = add_ln306_fu_1123_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_address0 = zext_ln80_fu_843_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_address0 = grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0;
    end else begin
        cross_mul_digits_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_ce0 = grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0;
    end else begin
        cross_mul_digits_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_ce1 = grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1;
    end else begin
        cross_mul_digits_dat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_we0 = grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0;
    end else begin
        cross_mul_digits_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_we1 = grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1;
    end else begin
        cross_mul_digits_dat_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_address0 = zext_ln255_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0;
    end else begin
        lhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0;
    end else begin
        lhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_we0 = 1'b1;
    end else begin
        lhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_address0 = zext_ln255_reg_1149;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_address0 = zext_ln256_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0;
    end else begin
        lhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0;
    end else begin
        lhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_we0 = 1'b1;
    end else begin
        lhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_address0 = zext_ln256_fu_678_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        lhs_digits_data_V_address0 = zext_ln285_fu_939_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs_digits_data_V_address0 = zext_ln256_2_fu_673_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lhs_digits_data_V_address0 = zext_ln255_fu_650_p1;
    end else begin
        lhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        res_digits_data_V_address0 = zext_ln300_fu_1034_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        res_digits_data_V_address0 = zext_ln286_fu_944_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0;
    end else begin
        res_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_V_address1 = res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_V_address1 = res_digits_data_V_ad_reg_1349_pp2_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_address1 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1;
    end else begin
        res_digits_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0;
    end else begin
        res_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_ce1 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1;
    end else begin
        res_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_V_d1 = add_ln209_4_reg_1415;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_V_d1 = add_ln209_reg_1365;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_d1 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1;
    end else begin
        res_digits_data_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_we0 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0;
    end else begin
        res_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1385_pp3_iter3_reg == 1'd0)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1335_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_V_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        res_digits_data_V_we1 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1;
    end else begin
        res_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_address0 = zext_ln257_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0;
    end else begin
        rhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0;
    end else begin
        rhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_we0 = 1'b1;
    end else begin
        rhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_address0 = zext_ln257_reg_1181;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_address0 = zext_ln258_fu_724_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0;
    end else begin
        rhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0;
    end else begin
        rhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_we0 = 1'b1;
    end else begin
        rhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_address0 = zext_ln258_fu_724_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        rhs_digits_data_V_address0 = zext_ln299_fu_1029_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        rhs_digits_data_V_address0 = zext_ln258_2_fu_719_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rhs_digits_data_V_address0 = zext_ln257_fu_696_p1;
    end else begin
        rhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_address0 = zext_ln58_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z0_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0;
    end else begin
        z0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z0_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0;
    end else begin
        z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_ce1 = grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1;
    end else begin
        z0_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_we0 = grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0;
    end else begin
        z0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_we1 = grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1;
    end else begin
        z0_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_address0 = zext_ln80_reg_1285_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z1_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0;
    end else begin
        z1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z1_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0;
    end else begin
        z1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1276_pp1_iter3_reg == 1'd0))) begin
        z1_digits_data_V_we0 = 1'b1;
    end else begin
        z1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_address0 = zext_ln58_fu_746_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z2_digits_data_V_address0 = grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_address0 = grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0;
    end else begin
        z2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z2_digits_data_V_ce0 = grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_ce0 = grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0;
    end else begin
        z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_ce1 = grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1;
    end else begin
        z2_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_we0 = grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0;
    end else begin
        z2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_we1 = grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1;
    end else begin
        z2_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_638_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln256_fu_655_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln257_fu_684_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state11 : begin
            if (((icmp_ln258_fu_701_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_734_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_734_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_831_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_831_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27) & (icmp_ln278_fu_922_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_1_fu_608_ap_done == 1'b1) & (icmp_ln278_fu_922_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_927_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_927_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (ap_enable_reg_pp2_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state33 : begin
            if (((1'b1 == ap_CS_fsm_state33) & (icmp_ln292_fu_1012_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1017_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1017_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_tmp_bits_fu_821_p2 = (zext_ln63_fu_801_p1 + zext_ln63_6_fu_817_p1);

assign add_ln209_10_fu_781_p2 = (z2_digits_data_V_loa_reg_1250_pp0_iter2_reg + zext_ln700_17_fu_768_p1);

assign add_ln209_11_fu_986_p2 = (reg_634_pp2_iter2_reg + zext_ln700_20_fu_973_p1);

assign add_ln209_12_fu_1076_p2 = (reg_634_pp3_iter2_reg + zext_ln700_23_fu_1063_p1);

assign add_ln209_4_fu_1082_p2 = (add_ln209_12_fu_1076_p2 + reg_626_pp3_iter2_reg);

assign add_ln209_5_fu_786_p2 = (add_ln209_10_fu_781_p2 + z0_digits_data_V_loa_reg_1244_pp0_iter2_reg);

assign add_ln209_fu_992_p2 = (add_ln209_11_fu_986_p2 + reg_618_pp2_iter2_reg);

assign add_ln304_fu_1102_p2 = (zext_ln292_reg_1375 + zext_ln304_fu_1098_p1);

assign add_ln306_fu_1123_p2 = (zext_ln306_fu_1107_p1 + mul_ln306_fu_1117_p2);

assign add_ln63_fu_811_p2 = (zext_ln63_5_fu_808_p1 + zext_ln63_4_fu_805_p1);

assign add_ln700_13_fu_893_p2 = (trunc_ln701_fu_877_p1 + select_ln701_2_fu_869_p3);

assign add_ln700_14_fu_963_p2 = (zext_ln286_1_fu_955_p1 + zext_ln700_19_fu_959_p1);

assign add_ln700_16_fu_1053_p2 = (zext_ln300_1_fu_1045_p1 + zext_ln700_22_fu_1049_p1);

assign add_ln700_fu_758_p2 = (zext_ln209_fu_752_p1 + zext_ln700_fu_755_p1);

assign add_ln95_fu_907_p2 = (empty_33_fu_899_p3 + zext_ln266_reg_1215);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_karastuba_mul_templa_1_fu_577_ap_done == 1'b0) | (grp_karastuba_mul_templa_5_fu_597_ap_done == 1'b0) | (grp_karastuba_mul_templa_5_fu_586_ap_done == 1'b0));
end

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_33_fu_899_p3 = ((op2_assign_reg_465[0:0] === 1'b1) ? 5'd31 : 5'd0);

assign exitcond_i_fu_831_p2 = ((i_0_i1_reg_477 == 6'd32) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_1_fu_608_ap_start = grp_CAT_I_I_I_O_1_fu_608_ap_start_reg;

assign grp_karastuba_mul_templa_1_fu_577_ap_start = grp_karastuba_mul_templa_1_fu_577_ap_start_reg;

assign grp_karastuba_mul_templa_5_fu_586_ap_start = grp_karastuba_mul_templa_5_fu_586_ap_start_reg;

assign grp_karastuba_mul_templa_5_fu_597_ap_start = grp_karastuba_mul_templa_5_fu_597_ap_start_reg;

assign i_10_fu_690_p2 = (i2_0_reg_419 + 5'd1);

assign i_11_fu_707_p2 = (i3_0_reg_430 + 5'd1);

assign i_12_fu_740_p2 = (i_0_i_reg_454 + 6'd1);

assign i_13_fu_837_p2 = (i_0_i1_reg_477 + 6'd1);

assign i_14_fu_933_p2 = (i4_0_reg_500 + 6'd1);

assign i_15_fu_1023_p2 = (i7_0_reg_546 + 6'd1);

assign i_9_fu_661_p2 = (i1_0_reg_407 + 5'd1);

assign i_fu_644_p2 = (i_0_reg_396 + 5'd1);

assign icmp_ln255_fu_638_p2 = ((i_0_reg_396 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_655_p2 = ((i1_0_reg_407 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_684_p2 = ((i2_0_reg_419 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_701_p2 = ((i3_0_reg_430 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_922_p2 = ((rhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_927_p2 = ((i4_0_reg_500 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1012_p2 = ((lhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_1017_p2 = ((i7_0_reg_546 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_734_p2 = ((i_0_i_reg_454 == 6'd32) ? 1'b1 : 1'b0);

assign j_5_fu_1039_p2 = (j8_0_reg_557 + 7'd1);

assign j_fu_949_p2 = (j_0_reg_511 + 7'd1);

assign mul_ln306_fu_1117_p0 = mul_ln306_fu_1117_p00;

assign mul_ln306_fu_1117_p00 = rhs_tmp_bits_read;

assign mul_ln306_fu_1117_p1 = mul_ln306_fu_1117_p10;

assign mul_ln306_fu_1117_p10 = lhs_tmp_bits_read;

assign mul_ln306_fu_1117_p2 = (mul_ln306_fu_1117_p0 * mul_ln306_fu_1117_p1);

assign res_digits_data_V_d0 = grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0;

assign select_ln701_2_fu_869_p3 = ((ap_phi_mux_op2_assign_phi_fu_469_p4[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln701_fu_861_p3 = ((ap_phi_mux_op2_assign_phi_fu_469_p4[0:0] === 1'b1) ? 65'd36893488147419103231 : 65'd0);

assign sext_ln95_fu_912_p1 = $signed(add_ln95_fu_907_p2);

assign tmp_V_6_fu_775_p2 = (zext_ln700_18_fu_772_p1 + zext_ln53_fu_764_p1);

assign tmp_V_7_fu_855_p2 = (zext_ln180_fu_849_p1 - zext_ln701_fu_852_p1);

assign tmp_V_8_fu_880_p2 = (select_ln701_fu_861_p3 + tmp_V_7_reg_1310);

assign tmp_V_9_fu_1070_p2 = (zext_ln700_24_fu_1067_p1 + zext_ln296_fu_1059_p1);

assign tmp_V_fu_980_p2 = (zext_ln700_21_fu_977_p1 + zext_ln282_fu_969_p1);

assign trunc_ln701_fu_877_p1 = tmp_V_7_reg_1310[63:0];

assign xor_ln256_fu_667_p2 = (i1_0_reg_407 ^ 5'd16);

assign xor_ln258_fu_713_p2 = (i3_0_reg_430 ^ 5'd16);

assign z1_tmp_bits_fu_916_p2 = ($signed(sext_ln95_fu_912_p1) - $signed(zext_ln63_7_reg_1271));

assign zext_ln180_fu_849_p1 = cross_mul_digits_dat_4_reg_1300;

assign zext_ln209_fu_752_p1 = z0_digits_data_V_loa_reg_1244;

assign zext_ln255_fu_650_p1 = i_0_reg_396;

assign zext_ln256_2_fu_673_p1 = xor_ln256_fu_667_p2;

assign zext_ln256_fu_678_p1 = i1_0_reg_407;

assign zext_ln257_fu_696_p1 = i2_0_reg_419;

assign zext_ln258_2_fu_719_p1 = xor_ln258_fu_713_p2;

assign zext_ln258_fu_724_p1 = i3_0_reg_430;

assign zext_ln266_fu_730_p1 = grp_karastuba_mul_templa_1_fu_577_ap_return;

assign zext_ln282_fu_969_p1 = ap_phi_mux_p_084_0_phi_fu_492_p4;

assign zext_ln285_fu_939_p1 = i4_0_reg_500;

assign zext_ln286_1_fu_955_p1 = reg_618;

assign zext_ln286_fu_944_p1 = j_0_reg_511;

assign zext_ln292_fu_1008_p1 = ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4;

assign zext_ln296_fu_1059_p1 = ap_phi_mux_p_0160_0_phi_fu_538_p4;

assign zext_ln299_fu_1029_p1 = i7_0_reg_546;

assign zext_ln300_1_fu_1045_p1 = reg_626;

assign zext_ln300_fu_1034_p1 = j8_0_reg_557;

assign zext_ln304_fu_1098_p1 = p_0160_0_reg_534;

assign zext_ln306_fu_1107_p1 = res_tmp_bits_1_reg_568;

assign zext_ln53_fu_764_p1 = ap_phi_mux_p_088_0_i_phi_fu_446_p4;

assign zext_ln58_fu_746_p1 = i_0_i_reg_454;

assign zext_ln63_4_fu_805_p1 = z0_tmp_bits_reg_1205;

assign zext_ln63_5_fu_808_p1 = z2_tmp_bits_reg_1210;

assign zext_ln63_6_fu_817_p1 = add_ln63_fu_811_p2;

assign zext_ln63_7_fu_827_p1 = add2_tmp_bits_fu_821_p2;

assign zext_ln63_fu_801_p1 = p_088_0_i_reg_442;

assign zext_ln700_17_fu_768_p1 = ap_phi_mux_p_088_0_i_phi_fu_446_p4;

assign zext_ln700_18_fu_772_p1 = add_ln700_reg_1256;

assign zext_ln700_19_fu_959_p1 = reg_634;

assign zext_ln700_20_fu_973_p1 = ap_phi_mux_p_084_0_phi_fu_492_p4;

assign zext_ln700_21_fu_977_p1 = add_ln700_14_reg_1360;

assign zext_ln700_22_fu_1049_p1 = reg_634;

assign zext_ln700_23_fu_1063_p1 = ap_phi_mux_p_0160_0_phi_fu_538_p4;

assign zext_ln700_24_fu_1067_p1 = add_ln700_16_reg_1410;

assign zext_ln700_fu_755_p1 = z2_digits_data_V_loa_reg_1250;

assign zext_ln701_fu_852_p1 = add2_digits_data_V_l_reg_1305;

assign zext_ln80_fu_843_p1 = i_0_i1_reg_477;

always @ (posedge ap_clk) begin
    zext_ln255_reg_1149[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln257_reg_1181[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln266_reg_1215[4] <= 1'b0;
    zext_ln58_reg_1229[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1229_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1229_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1229_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln63_7_reg_1271[6] <= 1'b0;
    zext_ln80_reg_1285[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1285_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1285_pp1_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1285_pp1_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln292_reg_1375[2] <= 1'b0;
end

endmodule //karastuba_mul_templa_4
