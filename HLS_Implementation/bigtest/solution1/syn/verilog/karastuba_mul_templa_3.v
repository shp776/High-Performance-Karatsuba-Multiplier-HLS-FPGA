// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_templa_3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0,
        rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0,
        res_digits_data_V_address0,
        res_digits_data_V_ce0,
        res_digits_data_V_we0,
        res_digits_data_V_d0,
        res_digits_data_V_q0,
        res_digits_data_V_address1,
        res_digits_data_V_ce1,
        res_digits_data_V_we1,
        res_digits_data_V_d1,
        res_digits_data_V_q1
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_pp0_stage0 = 19'd16384;
parameter    ap_ST_fsm_state20 = 19'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 19'd65536;
parameter    ap_ST_fsm_state26 = 19'd131072;
parameter    ap_ST_fsm_state27 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] lhs_digits_data_V_address0;
output   lhs_digits_data_V_ce0;
input  [63:0] lhs_digits_data_V_q0;
output  [5:0] rhs_digits_data_V_address0;
output   rhs_digits_data_V_ce0;
input  [63:0] rhs_digits_data_V_q0;
output  [6:0] res_digits_data_V_address0;
output   res_digits_data_V_ce0;
output   res_digits_data_V_we0;
output  [63:0] res_digits_data_V_d0;
input  [63:0] res_digits_data_V_q0;
output  [6:0] res_digits_data_V_address1;
output   res_digits_data_V_ce1;
output   res_digits_data_V_we1;
output  [63:0] res_digits_data_V_d1;
input  [63:0] res_digits_data_V_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] lhs_digits_data_V_address0;
reg lhs_digits_data_V_ce0;
reg[5:0] rhs_digits_data_V_address0;
reg rhs_digits_data_V_ce0;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] p_088_0_i_reg_377;
reg   [6:0] i_0_i_reg_389;
reg   [0:0] op2_assign_reg_400;
reg   [6:0] i_0_i1_reg_412;
reg   [63:0] reg_464;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state6;
reg   [63:0] reg_472;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state12;
wire   [5:0] i_fu_486_p2;
reg   [5:0] i_reg_767;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln255_fu_492_p1;
reg   [63:0] zext_ln255_reg_772;
wire   [0:0] icmp_ln255_fu_480_p2;
wire   [5:0] i_16_fu_503_p2;
reg   [5:0] i_16_reg_786;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln256_fu_497_p2;
wire   [5:0] i_17_fu_532_p2;
reg   [5:0] i_17_reg_799;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln257_fu_538_p1;
reg   [63:0] zext_ln257_reg_804;
wire   [0:0] icmp_ln257_fu_526_p2;
wire   [5:0] i_18_fu_549_p2;
reg   [5:0] i_18_reg_818;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln258_fu_543_p2;
wire   [3:0] grp_karastuba_mul_templa_4_fu_432_ap_return;
reg   [3:0] z0_tmp_bits_reg_828;
wire    ap_CS_fsm_state14;
wire    grp_karastuba_mul_templa_4_fu_432_ap_ready;
wire    grp_karastuba_mul_templa_4_fu_432_ap_done;
wire    grp_karastuba_mul_templa_4_fu_443_ap_ready;
wire    grp_karastuba_mul_templa_4_fu_443_ap_done;
wire    grp_karastuba_mul_templa_fu_423_ap_ready;
wire    grp_karastuba_mul_templa_fu_423_ap_done;
reg    ap_block_state14_on_subcall_done;
wire   [3:0] grp_karastuba_mul_templa_4_fu_443_ap_return;
reg   [3:0] z2_tmp_bits_reg_833;
wire   [4:0] zext_ln266_fu_572_p1;
reg   [4:0] zext_ln266_reg_838;
wire   [0:0] icmp_ln53_fu_576_p2;
reg   [0:0] icmp_ln53_reg_843;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state15_pp0_stage0_iter0;
wire    ap_block_state16_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state18_pp0_stage0_iter3;
wire    ap_block_state19_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_843_pp0_iter1_reg;
reg   [0:0] icmp_ln53_reg_843_pp0_iter2_reg;
reg   [0:0] icmp_ln53_reg_843_pp0_iter3_reg;
wire   [6:0] i_19_fu_582_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln58_fu_588_p1;
reg   [63:0] zext_ln58_reg_852;
reg   [63:0] zext_ln58_reg_852_pp0_iter1_reg;
reg   [63:0] zext_ln58_reg_852_pp0_iter2_reg;
reg   [63:0] zext_ln58_reg_852_pp0_iter3_reg;
wire   [63:0] z0_digits_data_V_q0;
reg   [63:0] z0_digits_data_V_loa_reg_867;
reg   [63:0] z0_digits_data_V_loa_reg_867_pp0_iter2_reg;
wire   [63:0] z2_digits_data_V_q0;
reg   [63:0] z2_digits_data_V_loa_reg_873;
reg   [63:0] z2_digits_data_V_loa_reg_873_pp0_iter2_reg;
wire   [64:0] add_ln700_fu_600_p2;
reg   [64:0] add_ln700_reg_879;
wire   [63:0] add_ln209_fu_628_p2;
reg   [63:0] add_ln209_reg_884;
reg   [1:0] trunc_ln_reg_889;
reg    ap_enable_reg_pp0_iter3;
wire   [6:0] zext_ln63_9_fu_669_p1;
reg   [6:0] zext_ln63_9_reg_894;
wire    ap_CS_fsm_state20;
wire   [0:0] exitcond_i_fu_673_p2;
reg   [0:0] exitcond_i_reg_899;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state21_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_state23_pp1_stage0_iter2;
wire    ap_block_state24_pp1_stage0_iter3;
wire    ap_block_state25_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_899_pp1_iter1_reg;
reg   [0:0] exitcond_i_reg_899_pp1_iter2_reg;
reg   [0:0] exitcond_i_reg_899_pp1_iter3_reg;
wire   [6:0] i_20_fu_679_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln80_fu_685_p1;
reg   [63:0] zext_ln80_reg_908;
reg   [63:0] zext_ln80_reg_908_pp1_iter1_reg;
reg   [63:0] zext_ln80_reg_908_pp1_iter2_reg;
reg   [63:0] zext_ln80_reg_908_pp1_iter3_reg;
wire   [63:0] cross_mul_digits_dat_q0;
reg   [63:0] cross_mul_digits_dat_6_reg_923;
wire   [63:0] add2_digits_data_V_q0;
reg   [63:0] add2_digits_data_V_l_reg_928;
reg    ap_enable_reg_pp1_iter1;
wire   [64:0] tmp_V_10_fu_697_p2;
reg   [64:0] tmp_V_10_reg_933;
reg   [0:0] tmp_reg_939;
reg    ap_enable_reg_pp1_iter3;
wire   [63:0] add_ln700_15_fu_735_p2;
reg   [63:0] add_ln700_15_reg_944;
wire   [6:0] z1_tmp_bits_fu_758_p2;
reg   [6:0] z1_tmp_bits_reg_949;
wire    ap_CS_fsm_state26;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state15;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
reg   [4:0] lhs0_digits_data_V_address0;
reg    lhs0_digits_data_V_ce0;
reg    lhs0_digits_data_V_we0;
wire   [63:0] lhs0_digits_data_V_q0;
reg   [4:0] lhs1_digits_data_V_address0;
reg    lhs1_digits_data_V_ce0;
reg    lhs1_digits_data_V_we0;
wire   [63:0] lhs1_digits_data_V_q0;
reg   [4:0] rhs0_digits_data_V_address0;
reg    rhs0_digits_data_V_ce0;
reg    rhs0_digits_data_V_we0;
wire   [63:0] rhs0_digits_data_V_q0;
reg   [4:0] rhs1_digits_data_V_address0;
reg    rhs1_digits_data_V_ce0;
reg    rhs1_digits_data_V_we0;
wire   [63:0] rhs1_digits_data_V_q0;
reg   [4:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [63:0] lhs0_tmp_digits_data_q0;
reg   [4:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [63:0] lhs1_tmp_digits_data_q0;
reg   [4:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [63:0] rhs0_tmp_digits_data_q0;
reg   [4:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [63:0] rhs1_tmp_digits_data_q0;
reg   [5:0] z0_digits_data_V_address0;
reg    z0_digits_data_V_ce0;
reg    z0_digits_data_V_we0;
reg    z0_digits_data_V_ce1;
reg    z0_digits_data_V_we1;
wire   [63:0] z0_digits_data_V_q1;
reg   [5:0] z2_digits_data_V_address0;
reg    z2_digits_data_V_ce0;
reg    z2_digits_data_V_we0;
reg    z2_digits_data_V_ce1;
reg    z2_digits_data_V_we1;
wire   [63:0] z2_digits_data_V_q1;
reg   [5:0] cross_mul_digits_dat_address0;
reg    cross_mul_digits_dat_ce0;
reg    cross_mul_digits_dat_we0;
reg    cross_mul_digits_dat_ce1;
reg    cross_mul_digits_dat_we1;
wire   [63:0] cross_mul_digits_dat_q1;
reg   [5:0] add2_digits_data_V_address0;
reg    add2_digits_data_V_ce0;
reg    add2_digits_data_V_we0;
reg   [5:0] z1_digits_data_V_address0;
reg    z1_digits_data_V_ce0;
reg    z1_digits_data_V_we0;
wire   [63:0] z1_digits_data_V_q0;
wire    grp_karastuba_mul_templa_fu_423_ap_start;
wire    grp_karastuba_mul_templa_fu_423_ap_idle;
wire   [4:0] grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0;
wire   [5:0] grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0;
wire    grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0;
wire   [5:0] grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1;
wire    grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1;
wire   [3:0] grp_karastuba_mul_templa_fu_423_ap_return;
wire    grp_karastuba_mul_templa_4_fu_432_ap_start;
wire    grp_karastuba_mul_templa_4_fu_432_ap_idle;
wire   [4:0] grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1;
wire    grp_karastuba_mul_templa_4_fu_443_ap_start;
wire    grp_karastuba_mul_templa_4_fu_443_ap_idle;
wire   [4:0] grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0;
wire   [4:0] grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0;
wire    grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0;
wire   [5:0] grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1;
wire    grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1;
wire    grp_CAT_I_I_I_O_fu_454_ap_start;
wire    grp_CAT_I_I_I_O_fu_454_ap_done;
wire    grp_CAT_I_I_I_O_fu_454_ap_idle;
wire    grp_CAT_I_I_I_O_fu_454_ap_ready;
wire   [5:0] grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0;
wire   [5:0] grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0;
wire   [5:0] grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0;
wire   [6:0] grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0;
wire    grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0;
wire   [63:0] grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0;
wire   [6:0] grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1;
wire    grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1;
wire    grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1;
wire   [63:0] grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1;
reg   [5:0] i_0_reg_331;
wire    ap_CS_fsm_state4;
reg   [5:0] i1_0_reg_342;
wire    ap_CS_fsm_state7;
reg   [5:0] i2_0_reg_354;
wire    ap_CS_fsm_state10;
reg   [5:0] i3_0_reg_365;
wire    ap_CS_fsm_state13;
reg   [1:0] ap_phi_mux_p_088_0_i_phi_fu_381_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_op2_assign_phi_fu_404_p4;
wire    ap_block_pp1_stage0;
reg    grp_karastuba_mul_templa_fu_423_ap_start_reg;
reg    grp_karastuba_mul_templa_4_fu_432_ap_start_reg;
reg    grp_karastuba_mul_templa_4_fu_443_ap_start_reg;
reg    grp_CAT_I_I_I_O_fu_454_ap_start_reg;
wire    ap_CS_fsm_state27;
wire   [63:0] zext_ln256_1_fu_515_p1;
wire   [63:0] zext_ln256_fu_520_p1;
wire   [63:0] zext_ln258_1_fu_561_p1;
wire   [63:0] zext_ln258_fu_566_p1;
wire   [5:0] xor_ln256_fu_509_p2;
wire   [5:0] xor_ln258_fu_555_p2;
wire   [64:0] zext_ln209_fu_594_p1;
wire   [64:0] zext_ln700_fu_597_p1;
wire   [65:0] zext_ln700_25_fu_614_p1;
wire   [65:0] zext_ln53_fu_606_p1;
wire   [63:0] zext_ln700_24_fu_610_p1;
wire   [63:0] add_ln209_13_fu_623_p2;
wire   [65:0] tmp_V_fu_617_p2;
wire   [4:0] zext_ln63_2_fu_650_p1;
wire   [4:0] zext_ln63_1_fu_647_p1;
wire   [4:0] add_ln63_fu_653_p2;
wire   [5:0] zext_ln63_fu_643_p1;
wire   [5:0] zext_ln63_8_fu_659_p1;
wire   [5:0] add2_tmp_bits_fu_663_p2;
wire   [64:0] zext_ln180_fu_691_p1;
wire   [64:0] zext_ln701_fu_694_p1;
wire   [64:0] select_ln701_fu_703_p3;
wire   [64:0] tmp_V_11_fu_722_p2;
wire   [63:0] trunc_ln701_fu_719_p1;
wire   [63:0] select_ln701_3_fu_711_p3;
wire   [4:0] empty_45_fu_741_p3;
wire   [4:0] add_ln95_fu_749_p2;
wire  signed [6:0] sext_ln95_fu_754_p1;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 grp_karastuba_mul_templa_fu_423_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_4_fu_432_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_4_fu_443_ap_start_reg = 1'b0;
#0 grp_CAT_I_I_I_O_fu_454_ap_start_reg = 1'b0;
end

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_V_address0),
    .ce0(lhs0_digits_data_V_ce0),
    .we0(lhs0_digits_data_V_we0),
    .d0(reg_464),
    .q0(lhs0_digits_data_V_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_V_address0),
    .ce0(lhs1_digits_data_V_ce0),
    .we0(lhs1_digits_data_V_we0),
    .d0(reg_464),
    .q0(lhs1_digits_data_V_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_V_address0),
    .ce0(rhs0_digits_data_V_ce0),
    .we0(rhs0_digits_data_V_we0),
    .d0(reg_472),
    .q0(rhs0_digits_data_V_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_V_address0),
    .ce0(rhs1_digits_data_V_ce0),
    .we0(rhs1_digits_data_V_we0),
    .d0(reg_472),
    .q0(rhs1_digits_data_V_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(reg_464),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(reg_464),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(reg_472),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 64 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(reg_472),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_temQgW #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
z0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z0_digits_data_V_address0),
    .ce0(z0_digits_data_V_ce0),
    .we0(z0_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0),
    .q0(z0_digits_data_V_q0),
    .address1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1),
    .ce1(z0_digits_data_V_ce1),
    .we1(z0_digits_data_V_we1),
    .d1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1),
    .q1(z0_digits_data_V_q1)
);

karastuba_mul_temQgW #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
z2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_digits_data_V_address0),
    .ce0(z2_digits_data_V_ce0),
    .we0(z2_digits_data_V_we0),
    .d0(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0),
    .q0(z2_digits_data_V_q0),
    .address1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1),
    .ce1(z2_digits_data_V_ce1),
    .we1(z2_digits_data_V_we1),
    .d1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1),
    .q1(z2_digits_data_V_q1)
);

karastuba_mul_temQgW #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
cross_mul_digits_dat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cross_mul_digits_dat_address0),
    .ce0(cross_mul_digits_dat_ce0),
    .we0(cross_mul_digits_dat_we0),
    .d0(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0),
    .q0(cross_mul_digits_dat_q0),
    .address1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1),
    .ce1(cross_mul_digits_dat_ce1),
    .we1(cross_mul_digits_dat_we1),
    .d1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1),
    .q1(cross_mul_digits_dat_q1)
);

karastuba_mul_temThq #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
add2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_V_address0),
    .ce0(add2_digits_data_V_ce0),
    .we0(add2_digits_data_V_we0),
    .d0(add_ln209_reg_884),
    .q0(add2_digits_data_V_q0)
);

karastuba_mul_temThq #(
    .DataWidth( 64 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
z1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_V_address0),
    .ce0(z1_digits_data_V_ce0),
    .we0(z1_digits_data_V_we0),
    .d0(add_ln700_15_reg_944),
    .q0(z1_digits_data_V_q0)
);

karastuba_mul_templa grp_karastuba_mul_templa_fu_423(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_fu_423_ap_start),
    .ap_done(grp_karastuba_mul_templa_fu_423_ap_done),
    .ap_idle(grp_karastuba_mul_templa_fu_423_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_fu_423_ap_ready),
    .lhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0),
    .lhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0),
    .lhs0_tmp_digits_data_V_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0),
    .lhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0),
    .lhs1_tmp_digits_data_V_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0),
    .rhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0),
    .rhs0_tmp_digits_data_V_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0),
    .rhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0),
    .rhs1_tmp_digits_data_V_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_digits_data_V_address0(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0),
    .cross_mul_digits_data_V_ce0(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0),
    .cross_mul_digits_data_V_we0(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0),
    .cross_mul_digits_data_V_d0(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0),
    .cross_mul_digits_data_V_q0(cross_mul_digits_dat_q0),
    .cross_mul_digits_data_V_address1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1),
    .cross_mul_digits_data_V_ce1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1),
    .cross_mul_digits_data_V_we1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1),
    .cross_mul_digits_data_V_d1(grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1),
    .cross_mul_digits_data_V_q1(cross_mul_digits_dat_q1),
    .ap_return(grp_karastuba_mul_templa_fu_423_ap_return)
);

karastuba_mul_templa_4 grp_karastuba_mul_templa_4_fu_432(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_4_fu_432_ap_start),
    .ap_done(grp_karastuba_mul_templa_4_fu_432_ap_done),
    .ap_idle(grp_karastuba_mul_templa_4_fu_432_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_4_fu_432_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_q0(lhs0_digits_data_V_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_q0(rhs0_digits_data_V_q0),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0),
    .res_digits_data_V_q0(z0_digits_data_V_q0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1),
    .res_digits_data_V_q1(z0_digits_data_V_q1),
    .ap_return(grp_karastuba_mul_templa_4_fu_432_ap_return)
);

karastuba_mul_templa_4 grp_karastuba_mul_templa_4_fu_443(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_4_fu_443_ap_start),
    .ap_done(grp_karastuba_mul_templa_4_fu_443_ap_done),
    .ap_idle(grp_karastuba_mul_templa_4_fu_443_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_4_fu_443_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0),
    .lhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0),
    .lhs_digits_data_V_q0(lhs1_digits_data_V_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0),
    .rhs_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0),
    .rhs_digits_data_V_q0(rhs1_digits_data_V_q0),
    .res_digits_data_V_address0(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0),
    .res_digits_data_V_ce0(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0),
    .res_digits_data_V_we0(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0),
    .res_digits_data_V_d0(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0),
    .res_digits_data_V_q0(z2_digits_data_V_q0),
    .res_digits_data_V_address1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1),
    .res_digits_data_V_ce1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1),
    .res_digits_data_V_we1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1),
    .res_digits_data_V_d1(grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1),
    .res_digits_data_V_q1(z2_digits_data_V_q1),
    .ap_return(grp_karastuba_mul_templa_4_fu_443_ap_return)
);

CAT_I_I_I_O grp_CAT_I_I_I_O_fu_454(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_fu_454_ap_start),
    .ap_done(grp_CAT_I_I_I_O_fu_454_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_fu_454_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_fu_454_ap_ready),
    .x0_digits_data_V_address0(grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0),
    .x0_digits_data_V_ce0(grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0),
    .x0_digits_data_V_q0(z0_digits_data_V_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_949),
    .x1_digits_data_V_address0(grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0),
    .x1_digits_data_V_ce0(grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0),
    .x1_digits_data_V_q0(z1_digits_data_V_q0),
    .x2_digits_data_V_address0(grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0),
    .x2_digits_data_V_ce0(grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0),
    .x2_digits_data_V_q0(z2_digits_data_V_q0),
    .w_digits_data_V_address0(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0),
    .w_digits_data_V_q0(res_digits_data_V_q0),
    .w_digits_data_V_address1(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1),
    .w_digits_data_V_ce1(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1),
    .w_digits_data_V_we1(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1),
    .w_digits_data_V_d1(grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1),
    .w_digits_data_V_q1(res_digits_data_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state15)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state15);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state21)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_fu_454_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state26)) begin
            grp_CAT_I_I_I_O_fu_454_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_fu_454_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_fu_454_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln258_fu_543_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_4_fu_432_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln258_fu_543_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_4_fu_443_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_fu_423_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln258_fu_543_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_fu_423_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_fu_423_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_fu_423_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_480_p2 == 1'd1))) begin
        i1_0_reg_342 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i1_0_reg_342 <= i_16_reg_786;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln256_fu_497_p2 == 1'd1))) begin
        i2_0_reg_354 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        i2_0_reg_354 <= i_17_reg_799;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln257_fu_526_p2 == 1'd1))) begin
        i3_0_reg_365 <= 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        i3_0_reg_365 <= i_18_reg_818;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        i_0_i1_reg_412 <= 7'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_673_p2 == 1'd0))) begin
        i_0_i1_reg_412 <= i_20_fu_679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        i_0_i_reg_389 <= 7'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_fu_576_p2 == 1'd0))) begin
        i_0_i_reg_389 <= i_19_fu_582_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_0_reg_331 <= i_reg_767;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_331 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        op2_assign_reg_400 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_899_pp1_iter3_reg == 1'd0))) begin
        op2_assign_reg_400 <= tmp_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        p_088_0_i_reg_377 <= 2'd0;
    end else if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843_pp0_iter3_reg == 1'd0))) begin
        p_088_0_i_reg_377 <= trunc_ln_reg_889;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_899 == 1'd0))) begin
        add2_digits_data_V_l_reg_928 <= add2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843_pp0_iter2_reg == 1'd0))) begin
        add_ln209_reg_884 <= add_ln209_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_899_pp1_iter2_reg == 1'd0))) begin
        add_ln700_15_reg_944 <= add_ln700_15_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843_pp0_iter1_reg == 1'd0))) begin
        add_ln700_reg_879 <= add_ln700_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_899 == 1'd0))) begin
        cross_mul_digits_dat_6_reg_923 <= cross_mul_digits_dat_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_899 <= exitcond_i_fu_673_p2;
        exitcond_i_reg_899_pp1_iter1_reg <= exitcond_i_reg_899;
        zext_ln80_reg_908_pp1_iter1_reg[6 : 0] <= zext_ln80_reg_908[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_reg_899_pp1_iter2_reg <= exitcond_i_reg_899_pp1_iter1_reg;
        exitcond_i_reg_899_pp1_iter3_reg <= exitcond_i_reg_899_pp1_iter2_reg;
        zext_ln80_reg_908_pp1_iter2_reg[6 : 0] <= zext_ln80_reg_908_pp1_iter1_reg[6 : 0];
        zext_ln80_reg_908_pp1_iter3_reg[6 : 0] <= zext_ln80_reg_908_pp1_iter2_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_16_reg_786 <= i_16_fu_503_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_17_reg_799 <= i_17_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_18_reg_818 <= i_18_fu_549_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_767 <= i_fu_486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln53_reg_843 <= icmp_ln53_fu_576_p2;
        icmp_ln53_reg_843_pp0_iter1_reg <= icmp_ln53_reg_843;
        zext_ln58_reg_852_pp0_iter1_reg[6 : 0] <= zext_ln58_reg_852[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln53_reg_843_pp0_iter2_reg <= icmp_ln53_reg_843_pp0_iter1_reg;
        icmp_ln53_reg_843_pp0_iter3_reg <= icmp_ln53_reg_843_pp0_iter2_reg;
        z0_digits_data_V_loa_reg_867_pp0_iter2_reg <= z0_digits_data_V_loa_reg_867;
        z2_digits_data_V_loa_reg_873_pp0_iter2_reg <= z2_digits_data_V_loa_reg_873;
        zext_ln58_reg_852_pp0_iter2_reg[6 : 0] <= zext_ln58_reg_852_pp0_iter1_reg[6 : 0];
        zext_ln58_reg_852_pp0_iter3_reg[6 : 0] <= zext_ln58_reg_852_pp0_iter2_reg[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state3))) begin
        reg_464 <= lhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_472 <= rhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_899_pp1_iter1_reg == 1'd0))) begin
        tmp_V_10_reg_933 <= tmp_V_10_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_i_reg_899_pp1_iter2_reg == 1'd0))) begin
        tmp_reg_939 <= tmp_V_11_fu_722_p2[32'd64];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843_pp0_iter2_reg == 1'd0))) begin
        trunc_ln_reg_889 <= {{tmp_V_fu_617_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843 == 1'd0))) begin
        z0_digits_data_V_loa_reg_867 <= z0_digits_data_V_q0;
        z2_digits_data_V_loa_reg_873 <= z2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        z0_tmp_bits_reg_828 <= grp_karastuba_mul_templa_4_fu_432_ap_return;
        z2_tmp_bits_reg_833 <= grp_karastuba_mul_templa_4_fu_443_ap_return;
        zext_ln266_reg_838[3 : 0] <= zext_ln266_fu_572_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        z1_tmp_bits_reg_949 <= z1_tmp_bits_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_480_p2 == 1'd0))) begin
        zext_ln255_reg_772[5 : 0] <= zext_ln255_fu_492_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln257_fu_526_p2 == 1'd0))) begin
        zext_ln257_reg_804[5 : 0] <= zext_ln257_fu_538_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_fu_576_p2 == 1'd0))) begin
        zext_ln58_reg_852[6 : 0] <= zext_ln58_fu_588_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        zext_ln63_9_reg_894[5 : 0] <= zext_ln63_9_fu_669_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_673_p2 == 1'd0))) begin
        zext_ln80_reg_908[6 : 0] <= zext_ln80_fu_685_p1[6 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_V_address0 = zext_ln80_fu_685_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add2_digits_data_V_address0 = zext_ln58_reg_852_pp0_iter3_reg;
    end else begin
        add2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        add2_digits_data_V_ce0 = 1'b1;
    end else begin
        add2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_843_pp0_iter3_reg == 1'd0))) begin
        add2_digits_data_V_we0 = 1'b1;
    end else begin
        add2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln53_fu_576_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_673_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_CAT_I_I_I_O_fu_454_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_899_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_op2_assign_phi_fu_404_p4 = tmp_reg_939;
    end else begin
        ap_phi_mux_op2_assign_phi_fu_404_p4 = op2_assign_reg_400;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_843_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_088_0_i_phi_fu_381_p4 = trunc_ln_reg_889;
    end else begin
        ap_phi_mux_p_088_0_i_phi_fu_381_p4 = p_088_0_i_reg_377;
    end
end

always @ (*) begin
    if (((grp_CAT_I_I_I_O_fu_454_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_address0 = zext_ln80_fu_685_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_address0 = grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0;
    end else begin
        cross_mul_digits_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_ce0 = grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0;
    end else begin
        cross_mul_digits_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_ce1 = grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1;
    end else begin
        cross_mul_digits_dat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_we0 = grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0;
    end else begin
        cross_mul_digits_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        cross_mul_digits_dat_we1 = grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1;
    end else begin
        cross_mul_digits_dat_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_address0 = zext_ln255_reg_772;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0;
    end else begin
        lhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0;
    end else begin
        lhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_digits_data_V_we0 = 1'b1;
    end else begin
        lhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_address0 = zext_ln255_reg_772;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_address0 = zext_ln256_fu_520_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0;
    end else begin
        lhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0;
    end else begin
        lhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_digits_data_V_we0 = 1'b1;
    end else begin
        lhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_address0 = zext_ln256_fu_520_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs_digits_data_V_address0 = zext_ln256_1_fu_515_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lhs_digits_data_V_address0 = zext_ln255_fu_492_p1;
    end else begin
        lhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state2))) begin
        lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_address0 = zext_ln257_reg_804;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0;
    end else begin
        rhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0;
    end else begin
        rhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_we0 = 1'b1;
    end else begin
        rhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_address0 = zext_ln257_reg_804;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_address0 = zext_ln258_fu_566_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0;
    end else begin
        rhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0;
    end else begin
        rhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_digits_data_V_we0 = 1'b1;
    end else begin
        rhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_address0 = zext_ln258_fu_566_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rhs_digits_data_V_address0 = zext_ln258_1_fu_561_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rhs_digits_data_V_address0 = zext_ln257_fu_538_p1;
    end else begin
        rhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8))) begin
        rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_address0 = zext_ln58_fu_588_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z0_digits_data_V_address0 = grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0;
    end else begin
        z0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z0_digits_data_V_ce0 = grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0;
    end else begin
        z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_ce1 = grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1;
    end else begin
        z0_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_we0 = grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0;
    end else begin
        z0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z0_digits_data_V_we1 = grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1;
    end else begin
        z0_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_address0 = zext_ln80_reg_908_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z1_digits_data_V_address0 = grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0;
    end else begin
        z1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z1_digits_data_V_ce0 = grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0;
    end else begin
        z1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_899_pp1_iter3_reg == 1'd0))) begin
        z1_digits_data_V_we0 = 1'b1;
    end else begin
        z1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_address0 = zext_ln58_fu_588_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z2_digits_data_V_address0 = grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_address0 = grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0;
    end else begin
        z2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        z2_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        z2_digits_data_V_ce0 = grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_ce0 = grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0;
    end else begin
        z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_ce1 = grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1;
    end else begin
        z2_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_we0 = grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0;
    end else begin
        z2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        z2_digits_data_V_we1 = grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1;
    end else begin
        z2_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_480_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln256_fu_497_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln257_fu_526_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln258_fu_543_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln53_fu_576_p2 == 1'd1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln53_fu_576_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_673_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_673_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            if (((grp_CAT_I_I_I_O_fu_454_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state27))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_tmp_bits_fu_663_p2 = (zext_ln63_fu_643_p1 + zext_ln63_8_fu_659_p1);

assign add_ln209_13_fu_623_p2 = (z2_digits_data_V_loa_reg_873_pp0_iter2_reg + zext_ln700_24_fu_610_p1);

assign add_ln209_fu_628_p2 = (add_ln209_13_fu_623_p2 + z0_digits_data_V_loa_reg_867_pp0_iter2_reg);

assign add_ln63_fu_653_p2 = (zext_ln63_2_fu_650_p1 + zext_ln63_1_fu_647_p1);

assign add_ln700_15_fu_735_p2 = (trunc_ln701_fu_719_p1 + select_ln701_3_fu_711_p3);

assign add_ln700_fu_600_p2 = (zext_ln209_fu_594_p1 + zext_ln700_fu_597_p1);

assign add_ln95_fu_749_p2 = (empty_45_fu_741_p3 + zext_ln266_reg_838);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_karastuba_mul_templa_fu_423_ap_done == 1'b0) | (grp_karastuba_mul_templa_4_fu_443_ap_done == 1'b0) | (grp_karastuba_mul_templa_4_fu_432_ap_done == 1'b0));
end

assign ap_block_state15_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign empty_45_fu_741_p3 = ((op2_assign_reg_400[0:0] === 1'b1) ? 5'd31 : 5'd0);

assign exitcond_i_fu_673_p2 = ((i_0_i1_reg_412 == 7'd64) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_fu_454_ap_start = grp_CAT_I_I_I_O_fu_454_ap_start_reg;

assign grp_karastuba_mul_templa_4_fu_432_ap_start = grp_karastuba_mul_templa_4_fu_432_ap_start_reg;

assign grp_karastuba_mul_templa_4_fu_443_ap_start = grp_karastuba_mul_templa_4_fu_443_ap_start_reg;

assign grp_karastuba_mul_templa_fu_423_ap_start = grp_karastuba_mul_templa_fu_423_ap_start_reg;

assign i_16_fu_503_p2 = (i1_0_reg_342 + 6'd1);

assign i_17_fu_532_p2 = (i2_0_reg_354 + 6'd1);

assign i_18_fu_549_p2 = (i3_0_reg_365 + 6'd1);

assign i_19_fu_582_p2 = (i_0_i_reg_389 + 7'd1);

assign i_20_fu_679_p2 = (i_0_i1_reg_412 + 7'd1);

assign i_fu_486_p2 = (i_0_reg_331 + 6'd1);

assign icmp_ln255_fu_480_p2 = ((i_0_reg_331 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_497_p2 = ((i1_0_reg_342 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_526_p2 = ((i2_0_reg_354 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_543_p2 = ((i3_0_reg_365 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_576_p2 = ((i_0_i_reg_389 == 7'd64) ? 1'b1 : 1'b0);

assign res_digits_data_V_address0 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0;

assign res_digits_data_V_address1 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1;

assign res_digits_data_V_ce0 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0;

assign res_digits_data_V_ce1 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1;

assign res_digits_data_V_d0 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0;

assign res_digits_data_V_d1 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1;

assign res_digits_data_V_we0 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0;

assign res_digits_data_V_we1 = grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1;

assign select_ln701_3_fu_711_p3 = ((ap_phi_mux_op2_assign_phi_fu_404_p4[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln701_fu_703_p3 = ((ap_phi_mux_op2_assign_phi_fu_404_p4[0:0] === 1'b1) ? 65'd36893488147419103231 : 65'd0);

assign sext_ln95_fu_754_p1 = $signed(add_ln95_fu_749_p2);

assign tmp_V_10_fu_697_p2 = (zext_ln180_fu_691_p1 - zext_ln701_fu_694_p1);

assign tmp_V_11_fu_722_p2 = (select_ln701_fu_703_p3 + tmp_V_10_reg_933);

assign tmp_V_fu_617_p2 = (zext_ln700_25_fu_614_p1 + zext_ln53_fu_606_p1);

assign trunc_ln701_fu_719_p1 = tmp_V_10_reg_933[63:0];

assign xor_ln256_fu_509_p2 = (i1_0_reg_342 ^ 6'd32);

assign xor_ln258_fu_555_p2 = (i3_0_reg_365 ^ 6'd32);

assign z1_tmp_bits_fu_758_p2 = ($signed(sext_ln95_fu_754_p1) - $signed(zext_ln63_9_reg_894));

assign zext_ln180_fu_691_p1 = cross_mul_digits_dat_6_reg_923;

assign zext_ln209_fu_594_p1 = z0_digits_data_V_loa_reg_867;

assign zext_ln255_fu_492_p1 = i_0_reg_331;

assign zext_ln256_1_fu_515_p1 = xor_ln256_fu_509_p2;

assign zext_ln256_fu_520_p1 = i1_0_reg_342;

assign zext_ln257_fu_538_p1 = i2_0_reg_354;

assign zext_ln258_1_fu_561_p1 = xor_ln258_fu_555_p2;

assign zext_ln258_fu_566_p1 = i3_0_reg_365;

assign zext_ln266_fu_572_p1 = grp_karastuba_mul_templa_fu_423_ap_return;

assign zext_ln53_fu_606_p1 = ap_phi_mux_p_088_0_i_phi_fu_381_p4;

assign zext_ln58_fu_588_p1 = i_0_i_reg_389;

assign zext_ln63_1_fu_647_p1 = z0_tmp_bits_reg_828;

assign zext_ln63_2_fu_650_p1 = z2_tmp_bits_reg_833;

assign zext_ln63_8_fu_659_p1 = add_ln63_fu_653_p2;

assign zext_ln63_9_fu_669_p1 = add2_tmp_bits_fu_663_p2;

assign zext_ln63_fu_643_p1 = p_088_0_i_reg_377;

assign zext_ln700_24_fu_610_p1 = ap_phi_mux_p_088_0_i_phi_fu_381_p4;

assign zext_ln700_25_fu_614_p1 = add_ln700_reg_879;

assign zext_ln700_fu_597_p1 = z2_digits_data_V_loa_reg_873;

assign zext_ln701_fu_694_p1 = add2_digits_data_V_l_reg_928;

assign zext_ln80_fu_685_p1 = i_0_i1_reg_412;

always @ (posedge ap_clk) begin
    zext_ln255_reg_772[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln257_reg_804[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln266_reg_838[4] <= 1'b0;
    zext_ln58_reg_852[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_852_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_852_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_852_pp0_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln63_9_reg_894[6] <= 1'b0;
    zext_ln80_reg_908[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_908_pp1_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_908_pp1_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_908_pp1_iter3_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
end

endmodule //karastuba_mul_templa_3
