-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity karastuba_mul_templa_5 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
    lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    lhs_digits_data_V_ce0 : OUT STD_LOGIC;
    lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    rhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
    rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
    rhs_digits_data_V_ce0 : OUT STD_LOGIC;
    rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    res_digits_data_V_ce0 : OUT STD_LOGIC;
    res_digits_data_V_we0 : OUT STD_LOGIC;
    res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    res_digits_data_V_ce1 : OUT STD_LOGIC;
    res_digits_data_V_we1 : OUT STD_LOGIC;
    res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of karastuba_mul_templa_5 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv65_1FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (64 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_088_0_i_reg_450 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_0_i_reg_462 : STD_LOGIC_VECTOR (4 downto 0);
    signal op2_assign_reg_473 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i2_reg_485 : STD_LOGIC_VECTOR (4 downto 0);
    signal p_084_0_reg_496 : STD_LOGIC_VECTOR (1 downto 0);
    signal i4_0_reg_508 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_0_reg_519 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_0160_0_reg_542 : STD_LOGIC_VECTOR (1 downto 0);
    signal i7_0_reg_554 : STD_LOGIC_VECTOR (4 downto 0);
    signal j8_0_reg_565 : STD_LOGIC_VECTOR (5 downto 0);
    signal reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_block_state24_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln273_reg_1323 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_626_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_626_pp3_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state30_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state31_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state32_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state33_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state34_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal icmp_ln287_reg_1379 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_636_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1132 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln246_fu_642_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln246_reg_1137 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln246_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_2_fu_653_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_2_reg_1151 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln247_fu_647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_3_fu_682_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_3_reg_1164 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal zext_ln248_fu_688_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln248_reg_1169 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln248_fu_676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_4_fu_699_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_4_reg_1183 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal icmp_ln249_fu_693_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_mul_I_O_fu_594_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal res_tmp_bits_write_a_reg_1193 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_mul_I_O_fu_594_ap_ready : STD_LOGIC;
    signal grp_mul_I_O_fu_594_ap_done : STD_LOGIC;
    signal grp_mul_I_O_fu_605_ap_ready : STD_LOGIC;
    signal grp_mul_I_O_fu_605_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_ap_done : STD_LOGIC;
    signal ap_block_state10_on_subcall_done : BOOLEAN;
    signal grp_mul_I_O_fu_605_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal res_tmp_bits_write_a_1_reg_1198 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln257_fu_722_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln257_reg_1203 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln51_fu_726_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_1208 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state11_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state13_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state15_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln51_reg_1208_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_1208_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_1208_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_732_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln56_fu_738_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_1217 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_1217_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_1217_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_1217_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_1232 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_1232_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_1238 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_1238_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_fu_750_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_reg_1244 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_6_fu_778_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_6_reg_1249 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_1254 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal zext_ln61_4_fu_819_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln61_4_reg_1259 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal exitcond_i_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1264 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state17_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state18_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state19_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state20_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state21_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_1264_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1264_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1264_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_6_fu_829_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln77_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1273 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1273_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1273_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_1273_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_2_reg_1288 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_l_reg_1293 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_V_3_fu_847_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_3_reg_1298 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_1_reg_1304 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal add_ln700_7_fu_885_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_7_reg_1309 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_tmp_bits_fu_908_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal z1_tmp_bits_reg_1314 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal icmp_ln269_fu_914_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln269_reg_1319 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal grp_CAT_I_I_I_O_2_fu_616_ap_ready : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_ap_done : STD_LOGIC;
    signal icmp_ln273_fu_919_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_1323_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_1323_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln273_reg_1323_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_7_fu_925_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal res_digits_data_V_ad_reg_1337 : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_reg_1337_pp2_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_reg_1337_pp2_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_reg_1337_pp2_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal j_fu_941_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal lhs_digits_data_V_lo_2_reg_1348 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_8_fu_954_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_8_reg_1354 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_fu_983_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_reg_1359 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln858_8_reg_1364 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal zext_ln283_fu_998_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln283_reg_1369 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal icmp_ln283_fu_1002_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_fu_1007_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_reg_1379_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_reg_1379_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln287_reg_1379_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_8_fu_1013_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal res_digits_data_V_ad_1_reg_1393 : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg : STD_LOGIC_VECTOR (4 downto 0);
    signal j_4_fu_1029_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal rhs_digits_data_V_lo_2_reg_1404 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_10_fu_1042_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_10_reg_1410 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_5_fu_1071_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_5_reg_1415 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln858_9_reg_1420 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal add_ln295_fu_1090_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state11 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state17 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state24 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state30 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal lhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs0_digits_data_V_ce0 : STD_LOGIC;
    signal lhs0_digits_data_V_we0 : STD_LOGIC;
    signal lhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs1_digits_data_V_ce0 : STD_LOGIC;
    signal lhs1_digits_data_V_we0 : STD_LOGIC;
    signal lhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs0_digits_data_V_ce0 : STD_LOGIC;
    signal rhs0_digits_data_V_we0 : STD_LOGIC;
    signal rhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs1_digits_data_V_ce0 : STD_LOGIC;
    signal rhs1_digits_data_V_we0 : STD_LOGIC;
    signal rhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal lhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal rhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal z0_digits_data_V_ce0 : STD_LOGIC;
    signal z0_digits_data_V_we0 : STD_LOGIC;
    signal z0_digits_data_V_ce1 : STD_LOGIC;
    signal z0_digits_data_V_we1 : STD_LOGIC;
    signal z0_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal z2_digits_data_V_ce0 : STD_LOGIC;
    signal z2_digits_data_V_we0 : STD_LOGIC;
    signal z2_digits_data_V_ce1 : STD_LOGIC;
    signal z2_digits_data_V_we1 : STD_LOGIC;
    signal z2_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal cross_mul_digits_dat_ce0 : STD_LOGIC;
    signal cross_mul_digits_dat_we0 : STD_LOGIC;
    signal cross_mul_digits_dat_ce1 : STD_LOGIC;
    signal cross_mul_digits_dat_we1 : STD_LOGIC;
    signal cross_mul_digits_dat_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal add2_digits_data_V_ce0 : STD_LOGIC;
    signal add2_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_digits_data_V_ce0 : STD_LOGIC;
    signal z1_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mul_I_O_fu_594_ap_start : STD_LOGIC;
    signal grp_mul_I_O_fu_594_ap_idle : STD_LOGIC;
    signal grp_mul_I_O_fu_594_u_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mul_I_O_fu_594_u_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_v_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mul_I_O_fu_594_v_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_w_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mul_I_O_fu_594_w_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_w_digits_data_V_we0 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_w_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mul_I_O_fu_594_w_digits_data_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mul_I_O_fu_594_w_digits_data_V_ce1 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_w_digits_data_V_we1 : STD_LOGIC;
    signal grp_mul_I_O_fu_594_w_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mul_I_O_fu_605_ap_start : STD_LOGIC;
    signal grp_mul_I_O_fu_605_ap_idle : STD_LOGIC;
    signal grp_mul_I_O_fu_605_u_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mul_I_O_fu_605_u_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_v_digits_data_V_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_mul_I_O_fu_605_v_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_w_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mul_I_O_fu_605_w_digits_data_V_ce0 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_w_digits_data_V_we0 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_w_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_mul_I_O_fu_605_w_digits_data_V_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_mul_I_O_fu_605_w_digits_data_V_ce1 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_w_digits_data_V_we1 : STD_LOGIC;
    signal grp_mul_I_O_fu_605_w_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_ap_start : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_ap_idle : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_0_reg_404 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal i1_0_reg_415 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal i2_0_reg_427 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i3_0_reg_438 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_phi_mux_p_088_0_i_phi_fu_454_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_op2_assign_phi_fu_477_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_p_084_0_phi_fu_500_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal res_tmp_bits_0_reg_530 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_0160_0_phi_fu_546_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal res_tmp_bits_1_reg_576 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_2_fu_585_ap_start_reg : STD_LOGIC := '0';
    signal grp_mul_I_O_fu_594_ap_start_reg : STD_LOGIC := '0';
    signal grp_mul_I_O_fu_605_ap_start_reg : STD_LOGIC := '0';
    signal grp_CAT_I_I_I_O_2_fu_616_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln247_1_fu_665_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln247_fu_670_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_1_fu_711_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_fu_716_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln276_fu_931_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln277_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln290_fu_1019_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln291_fu_1024_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln247_fu_659_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln249_fu_705_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln209_fu_744_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_fu_747_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_10_fu_764_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln51_fu_756_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_9_fu_760_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_7_fu_773_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_2_fu_767_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln61_2_fu_800_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln61_1_fu_797_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln61_fu_803_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln61_fu_793_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln61_3_fu_809_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add2_tmp_bits_fu_813_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln180_fu_841_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln701_fu_844_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal select_ln701_fu_853_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_4_fu_872_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal trunc_ln701_fu_869_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln701_1_fu_861_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_21_fu_891_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln92_fu_899_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln92_fu_904_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln277_1_fu_947_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_11_fu_950_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_13_fu_968_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln273_fu_960_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_12_fu_964_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_8_fu_977_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_971_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln291_1_fu_1035_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_14_fu_1038_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_16_fu_1056_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln287_fu_1048_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_15_fu_1052_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_9_fu_1065_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_5_fu_1059_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln295_fu_1086_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal mul_ln297_fu_1105_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln297_fu_1105_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln297_fu_1095_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln297_fu_1105_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln297_fu_1111_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln297_fu_1105_p00 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln297_fu_1105_p10 : STD_LOGIC_VECTOR (3 downto 0);

    component karastuba_mul_templa_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        lhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        lhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        rhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        rhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cross_mul_digits_data_V_ce0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        cross_mul_digits_data_V_ce1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component mul_I_O IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        u_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        u_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        u_digits_data_V_ce0 : OUT STD_LOGIC;
        u_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        v_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        v_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        v_digits_data_V_ce0 : OUT STD_LOGIC;
        v_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        w_digits_data_V_ce0 : OUT STD_LOGIC;
        w_digits_data_V_we0 : OUT STD_LOGIC;
        w_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (3 downto 0);
        w_digits_data_V_ce1 : OUT STD_LOGIC;
        w_digits_data_V_we1 : OUT STD_LOGIC;
        w_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component CAT_I_I_I_O_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x0_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        x0_digits_data_V_ce0 : OUT STD_LOGIC;
        x0_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x1_tmp_bits_read : IN STD_LOGIC_VECTOR (6 downto 0);
        x1_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        x1_digits_data_V_ce0 : OUT STD_LOGIC;
        x1_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x2_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        x2_digits_data_V_ce0 : OUT STD_LOGIC;
        x2_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        w_digits_data_V_ce0 : OUT STD_LOGIC;
        w_digits_data_V_we0 : OUT STD_LOGIC;
        w_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        w_digits_data_V_ce1 : OUT STD_LOGIC;
        w_digits_data_V_we1 : OUT STD_LOGIC;
        w_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temmb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_tempcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    lhs0_digits_data_V_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_digits_data_V_address0,
        ce0 => lhs0_digits_data_V_ce0,
        we0 => lhs0_digits_data_V_we0,
        d0 => lhs_digits_data_V_q0,
        q0 => lhs0_digits_data_V_q0);

    lhs1_digits_data_V_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_digits_data_V_address0,
        ce0 => lhs1_digits_data_V_ce0,
        we0 => lhs1_digits_data_V_we0,
        d0 => lhs_digits_data_V_q0,
        q0 => lhs1_digits_data_V_q0);

    rhs0_digits_data_V_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_digits_data_V_address0,
        ce0 => rhs0_digits_data_V_ce0,
        we0 => rhs0_digits_data_V_we0,
        d0 => rhs_digits_data_V_q0,
        q0 => rhs0_digits_data_V_q0);

    rhs1_digits_data_V_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_digits_data_V_address0,
        ce0 => rhs1_digits_data_V_ce0,
        we0 => rhs1_digits_data_V_we0,
        d0 => rhs_digits_data_V_q0,
        q0 => rhs1_digits_data_V_q0);

    lhs0_tmp_digits_data_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_tmp_digits_data_address0,
        ce0 => lhs0_tmp_digits_data_ce0,
        we0 => lhs0_tmp_digits_data_we0,
        d0 => lhs_digits_data_V_q0,
        q0 => lhs0_tmp_digits_data_q0);

    lhs1_tmp_digits_data_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_tmp_digits_data_address0,
        ce0 => lhs1_tmp_digits_data_ce0,
        we0 => lhs1_tmp_digits_data_we0,
        d0 => lhs_digits_data_V_q0,
        q0 => lhs1_tmp_digits_data_q0);

    rhs0_tmp_digits_data_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_tmp_digits_data_address0,
        ce0 => rhs0_tmp_digits_data_ce0,
        we0 => rhs0_tmp_digits_data_we0,
        d0 => rhs_digits_data_V_q0,
        q0 => rhs0_tmp_digits_data_q0);

    rhs1_tmp_digits_data_U : component karastuba_mul_temcud
    generic map (
        DataWidth => 64,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_tmp_digits_data_address0,
        ce0 => rhs1_tmp_digits_data_ce0,
        we0 => rhs1_tmp_digits_data_we0,
        d0 => rhs_digits_data_V_q0,
        q0 => rhs1_tmp_digits_data_q0);

    z0_digits_data_V_U : component karastuba_mul_temmb6
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z0_digits_data_V_address0,
        ce0 => z0_digits_data_V_ce0,
        we0 => z0_digits_data_V_we0,
        d0 => grp_mul_I_O_fu_594_w_digits_data_V_d0,
        q0 => z0_digits_data_V_q0,
        address1 => grp_mul_I_O_fu_594_w_digits_data_V_address1,
        ce1 => z0_digits_data_V_ce1,
        we1 => z0_digits_data_V_we1,
        d1 => grp_mul_I_O_fu_594_w_digits_data_V_d1,
        q1 => z0_digits_data_V_q1);

    z2_digits_data_V_U : component karastuba_mul_temmb6
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z2_digits_data_V_address0,
        ce0 => z2_digits_data_V_ce0,
        we0 => z2_digits_data_V_we0,
        d0 => grp_mul_I_O_fu_605_w_digits_data_V_d0,
        q0 => z2_digits_data_V_q0,
        address1 => grp_mul_I_O_fu_605_w_digits_data_V_address1,
        ce1 => z2_digits_data_V_ce1,
        we1 => z2_digits_data_V_we1,
        d1 => grp_mul_I_O_fu_605_w_digits_data_V_d1,
        q1 => z2_digits_data_V_q1);

    cross_mul_digits_dat_U : component karastuba_mul_temmb6
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cross_mul_digits_dat_address0,
        ce0 => cross_mul_digits_dat_ce0,
        we0 => cross_mul_digits_dat_we0,
        d0 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0,
        q0 => cross_mul_digits_dat_q0,
        address1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1,
        ce1 => cross_mul_digits_dat_ce1,
        we1 => cross_mul_digits_dat_we1,
        d1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1,
        q1 => cross_mul_digits_dat_q1);

    add2_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => add2_digits_data_V_address0,
        ce0 => add2_digits_data_V_ce0,
        we0 => add2_digits_data_V_we0,
        d0 => add_ln209_6_reg_1249,
        q0 => add2_digits_data_V_q0);

    z1_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z1_digits_data_V_address0,
        ce0 => z1_digits_data_V_ce0,
        we0 => z1_digits_data_V_we0,
        d0 => add_ln700_7_reg_1309,
        q0 => z1_digits_data_V_q0);

    grp_karastuba_mul_templa_2_fu_585 : component karastuba_mul_templa_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_2_fu_585_ap_start,
        ap_done => grp_karastuba_mul_templa_2_fu_585_ap_done,
        ap_idle => grp_karastuba_mul_templa_2_fu_585_ap_idle,
        ap_ready => grp_karastuba_mul_templa_2_fu_585_ap_ready,
        lhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0,
        lhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0,
        lhs0_tmp_digits_data_V_q0 => lhs0_tmp_digits_data_q0,
        lhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0,
        lhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0,
        lhs1_tmp_digits_data_V_q0 => lhs1_tmp_digits_data_q0,
        rhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0,
        rhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0,
        rhs0_tmp_digits_data_V_q0 => rhs0_tmp_digits_data_q0,
        rhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0,
        rhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0,
        rhs1_tmp_digits_data_V_q0 => rhs1_tmp_digits_data_q0,
        cross_mul_digits_data_V_address0 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_we0 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0,
        cross_mul_digits_data_V_d0 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0,
        cross_mul_digits_data_V_q0 => cross_mul_digits_dat_q0,
        cross_mul_digits_data_V_address1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1,
        cross_mul_digits_data_V_ce1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1,
        cross_mul_digits_data_V_we1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1,
        cross_mul_digits_data_V_d1 => grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1,
        cross_mul_digits_data_V_q1 => cross_mul_digits_dat_q1,
        ap_return => grp_karastuba_mul_templa_2_fu_585_ap_return);

    grp_mul_I_O_fu_594 : component mul_I_O
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mul_I_O_fu_594_ap_start,
        ap_done => grp_mul_I_O_fu_594_ap_done,
        ap_idle => grp_mul_I_O_fu_594_ap_idle,
        ap_ready => grp_mul_I_O_fu_594_ap_ready,
        u_tmp_bits_read => ap_const_lv2_0,
        u_digits_data_V_address0 => grp_mul_I_O_fu_594_u_digits_data_V_address0,
        u_digits_data_V_ce0 => grp_mul_I_O_fu_594_u_digits_data_V_ce0,
        u_digits_data_V_q0 => lhs0_digits_data_V_q0,
        v_tmp_bits_read => ap_const_lv2_0,
        v_digits_data_V_address0 => grp_mul_I_O_fu_594_v_digits_data_V_address0,
        v_digits_data_V_ce0 => grp_mul_I_O_fu_594_v_digits_data_V_ce0,
        v_digits_data_V_q0 => rhs0_digits_data_V_q0,
        w_digits_data_V_address0 => grp_mul_I_O_fu_594_w_digits_data_V_address0,
        w_digits_data_V_ce0 => grp_mul_I_O_fu_594_w_digits_data_V_ce0,
        w_digits_data_V_we0 => grp_mul_I_O_fu_594_w_digits_data_V_we0,
        w_digits_data_V_d0 => grp_mul_I_O_fu_594_w_digits_data_V_d0,
        w_digits_data_V_q0 => z0_digits_data_V_q0,
        w_digits_data_V_address1 => grp_mul_I_O_fu_594_w_digits_data_V_address1,
        w_digits_data_V_ce1 => grp_mul_I_O_fu_594_w_digits_data_V_ce1,
        w_digits_data_V_we1 => grp_mul_I_O_fu_594_w_digits_data_V_we1,
        w_digits_data_V_d1 => grp_mul_I_O_fu_594_w_digits_data_V_d1,
        w_digits_data_V_q1 => z0_digits_data_V_q1,
        ap_return => grp_mul_I_O_fu_594_ap_return);

    grp_mul_I_O_fu_605 : component mul_I_O
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_mul_I_O_fu_605_ap_start,
        ap_done => grp_mul_I_O_fu_605_ap_done,
        ap_idle => grp_mul_I_O_fu_605_ap_idle,
        ap_ready => grp_mul_I_O_fu_605_ap_ready,
        u_tmp_bits_read => ap_const_lv2_0,
        u_digits_data_V_address0 => grp_mul_I_O_fu_605_u_digits_data_V_address0,
        u_digits_data_V_ce0 => grp_mul_I_O_fu_605_u_digits_data_V_ce0,
        u_digits_data_V_q0 => lhs1_digits_data_V_q0,
        v_tmp_bits_read => ap_const_lv2_0,
        v_digits_data_V_address0 => grp_mul_I_O_fu_605_v_digits_data_V_address0,
        v_digits_data_V_ce0 => grp_mul_I_O_fu_605_v_digits_data_V_ce0,
        v_digits_data_V_q0 => rhs1_digits_data_V_q0,
        w_digits_data_V_address0 => grp_mul_I_O_fu_605_w_digits_data_V_address0,
        w_digits_data_V_ce0 => grp_mul_I_O_fu_605_w_digits_data_V_ce0,
        w_digits_data_V_we0 => grp_mul_I_O_fu_605_w_digits_data_V_we0,
        w_digits_data_V_d0 => grp_mul_I_O_fu_605_w_digits_data_V_d0,
        w_digits_data_V_q0 => z2_digits_data_V_q0,
        w_digits_data_V_address1 => grp_mul_I_O_fu_605_w_digits_data_V_address1,
        w_digits_data_V_ce1 => grp_mul_I_O_fu_605_w_digits_data_V_ce1,
        w_digits_data_V_we1 => grp_mul_I_O_fu_605_w_digits_data_V_we1,
        w_digits_data_V_d1 => grp_mul_I_O_fu_605_w_digits_data_V_d1,
        w_digits_data_V_q1 => z2_digits_data_V_q1,
        ap_return => grp_mul_I_O_fu_605_ap_return);

    grp_CAT_I_I_I_O_2_fu_616 : component CAT_I_I_I_O_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_CAT_I_I_I_O_2_fu_616_ap_start,
        ap_done => grp_CAT_I_I_I_O_2_fu_616_ap_done,
        ap_idle => grp_CAT_I_I_I_O_2_fu_616_ap_idle,
        ap_ready => grp_CAT_I_I_I_O_2_fu_616_ap_ready,
        x0_digits_data_V_address0 => grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0,
        x0_digits_data_V_ce0 => grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0,
        x0_digits_data_V_q0 => z0_digits_data_V_q0,
        x1_tmp_bits_read => z1_tmp_bits_reg_1314,
        x1_digits_data_V_address0 => grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0,
        x1_digits_data_V_ce0 => grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0,
        x1_digits_data_V_q0 => z1_digits_data_V_q0,
        x2_digits_data_V_address0 => grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0,
        x2_digits_data_V_ce0 => grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0,
        x2_digits_data_V_q0 => z2_digits_data_V_q0,
        w_digits_data_V_address0 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0,
        w_digits_data_V_ce0 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0,
        w_digits_data_V_we0 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0,
        w_digits_data_V_d0 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0,
        w_digits_data_V_q0 => res_digits_data_V_q0,
        w_digits_data_V_address1 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1,
        w_digits_data_V_ce1 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1,
        w_digits_data_V_we1 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1,
        w_digits_data_V_d1 => grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1,
        w_digits_data_V_q1 => res_digits_data_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state11)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state11);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state17) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state17)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state17);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state24))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state24)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state24);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state30)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state30);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    ap_return_preg <= add_ln297_fu_1111_p2;
                end if; 
            end if;
        end if;
    end process;


    grp_CAT_I_I_I_O_2_fu_616_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
                    grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_CAT_I_I_I_O_2_fu_616_ap_ready = ap_const_logic_1)) then 
                    grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_2_fu_585_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_693_p2 = ap_const_lv1_1))) then 
                    grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_2_fu_585_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mul_I_O_fu_594_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mul_I_O_fu_594_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_693_p2 = ap_const_lv1_1))) then 
                    grp_mul_I_O_fu_594_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mul_I_O_fu_594_ap_ready = ap_const_logic_1)) then 
                    grp_mul_I_O_fu_594_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_mul_I_O_fu_605_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_mul_I_O_fu_605_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_693_p2 = ap_const_lv1_1))) then 
                    grp_mul_I_O_fu_605_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_mul_I_O_fu_605_ap_ready = ap_const_logic_1)) then 
                    grp_mul_I_O_fu_605_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_415_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_630_p2 = ap_const_lv1_1))) then 
                i1_0_reg_415 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                i1_0_reg_415 <= i_2_reg_1151;
            end if; 
        end if;
    end process;

    i2_0_reg_427_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln247_fu_647_p2 = ap_const_lv1_1))) then 
                i2_0_reg_427 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i2_0_reg_427 <= i_3_reg_1164;
            end if; 
        end if;
    end process;

    i3_0_reg_438_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln248_fu_676_p2 = ap_const_lv1_1))) then 
                i3_0_reg_438 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                i3_0_reg_438 <= i_4_reg_1183;
            end if; 
        end if;
    end process;

    i4_0_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then 
                i4_0_reg_508 <= ap_const_lv5_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln273_fu_919_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i4_0_reg_508 <= i_7_fu_925_p2;
            end if; 
        end if;
    end process;

    i7_0_reg_554_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then 
                i7_0_reg_554 <= ap_const_lv5_0;
            elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_fu_1007_p2 = ap_const_lv1_0))) then 
                i7_0_reg_554 <= i_8_fu_1013_p2;
            end if; 
        end if;
    end process;

    i_0_i2_reg_485_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                i_0_i2_reg_485 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_823_p2 = ap_const_lv1_0))) then 
                i_0_i2_reg_485 <= i_6_fu_829_p2;
            end if; 
        end if;
    end process;

    i_0_i_reg_462_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                i_0_i_reg_462 <= ap_const_lv5_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0))) then 
                i_0_i_reg_462 <= i_5_fu_732_p2;
            end if; 
        end if;
    end process;

    i_0_reg_404_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                i_0_reg_404 <= i_reg_1132;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_404 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    j8_0_reg_565_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then 
                j8_0_reg_565 <= ap_const_lv6_10;
            elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_fu_1007_p2 = ap_const_lv1_0))) then 
                j8_0_reg_565 <= j_4_fu_1029_p2;
            end if; 
        end if;
    end process;

    j_0_reg_519_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then 
                j_0_reg_519 <= ap_const_lv6_10;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (icmp_ln273_fu_919_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                j_0_reg_519 <= j_fu_941_p2;
            end if; 
        end if;
    end process;

    op2_assign_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                op2_assign_reg_473 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1264_pp1_iter3_reg = ap_const_lv1_0))) then 
                op2_assign_reg_473 <= tmp_1_reg_1304;
            end if; 
        end if;
    end process;

    p_0160_0_reg_542_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then 
                p_0160_0_reg_542 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379_pp3_iter3_reg = ap_const_lv1_0))) then 
                p_0160_0_reg_542 <= trunc_ln858_9_reg_1420;
            end if; 
        end if;
    end process;

    p_084_0_reg_496_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then 
                p_084_0_reg_496 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln273_reg_1323_pp2_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                p_084_0_reg_496 <= trunc_ln858_8_reg_1364;
            end if; 
        end if;
    end process;

    p_088_0_i_reg_450_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
                p_088_0_i_reg_450 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln51_reg_1208_pp0_iter3_reg = ap_const_lv1_0))) then 
                p_088_0_i_reg_450 <= trunc_ln_reg_1254;
            end if; 
        end if;
    end process;

    res_tmp_bits_0_reg_530_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln269_reg_1319 = ap_const_lv1_0))) then 
                res_tmp_bits_0_reg_530 <= p_084_0_reg_496;
            elsif (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (icmp_ln269_fu_914_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then 
                res_tmp_bits_0_reg_530 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    res_tmp_bits_1_reg_576_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                res_tmp_bits_1_reg_576 <= add_ln295_fu_1090_p2;
            elsif (((icmp_ln283_fu_1002_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state29))) then 
                res_tmp_bits_1_reg_576 <= zext_ln283_fu_998_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_1264 = ap_const_lv1_0))) then
                add2_digits_data_V_l_reg_1293 <= add2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379_pp3_iter2_reg = ap_const_lv1_0))) then
                add_ln209_5_reg_1415 <= add_ln209_5_fu_1071_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_1208_pp0_iter2_reg = ap_const_lv1_0))) then
                add_ln209_6_reg_1249 <= add_ln209_6_fu_778_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_reg_1323_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln209_reg_1359 <= add_ln209_fu_983_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379_pp3_iter1_reg = ap_const_lv1_0))) then
                add_ln700_10_reg_1410 <= add_ln700_10_fu_1042_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_1264_pp1_iter2_reg = ap_const_lv1_0))) then
                add_ln700_7_reg_1309 <= add_ln700_7_fu_885_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln273_reg_1323_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln700_8_reg_1354 <= add_ln700_8_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_1208_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln700_reg_1244 <= add_ln700_fu_750_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_1264 = ap_const_lv1_0))) then
                cross_mul_digits_dat_2_reg_1288 <= cross_mul_digits_dat_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_i_reg_1264 <= exitcond_i_fu_823_p2;
                exitcond_i_reg_1264_pp1_iter1_reg <= exitcond_i_reg_1264;
                    zext_ln77_reg_1273_pp1_iter1_reg(4 downto 0) <= zext_ln77_reg_1273(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_i_reg_1264_pp1_iter2_reg <= exitcond_i_reg_1264_pp1_iter1_reg;
                exitcond_i_reg_1264_pp1_iter3_reg <= exitcond_i_reg_1264_pp1_iter2_reg;
                    zext_ln77_reg_1273_pp1_iter2_reg(4 downto 0) <= zext_ln77_reg_1273_pp1_iter1_reg(4 downto 0);
                    zext_ln77_reg_1273_pp1_iter3_reg(4 downto 0) <= zext_ln77_reg_1273_pp1_iter2_reg(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                i_2_reg_1151 <= i_2_fu_653_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                i_3_reg_1164 <= i_3_fu_682_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_4_reg_1183 <= i_4_fu_699_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1132 <= i_fu_636_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                icmp_ln269_reg_1319 <= icmp_ln269_fu_914_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln273_reg_1323 <= icmp_ln273_fu_919_p2;
                icmp_ln273_reg_1323_pp2_iter1_reg <= icmp_ln273_reg_1323;
                res_digits_data_V_ad_reg_1337_pp2_iter1_reg <= res_digits_data_V_ad_reg_1337;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln273_reg_1323_pp2_iter2_reg <= icmp_ln273_reg_1323_pp2_iter1_reg;
                icmp_ln273_reg_1323_pp2_iter3_reg <= icmp_ln273_reg_1323_pp2_iter2_reg;
                lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg <= lhs_digits_data_V_lo_2_reg_1348;
                reg_626_pp2_iter2_reg <= reg_626;
                res_digits_data_V_ad_reg_1337_pp2_iter2_reg <= res_digits_data_V_ad_reg_1337_pp2_iter1_reg;
                res_digits_data_V_ad_reg_1337_pp2_iter3_reg <= res_digits_data_V_ad_reg_1337_pp2_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln287_reg_1379 <= icmp_ln287_fu_1007_p2;
                icmp_ln287_reg_1379_pp3_iter1_reg <= icmp_ln287_reg_1379;
                res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg <= res_digits_data_V_ad_1_reg_1393;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln287_reg_1379_pp3_iter2_reg <= icmp_ln287_reg_1379_pp3_iter1_reg;
                icmp_ln287_reg_1379_pp3_iter3_reg <= icmp_ln287_reg_1379_pp3_iter2_reg;
                reg_626_pp3_iter2_reg <= reg_626;
                res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg <= res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg;
                res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg <= res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg;
                rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg <= rhs_digits_data_V_lo_2_reg_1404;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln51_reg_1208 <= icmp_ln51_fu_726_p2;
                icmp_ln51_reg_1208_pp0_iter1_reg <= icmp_ln51_reg_1208;
                    zext_ln56_reg_1217_pp0_iter1_reg(4 downto 0) <= zext_ln56_reg_1217(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln51_reg_1208_pp0_iter2_reg <= icmp_ln51_reg_1208_pp0_iter1_reg;
                icmp_ln51_reg_1208_pp0_iter3_reg <= icmp_ln51_reg_1208_pp0_iter2_reg;
                z0_digits_data_V_loa_reg_1232_pp0_iter2_reg <= z0_digits_data_V_loa_reg_1232;
                z2_digits_data_V_loa_reg_1238_pp0_iter2_reg <= z2_digits_data_V_loa_reg_1238;
                    zext_ln56_reg_1217_pp0_iter2_reg(4 downto 0) <= zext_ln56_reg_1217_pp0_iter1_reg(4 downto 0);
                    zext_ln56_reg_1217_pp0_iter3_reg(4 downto 0) <= zext_ln56_reg_1217_pp0_iter2_reg(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln273_reg_1323 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                lhs_digits_data_V_lo_2_reg_1348 <= lhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln273_reg_1323 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379 = ap_const_lv1_0)))) then
                reg_626 <= res_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_fu_1007_p2 = ap_const_lv1_0))) then
                res_digits_data_V_ad_1_reg_1393 <= zext_ln291_fu_1024_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln273_fu_919_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                res_digits_data_V_ad_reg_1337 <= zext_ln277_fu_936_p1(5 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                res_tmp_bits_write_a_1_reg_1198 <= grp_mul_I_O_fu_605_ap_return;
                res_tmp_bits_write_a_reg_1193 <= grp_mul_I_O_fu_594_ap_return;
                    zext_ln257_reg_1203(3 downto 0) <= zext_ln257_fu_722_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379 = ap_const_lv1_0))) then
                rhs_digits_data_V_lo_2_reg_1404 <= rhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_i_reg_1264_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_1_reg_1304 <= tmp_V_4_fu_872_p2(64 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_1264_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_V_3_reg_1298 <= tmp_V_3_fu_847_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln273_reg_1323_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                trunc_ln858_8_reg_1364 <= tmp_V_fu_971_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379_pp3_iter2_reg = ap_const_lv1_0))) then
                trunc_ln858_9_reg_1420 <= tmp_V_5_fu_1059_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln51_reg_1208_pp0_iter2_reg = ap_const_lv1_0))) then
                trunc_ln_reg_1254 <= tmp_V_2_fu_767_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln51_reg_1208 = ap_const_lv1_0))) then
                z0_digits_data_V_loa_reg_1232 <= z0_digits_data_V_q0;
                z2_digits_data_V_loa_reg_1238 <= z2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                z1_tmp_bits_reg_1314 <= z1_tmp_bits_fu_908_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_630_p2 = ap_const_lv1_0))) then
                    zext_ln246_reg_1137(3 downto 0) <= zext_ln246_fu_642_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln248_fu_676_p2 = ap_const_lv1_0))) then
                    zext_ln248_reg_1169(3 downto 0) <= zext_ln248_fu_688_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                    zext_ln283_reg_1369(1 downto 0) <= zext_ln283_fu_998_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln51_fu_726_p2 = ap_const_lv1_0))) then
                    zext_ln56_reg_1217(4 downto 0) <= zext_ln56_fu_738_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                    zext_ln61_4_reg_1259(5 downto 0) <= zext_ln61_4_fu_819_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_823_p2 = ap_const_lv1_0))) then
                    zext_ln77_reg_1273(4 downto 0) <= zext_ln77_fu_835_p1(4 downto 0);
            end if;
        end if;
    end process;
    zext_ln246_reg_1137(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln248_reg_1169(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    zext_ln257_reg_1203(4) <= '0';
    zext_ln56_reg_1217(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_1217_pp0_iter1_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_1217_pp0_iter2_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_1217_pp0_iter3_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln61_4_reg_1259(6) <= '0';
    zext_ln77_reg_1273(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1273_pp1_iter1_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1273_pp1_iter2_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_1273_pp1_iter3_reg(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln283_reg_1369(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state2, icmp_ln246_fu_630_p2, ap_CS_fsm_state4, icmp_ln247_fu_647_p2, ap_CS_fsm_state6, icmp_ln248_fu_676_p2, ap_CS_fsm_state8, icmp_ln249_fu_693_p2, ap_CS_fsm_state10, ap_block_state10_on_subcall_done, icmp_ln51_fu_726_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, exitcond_i_fu_823_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln269_fu_914_p2, ap_CS_fsm_state23, grp_CAT_I_I_I_O_2_fu_616_ap_done, icmp_ln273_fu_919_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter3, ap_CS_fsm_state29, icmp_ln283_fu_1002_p2, icmp_ln287_fu_1007_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter4, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter4, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_630_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln247_fu_647_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln248_fu_676_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln249_fu_693_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state10 => 
                if (((ap_const_boolean_0 = ap_block_state10_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln51_fu_726_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_823_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_823_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                if (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state23) and (icmp_ln269_fu_914_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((grp_CAT_I_I_I_O_2_fu_616_ap_done = ap_const_logic_1) and (icmp_ln269_fu_914_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state23))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln273_fu_919_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln273_fu_919_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state29 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln283_fu_1002_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln287_fu_1007_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln287_fu_1007_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    add2_digits_data_V_address0_assign_proc : process(zext_ln56_reg_1217_pp0_iter3_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln77_fu_835_p1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            add2_digits_data_V_address0 <= zext_ln77_fu_835_p1(4 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            add2_digits_data_V_address0 <= zext_ln56_reg_1217_pp0_iter3_reg(4 - 1 downto 0);
        else 
            add2_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    add2_digits_data_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            add2_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    add2_digits_data_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln51_reg_1208_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln51_reg_1208_pp0_iter3_reg = ap_const_lv1_0))) then 
            add2_digits_data_V_we0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add2_tmp_bits_fu_813_p2 <= std_logic_vector(unsigned(zext_ln61_fu_793_p1) + unsigned(zext_ln61_3_fu_809_p1));
    add_ln209_5_fu_1071_p2 <= std_logic_vector(unsigned(add_ln209_9_fu_1065_p2) + unsigned(rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg));
    add_ln209_6_fu_778_p2 <= std_logic_vector(unsigned(add_ln209_7_fu_773_p2) + unsigned(z0_digits_data_V_loa_reg_1232_pp0_iter2_reg));
    add_ln209_7_fu_773_p2 <= std_logic_vector(unsigned(z2_digits_data_V_loa_reg_1238_pp0_iter2_reg) + unsigned(zext_ln700_9_fu_760_p1));
    add_ln209_8_fu_977_p2 <= std_logic_vector(unsigned(reg_626_pp2_iter2_reg) + unsigned(zext_ln700_12_fu_964_p1));
    add_ln209_9_fu_1065_p2 <= std_logic_vector(unsigned(reg_626_pp3_iter2_reg) + unsigned(zext_ln700_15_fu_1052_p1));
    add_ln209_fu_983_p2 <= std_logic_vector(unsigned(add_ln209_8_fu_977_p2) + unsigned(lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg));
    add_ln295_fu_1090_p2 <= std_logic_vector(unsigned(zext_ln283_reg_1369) + unsigned(zext_ln295_fu_1086_p1));
    add_ln297_fu_1111_p2 <= std_logic_vector(unsigned(zext_ln297_fu_1095_p1) + unsigned(mul_ln297_fu_1105_p2));
    add_ln61_fu_803_p2 <= std_logic_vector(unsigned(zext_ln61_2_fu_800_p1) + unsigned(zext_ln61_1_fu_797_p1));
    add_ln700_10_fu_1042_p2 <= std_logic_vector(unsigned(zext_ln291_1_fu_1035_p1) + unsigned(zext_ln700_14_fu_1038_p1));
    add_ln700_7_fu_885_p2 <= std_logic_vector(unsigned(trunc_ln701_fu_869_p1) + unsigned(select_ln701_1_fu_861_p3));
    add_ln700_8_fu_954_p2 <= std_logic_vector(unsigned(zext_ln277_1_fu_947_p1) + unsigned(zext_ln700_11_fu_950_p1));
    add_ln700_fu_750_p2 <= std_logic_vector(unsigned(zext_ln209_fu_744_p1) + unsigned(zext_ln700_fu_747_p1));
    add_ln92_fu_899_p2 <= std_logic_vector(unsigned(empty_21_fu_891_p3) + unsigned(zext_ln257_reg_1203));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(15);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(17);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state16 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state22 <= ap_CS_fsm(13);
    ap_CS_fsm_state23 <= ap_CS_fsm(14);
    ap_CS_fsm_state29 <= ap_CS_fsm(16);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state35 <= ap_CS_fsm(18);
    ap_CS_fsm_state36 <= ap_CS_fsm(19);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_on_subcall_done_assign_proc : process(grp_mul_I_O_fu_594_ap_done, grp_mul_I_O_fu_605_ap_done, grp_karastuba_mul_templa_2_fu_585_ap_done)
    begin
                ap_block_state10_on_subcall_done <= ((grp_karastuba_mul_templa_2_fu_585_ap_done = ap_const_logic_0) or (grp_mul_I_O_fu_605_ap_done = ap_const_logic_0) or (grp_mul_I_O_fu_594_ap_done = ap_const_logic_0));
    end process;

        ap_block_state11_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state11_assign_proc : process(icmp_ln51_fu_726_p2)
    begin
        if ((icmp_ln51_fu_726_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state17_assign_proc : process(exitcond_i_fu_823_p2)
    begin
        if ((exitcond_i_fu_823_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state17 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state24_assign_proc : process(icmp_ln273_fu_919_p2)
    begin
        if ((icmp_ln273_fu_919_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state24 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state24 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state30_assign_proc : process(icmp_ln287_fu_1007_p2)
    begin
        if ((icmp_ln287_fu_1007_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state30 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state36)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state36) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter4)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_op2_assign_phi_fu_477_p4_assign_proc : process(op2_assign_reg_473, exitcond_i_reg_1264_pp1_iter3_reg, tmp_1_reg_1304, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1264_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_op2_assign_phi_fu_477_p4 <= tmp_1_reg_1304;
        else 
            ap_phi_mux_op2_assign_phi_fu_477_p4 <= op2_assign_reg_473;
        end if; 
    end process;


    ap_phi_mux_p_0160_0_phi_fu_546_p4_assign_proc : process(p_0160_0_reg_542, icmp_ln287_reg_1379_pp3_iter3_reg, trunc_ln858_9_reg_1420, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln287_reg_1379_pp3_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_0160_0_phi_fu_546_p4 <= trunc_ln858_9_reg_1420;
        else 
            ap_phi_mux_p_0160_0_phi_fu_546_p4 <= p_0160_0_reg_542;
        end if; 
    end process;


    ap_phi_mux_p_084_0_phi_fu_500_p4_assign_proc : process(p_084_0_reg_496, icmp_ln273_reg_1323_pp2_iter3_reg, trunc_ln858_8_reg_1364, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln273_reg_1323_pp2_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_084_0_phi_fu_500_p4 <= trunc_ln858_8_reg_1364;
        else 
            ap_phi_mux_p_084_0_phi_fu_500_p4 <= p_084_0_reg_496;
        end if; 
    end process;


    ap_phi_mux_p_088_0_i_phi_fu_454_p4_assign_proc : process(p_088_0_i_reg_450, icmp_ln51_reg_1208_pp0_iter3_reg, trunc_ln_reg_1254, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln51_reg_1208_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_088_0_i_phi_fu_454_p4 <= trunc_ln_reg_1254;
        else 
            ap_phi_mux_p_088_0_i_phi_fu_454_p4 <= p_088_0_i_reg_450;
        end if; 
    end process;


    ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4_assign_proc : process(p_084_0_reg_496, icmp_ln269_reg_1319, ap_CS_fsm_state29, res_tmp_bits_0_reg_530)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state29) and (icmp_ln269_reg_1319 = ap_const_lv1_0))) then 
            ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4 <= p_084_0_reg_496;
        else 
            ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4 <= res_tmp_bits_0_reg_530;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state36)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state36, add_ln297_fu_1111_p2, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            ap_return <= add_ln297_fu_1111_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    cross_mul_digits_dat_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln77_fu_835_p1, grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_address0 <= zext_ln77_fu_835_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cross_mul_digits_dat_address0 <= grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0;
        else 
            cross_mul_digits_dat_address0 <= "XXXX";
        end if; 
    end process;


    cross_mul_digits_dat_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cross_mul_digits_dat_ce0 <= grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0;
        else 
            cross_mul_digits_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_ce1_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cross_mul_digits_dat_ce1 <= grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1;
        else 
            cross_mul_digits_dat_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cross_mul_digits_dat_we0 <= grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0;
        else 
            cross_mul_digits_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we1_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            cross_mul_digits_dat_we1 <= grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1;
        else 
            cross_mul_digits_dat_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_21_fu_891_p3 <= 
        ap_const_lv5_1F when (op2_assign_reg_473(0) = '1') else 
        ap_const_lv5_0;
    exitcond_i_fu_823_p2 <= "1" when (i_0_i2_reg_485 = ap_const_lv5_10) else "0";
    grp_CAT_I_I_I_O_2_fu_616_ap_start <= grp_CAT_I_I_I_O_2_fu_616_ap_start_reg;
    grp_karastuba_mul_templa_2_fu_585_ap_start <= grp_karastuba_mul_templa_2_fu_585_ap_start_reg;
    grp_mul_I_O_fu_594_ap_start <= grp_mul_I_O_fu_594_ap_start_reg;
    grp_mul_I_O_fu_605_ap_start <= grp_mul_I_O_fu_605_ap_start_reg;
    i_2_fu_653_p2 <= std_logic_vector(unsigned(i1_0_reg_415) + unsigned(ap_const_lv4_1));
    i_3_fu_682_p2 <= std_logic_vector(unsigned(i2_0_reg_427) + unsigned(ap_const_lv4_1));
    i_4_fu_699_p2 <= std_logic_vector(unsigned(i3_0_reg_438) + unsigned(ap_const_lv4_1));
    i_5_fu_732_p2 <= std_logic_vector(unsigned(i_0_i_reg_462) + unsigned(ap_const_lv5_1));
    i_6_fu_829_p2 <= std_logic_vector(unsigned(i_0_i2_reg_485) + unsigned(ap_const_lv5_1));
    i_7_fu_925_p2 <= std_logic_vector(unsigned(i4_0_reg_508) + unsigned(ap_const_lv5_1));
    i_8_fu_1013_p2 <= std_logic_vector(unsigned(i7_0_reg_554) + unsigned(ap_const_lv5_1));
    i_fu_636_p2 <= std_logic_vector(unsigned(i_0_reg_404) + unsigned(ap_const_lv4_1));
    icmp_ln246_fu_630_p2 <= "1" when (i_0_reg_404 = ap_const_lv4_8) else "0";
    icmp_ln247_fu_647_p2 <= "1" when (i1_0_reg_415 = ap_const_lv4_8) else "0";
    icmp_ln248_fu_676_p2 <= "1" when (i2_0_reg_427 = ap_const_lv4_8) else "0";
    icmp_ln249_fu_693_p2 <= "1" when (i3_0_reg_438 = ap_const_lv4_8) else "0";
    icmp_ln269_fu_914_p2 <= "1" when (rhs_tmp_bits_read = ap_const_lv2_0) else "0";
    icmp_ln273_fu_919_p2 <= "1" when (i4_0_reg_508 = ap_const_lv5_10) else "0";
    icmp_ln283_fu_1002_p2 <= "1" when (lhs_tmp_bits_read = ap_const_lv2_0) else "0";
    icmp_ln287_fu_1007_p2 <= "1" when (i7_0_reg_554 = ap_const_lv5_10) else "0";
    icmp_ln51_fu_726_p2 <= "1" when (i_0_i_reg_462 = ap_const_lv5_10) else "0";
    j_4_fu_1029_p2 <= std_logic_vector(unsigned(j8_0_reg_565) + unsigned(ap_const_lv6_1));
    j_fu_941_p2 <= std_logic_vector(unsigned(j_0_reg_519) + unsigned(ap_const_lv6_1));

    lhs0_digits_data_V_address0_assign_proc : process(zext_ln246_reg_1137, ap_CS_fsm_state10, grp_mul_I_O_fu_594_u_digits_data_V_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_digits_data_V_address0 <= zext_ln246_reg_1137(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs0_digits_data_V_address0 <= grp_mul_I_O_fu_594_u_digits_data_V_address0;
        else 
            lhs0_digits_data_V_address0 <= "XXX";
        end if; 
    end process;


    lhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_594_u_digits_data_V_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs0_digits_data_V_ce0 <= grp_mul_I_O_fu_594_u_digits_data_V_ce0;
        else 
            lhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_address0_assign_proc : process(zext_ln246_reg_1137, ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_tmp_digits_data_address0 <= zext_ln246_reg_1137(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0;
        else 
            lhs0_tmp_digits_data_address0 <= "XXX";
        end if; 
    end process;


    lhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0;
        else 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_u_digits_data_V_address0, ap_CS_fsm_state5, zext_ln247_fu_670_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_digits_data_V_address0 <= zext_ln247_fu_670_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs1_digits_data_V_address0 <= grp_mul_I_O_fu_605_u_digits_data_V_address0;
        else 
            lhs1_digits_data_V_address0 <= "XXX";
        end if; 
    end process;


    lhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_u_digits_data_V_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs1_digits_data_V_ce0 <= grp_mul_I_O_fu_605_u_digits_data_V_ce0;
        else 
            lhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0, ap_CS_fsm_state5, zext_ln247_fu_670_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_tmp_digits_data_address0 <= zext_ln247_fu_670_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0;
        else 
            lhs1_tmp_digits_data_address0 <= "XXX";
        end if; 
    end process;


    lhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            lhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0;
        else 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state2, zext_ln246_fu_642_p1, ap_CS_fsm_state4, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln247_1_fu_665_p1, zext_ln276_fu_931_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            lhs_digits_data_V_address0 <= zext_ln276_fu_931_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs_digits_data_V_address0 <= zext_ln247_1_fu_665_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lhs_digits_data_V_address0 <= zext_ln246_fu_642_p1(4 - 1 downto 0);
        else 
            lhs_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    lhs_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state2, ap_CS_fsm_state4, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            lhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            lhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln297_fu_1105_p0 <= mul_ln297_fu_1105_p00(2 - 1 downto 0);
    mul_ln297_fu_1105_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_tmp_bits_read),4));
    mul_ln297_fu_1105_p1 <= mul_ln297_fu_1105_p10(2 - 1 downto 0);
    mul_ln297_fu_1105_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_tmp_bits_read),4));
    mul_ln297_fu_1105_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln297_fu_1105_p0) * unsigned(mul_ln297_fu_1105_p1), 4));

    res_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state23, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln277_fu_936_p1, zext_ln291_fu_1024_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            res_digits_data_V_address0 <= zext_ln291_fu_1024_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then 
            res_digits_data_V_address0 <= zext_ln277_fu_936_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_address0 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0;
        else 
            res_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    res_digits_data_V_address1_assign_proc : process(ap_CS_fsm_state23, res_digits_data_V_ad_reg_1337_pp2_iter3_reg, res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_address1 <= res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_address1 <= res_digits_data_V_ad_reg_1337_pp2_iter3_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_address1 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1;
        else 
            res_digits_data_V_address1 <= "XXXXX";
        end if; 
    end process;


    res_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state23, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            res_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_ce0 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0;
        else 
            res_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_digits_data_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_CS_fsm_state23, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1)
    begin
        if ((((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            res_digits_data_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_ce1 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1;
        else 
            res_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    res_digits_data_V_d0 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0;

    res_digits_data_V_d1_assign_proc : process(ap_CS_fsm_state23, add_ln209_reg_1359, add_ln209_5_reg_1415, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_d1 <= add_ln209_5_reg_1415;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_d1 <= add_ln209_reg_1359;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_d1 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1;
        else 
            res_digits_data_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state23, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_we0 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0;
        else 
            res_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_digits_data_V_we1_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_CS_fsm_state23, icmp_ln273_reg_1323_pp2_iter3_reg, icmp_ln287_reg_1379_pp3_iter3_reg, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1)
    begin
        if ((((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln287_reg_1379_pp3_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln273_reg_1323_pp2_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            res_digits_data_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            res_digits_data_V_we1 <= grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1;
        else 
            res_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_address0_assign_proc : process(zext_ln248_reg_1169, ap_CS_fsm_state10, grp_mul_I_O_fu_594_v_digits_data_V_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_digits_data_V_address0 <= zext_ln248_reg_1169(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_address0 <= grp_mul_I_O_fu_594_v_digits_data_V_address0;
        else 
            rhs0_digits_data_V_address0 <= "XXX";
        end if; 
    end process;


    rhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_594_v_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_ce0 <= grp_mul_I_O_fu_594_v_digits_data_V_ce0;
        else 
            rhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_address0_assign_proc : process(zext_ln248_reg_1169, ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_tmp_digits_data_address0 <= zext_ln248_reg_1169(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0;
        else 
            rhs0_tmp_digits_data_address0 <= "XXX";
        end if; 
    end process;


    rhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0;
        else 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_v_digits_data_V_address0, ap_CS_fsm_state9, zext_ln249_fu_716_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_digits_data_V_address0 <= zext_ln249_fu_716_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs1_digits_data_V_address0 <= grp_mul_I_O_fu_605_v_digits_data_V_address0;
        else 
            rhs1_digits_data_V_address0 <= "XXX";
        end if; 
    end process;


    rhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_v_digits_data_V_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs1_digits_data_V_ce0 <= grp_mul_I_O_fu_605_v_digits_data_V_ce0;
        else 
            rhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0, ap_CS_fsm_state9, zext_ln249_fu_716_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_tmp_digits_data_address0 <= zext_ln249_fu_716_p1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0;
        else 
            rhs1_tmp_digits_data_address0 <= "XXX";
        end if; 
    end process;


    rhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state10, grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0;
        else 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state6, zext_ln248_fu_688_p1, ap_CS_fsm_state8, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0, zext_ln249_1_fu_711_p1, zext_ln290_fu_1019_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            rhs_digits_data_V_address0 <= zext_ln290_fu_1019_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rhs_digits_data_V_address0 <= zext_ln249_1_fu_711_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            rhs_digits_data_V_address0 <= zext_ln248_fu_688_p1(4 - 1 downto 0);
        else 
            rhs_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    rhs_digits_data_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            rhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            rhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln701_1_fu_861_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_477_p4(0) = '1') else 
        ap_const_lv64_0;
    select_ln701_fu_853_p3 <= 
        ap_const_lv65_1FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_477_p4(0) = '1') else 
        ap_const_lv65_0;
        sext_ln92_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln92_fu_899_p2),7));

    tmp_V_2_fu_767_p2 <= std_logic_vector(unsigned(zext_ln700_10_fu_764_p1) + unsigned(zext_ln51_fu_756_p1));
    tmp_V_3_fu_847_p2 <= std_logic_vector(unsigned(zext_ln180_fu_841_p1) - unsigned(zext_ln701_fu_844_p1));
    tmp_V_4_fu_872_p2 <= std_logic_vector(unsigned(select_ln701_fu_853_p3) + unsigned(tmp_V_3_reg_1298));
    tmp_V_5_fu_1059_p2 <= std_logic_vector(unsigned(zext_ln700_16_fu_1056_p1) + unsigned(zext_ln287_fu_1048_p1));
    tmp_V_fu_971_p2 <= std_logic_vector(unsigned(zext_ln700_13_fu_968_p1) + unsigned(zext_ln273_fu_960_p1));
    trunc_ln701_fu_869_p1 <= tmp_V_3_reg_1298(64 - 1 downto 0);
    xor_ln247_fu_659_p2 <= (i1_0_reg_415 xor ap_const_lv4_8);
    xor_ln249_fu_705_p2 <= (i3_0_reg_438 xor ap_const_lv4_8);

    z0_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln56_fu_738_p1, ap_CS_fsm_state23, grp_mul_I_O_fu_594_w_digits_data_V_address0, grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z0_digits_data_V_address0 <= zext_ln56_fu_738_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z0_digits_data_V_address0 <= grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z0_digits_data_V_address0 <= grp_mul_I_O_fu_594_w_digits_data_V_address0;
        else 
            z0_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    z0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state23, grp_mul_I_O_fu_594_w_digits_data_V_ce0, grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z0_digits_data_V_ce0 <= grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z0_digits_data_V_ce0 <= grp_mul_I_O_fu_594_w_digits_data_V_ce0;
        else 
            z0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_594_w_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z0_digits_data_V_ce1 <= grp_mul_I_O_fu_594_w_digits_data_V_ce1;
        else 
            z0_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_594_w_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z0_digits_data_V_we0 <= grp_mul_I_O_fu_594_w_digits_data_V_we0;
        else 
            z0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_594_w_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z0_digits_data_V_we1 <= grp_mul_I_O_fu_594_w_digits_data_V_we1;
        else 
            z0_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_address0_assign_proc : process(zext_ln77_reg_1273_pp1_iter3_reg, ap_CS_fsm_state23, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_address0 <= zext_ln77_reg_1273_pp1_iter3_reg(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z1_digits_data_V_address0 <= grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0;
        else 
            z1_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    z1_digits_data_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state23, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z1_digits_data_V_ce0 <= grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0;
        else 
            z1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_i_reg_1264_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1264_pp1_iter3_reg = ap_const_lv1_0))) then 
            z1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            z1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_tmp_bits_fu_908_p2 <= std_logic_vector(signed(sext_ln92_fu_904_p1) - signed(zext_ln61_4_reg_1259));

    z2_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln56_fu_738_p1, ap_CS_fsm_state23, grp_mul_I_O_fu_605_w_digits_data_V_address0, grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z2_digits_data_V_address0 <= zext_ln56_fu_738_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z2_digits_data_V_address0 <= grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z2_digits_data_V_address0 <= grp_mul_I_O_fu_605_w_digits_data_V_address0;
        else 
            z2_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    z2_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state23, grp_mul_I_O_fu_605_w_digits_data_V_ce0, grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z2_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            z2_digits_data_V_ce0 <= grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z2_digits_data_V_ce0 <= grp_mul_I_O_fu_605_w_digits_data_V_ce0;
        else 
            z2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_w_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z2_digits_data_V_ce1 <= grp_mul_I_O_fu_605_w_digits_data_V_ce1;
        else 
            z2_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_w_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z2_digits_data_V_we0 <= grp_mul_I_O_fu_605_w_digits_data_V_we0;
        else 
            z2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state10, grp_mul_I_O_fu_605_w_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            z2_digits_data_V_we1 <= grp_mul_I_O_fu_605_w_digits_data_V_we1;
        else 
            z2_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln180_fu_841_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cross_mul_digits_dat_2_reg_1288),65));
    zext_ln209_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z0_digits_data_V_loa_reg_1232),65));
    zext_ln246_fu_642_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_404),64));
    zext_ln247_1_fu_665_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln247_fu_659_p2),64));
    zext_ln247_fu_670_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_415),64));
    zext_ln248_fu_688_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_reg_427),64));
    zext_ln249_1_fu_711_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln249_fu_705_p2),64));
    zext_ln249_fu_716_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_438),64));
    zext_ln257_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_karastuba_mul_templa_2_fu_585_ap_return),5));
    zext_ln273_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_084_0_phi_fu_500_p4),66));
    zext_ln276_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i4_0_reg_508),64));
    zext_ln277_1_fu_947_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_digits_data_V_lo_2_reg_1348),65));
    zext_ln277_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_519),64));
    zext_ln283_fu_998_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4),3));
    zext_ln287_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0160_0_phi_fu_546_p4),66));
    zext_ln290_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_0_reg_554),64));
    zext_ln291_1_fu_1035_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_digits_data_V_lo_2_reg_1404),65));
    zext_ln291_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_0_reg_565),64));
    zext_ln295_fu_1086_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0160_0_reg_542),3));
    zext_ln297_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_tmp_bits_1_reg_576),4));
    zext_ln51_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_454_p4),66));
    zext_ln56_fu_738_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_462),64));
    zext_ln61_1_fu_797_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_tmp_bits_write_a_reg_1193),5));
    zext_ln61_2_fu_800_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_tmp_bits_write_a_1_reg_1198),5));
    zext_ln61_3_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_fu_803_p2),6));
    zext_ln61_4_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_tmp_bits_fu_813_p2),7));
    zext_ln61_fu_793_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_088_0_i_reg_450),6));
    zext_ln700_10_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_reg_1244),66));
    zext_ln700_11_fu_950_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_626),65));
    zext_ln700_12_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_084_0_phi_fu_500_p4),64));
    zext_ln700_13_fu_968_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_8_reg_1354),66));
    zext_ln700_14_fu_1038_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_626),65));
    zext_ln700_15_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0160_0_phi_fu_546_p4),64));
    zext_ln700_16_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_10_reg_1410),66));
    zext_ln700_9_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_454_p4),64));
    zext_ln700_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_digits_data_V_loa_reg_1238),65));
    zext_ln701_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_digits_data_V_l_reg_1293),65));
    zext_ln77_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i2_reg_485),64));
end behav;
