// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_templa_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lhs_tmp_bits_read,
        lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0,
        res_digits_data_V_address0,
        res_digits_data_V_ce0,
        res_digits_data_V_we0,
        res_digits_data_V_d0,
        res_digits_data_V_q0,
        res_digits_data_V_address1,
        res_digits_data_V_ce1,
        res_digits_data_V_we1,
        res_digits_data_V_d1,
        res_digits_data_V_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_pp0_stage0 = 20'd1024;
parameter    ap_ST_fsm_state16 = 20'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 20'd4096;
parameter    ap_ST_fsm_state22 = 20'd8192;
parameter    ap_ST_fsm_state23 = 20'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 20'd32768;
parameter    ap_ST_fsm_state29 = 20'd65536;
parameter    ap_ST_fsm_pp3_stage0 = 20'd131072;
parameter    ap_ST_fsm_state35 = 20'd262144;
parameter    ap_ST_fsm_state36 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] lhs_tmp_bits_read;
output  [3:0] lhs_digits_data_V_address0;
output   lhs_digits_data_V_ce0;
input  [63:0] lhs_digits_data_V_q0;
input  [1:0] rhs_tmp_bits_read;
output  [3:0] rhs_digits_data_V_address0;
output   rhs_digits_data_V_ce0;
input  [63:0] rhs_digits_data_V_q0;
output  [4:0] res_digits_data_V_address0;
output   res_digits_data_V_ce0;
output   res_digits_data_V_we0;
output  [63:0] res_digits_data_V_d0;
input  [63:0] res_digits_data_V_q0;
output  [4:0] res_digits_data_V_address1;
output   res_digits_data_V_ce1;
output   res_digits_data_V_we1;
output  [63:0] res_digits_data_V_d1;
input  [63:0] res_digits_data_V_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] lhs_digits_data_V_address0;
reg lhs_digits_data_V_ce0;
reg[3:0] rhs_digits_data_V_address0;
reg rhs_digits_data_V_ce0;
reg[4:0] res_digits_data_V_address0;
reg res_digits_data_V_ce0;
reg res_digits_data_V_we0;
reg[4:0] res_digits_data_V_address1;
reg res_digits_data_V_ce1;
reg res_digits_data_V_we1;
reg[63:0] res_digits_data_V_d1;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] p_088_0_i_reg_450;
reg   [4:0] i_0_i_reg_462;
reg   [0:0] op2_assign_reg_473;
reg   [4:0] i_0_i2_reg_485;
reg   [1:0] p_084_0_reg_496;
reg   [4:0] i4_0_reg_508;
reg   [5:0] j_0_reg_519;
reg   [1:0] p_0160_0_reg_542;
reg   [4:0] i7_0_reg_554;
reg   [5:0] j8_0_reg_565;
reg   [63:0] reg_626;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state24_pp2_stage0_iter0;
wire    ap_block_state25_pp2_stage0_iter1;
wire    ap_block_state26_pp2_stage0_iter2;
wire    ap_block_state27_pp2_stage0_iter3;
wire    ap_block_state28_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln273_reg_1323;
reg   [63:0] reg_626_pp2_iter2_reg;
reg   [63:0] reg_626_pp3_iter2_reg;
wire    ap_block_state30_pp3_stage0_iter0;
wire    ap_block_state31_pp3_stage0_iter1;
wire    ap_block_state32_pp3_stage0_iter2;
wire    ap_block_state33_pp3_stage0_iter3;
wire    ap_block_state34_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln287_reg_1379;
wire   [3:0] i_fu_636_p2;
reg   [3:0] i_reg_1132;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln246_fu_642_p1;
reg   [63:0] zext_ln246_reg_1137;
wire   [0:0] icmp_ln246_fu_630_p2;
wire   [3:0] i_2_fu_653_p2;
reg   [3:0] i_2_reg_1151;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln247_fu_647_p2;
wire   [3:0] i_3_fu_682_p2;
reg   [3:0] i_3_reg_1164;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln248_fu_688_p1;
reg   [63:0] zext_ln248_reg_1169;
wire   [0:0] icmp_ln248_fu_676_p2;
wire   [3:0] i_4_fu_699_p2;
reg   [3:0] i_4_reg_1183;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln249_fu_693_p2;
wire   [3:0] grp_mul_I_O_fu_594_ap_return;
reg   [3:0] res_tmp_bits_write_a_reg_1193;
wire    ap_CS_fsm_state10;
wire    grp_mul_I_O_fu_594_ap_ready;
wire    grp_mul_I_O_fu_594_ap_done;
wire    grp_mul_I_O_fu_605_ap_ready;
wire    grp_mul_I_O_fu_605_ap_done;
wire    grp_karastuba_mul_templa_2_fu_585_ap_ready;
wire    grp_karastuba_mul_templa_2_fu_585_ap_done;
reg    ap_block_state10_on_subcall_done;
wire   [3:0] grp_mul_I_O_fu_605_ap_return;
reg   [3:0] res_tmp_bits_write_a_1_reg_1198;
wire   [4:0] zext_ln257_fu_722_p1;
reg   [4:0] zext_ln257_reg_1203;
wire   [0:0] icmp_ln51_fu_726_p2;
reg   [0:0] icmp_ln51_reg_1208;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state11_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln51_reg_1208_pp0_iter1_reg;
reg   [0:0] icmp_ln51_reg_1208_pp0_iter2_reg;
reg   [0:0] icmp_ln51_reg_1208_pp0_iter3_reg;
wire   [4:0] i_5_fu_732_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln56_fu_738_p1;
reg   [63:0] zext_ln56_reg_1217;
reg   [63:0] zext_ln56_reg_1217_pp0_iter1_reg;
reg   [63:0] zext_ln56_reg_1217_pp0_iter2_reg;
reg   [63:0] zext_ln56_reg_1217_pp0_iter3_reg;
wire   [63:0] z0_digits_data_V_q0;
reg   [63:0] z0_digits_data_V_loa_reg_1232;
reg   [63:0] z0_digits_data_V_loa_reg_1232_pp0_iter2_reg;
wire   [63:0] z2_digits_data_V_q0;
reg   [63:0] z2_digits_data_V_loa_reg_1238;
reg   [63:0] z2_digits_data_V_loa_reg_1238_pp0_iter2_reg;
wire   [64:0] add_ln700_fu_750_p2;
reg   [64:0] add_ln700_reg_1244;
wire   [63:0] add_ln209_6_fu_778_p2;
reg   [63:0] add_ln209_6_reg_1249;
reg   [1:0] trunc_ln_reg_1254;
reg    ap_enable_reg_pp0_iter3;
wire   [6:0] zext_ln61_4_fu_819_p1;
reg   [6:0] zext_ln61_4_reg_1259;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond_i_fu_823_p2;
reg   [0:0] exitcond_i_reg_1264;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state17_pp1_stage0_iter0;
wire    ap_block_state18_pp1_stage0_iter1;
wire    ap_block_state19_pp1_stage0_iter2;
wire    ap_block_state20_pp1_stage0_iter3;
wire    ap_block_state21_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_1264_pp1_iter1_reg;
reg   [0:0] exitcond_i_reg_1264_pp1_iter2_reg;
reg   [0:0] exitcond_i_reg_1264_pp1_iter3_reg;
wire   [4:0] i_6_fu_829_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln77_fu_835_p1;
reg   [63:0] zext_ln77_reg_1273;
reg   [63:0] zext_ln77_reg_1273_pp1_iter1_reg;
reg   [63:0] zext_ln77_reg_1273_pp1_iter2_reg;
reg   [63:0] zext_ln77_reg_1273_pp1_iter3_reg;
wire   [63:0] cross_mul_digits_dat_q0;
reg   [63:0] cross_mul_digits_dat_2_reg_1288;
wire   [63:0] add2_digits_data_V_q0;
reg   [63:0] add2_digits_data_V_l_reg_1293;
reg    ap_enable_reg_pp1_iter1;
wire   [64:0] tmp_V_3_fu_847_p2;
reg   [64:0] tmp_V_3_reg_1298;
reg   [0:0] tmp_1_reg_1304;
reg    ap_enable_reg_pp1_iter3;
wire   [63:0] add_ln700_7_fu_885_p2;
reg   [63:0] add_ln700_7_reg_1309;
wire   [6:0] z1_tmp_bits_fu_908_p2;
reg   [6:0] z1_tmp_bits_reg_1314;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln269_fu_914_p2;
reg   [0:0] icmp_ln269_reg_1319;
wire    ap_CS_fsm_state23;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_ready;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_done;
wire   [0:0] icmp_ln273_fu_919_p2;
reg   [0:0] icmp_ln273_reg_1323_pp2_iter1_reg;
reg   [0:0] icmp_ln273_reg_1323_pp2_iter2_reg;
reg   [0:0] icmp_ln273_reg_1323_pp2_iter3_reg;
wire   [4:0] i_7_fu_925_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [4:0] res_digits_data_V_ad_reg_1337;
reg   [4:0] res_digits_data_V_ad_reg_1337_pp2_iter1_reg;
reg   [4:0] res_digits_data_V_ad_reg_1337_pp2_iter2_reg;
reg   [4:0] res_digits_data_V_ad_reg_1337_pp2_iter3_reg;
wire   [5:0] j_fu_941_p2;
reg   [63:0] lhs_digits_data_V_lo_2_reg_1348;
reg   [63:0] lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg;
wire   [64:0] add_ln700_8_fu_954_p2;
reg   [64:0] add_ln700_8_reg_1354;
wire   [63:0] add_ln209_fu_983_p2;
reg   [63:0] add_ln209_reg_1359;
reg   [1:0] trunc_ln858_8_reg_1364;
reg    ap_enable_reg_pp2_iter3;
wire   [2:0] zext_ln283_fu_998_p1;
reg   [2:0] zext_ln283_reg_1369;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln283_fu_1002_p2;
wire   [0:0] icmp_ln287_fu_1007_p2;
reg   [0:0] icmp_ln287_reg_1379_pp3_iter1_reg;
reg   [0:0] icmp_ln287_reg_1379_pp3_iter2_reg;
reg   [0:0] icmp_ln287_reg_1379_pp3_iter3_reg;
wire   [4:0] i_8_fu_1013_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [4:0] res_digits_data_V_ad_1_reg_1393;
reg   [4:0] res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg;
reg   [4:0] res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg;
reg   [4:0] res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg;
wire   [5:0] j_4_fu_1029_p2;
reg   [63:0] rhs_digits_data_V_lo_2_reg_1404;
reg   [63:0] rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg;
wire   [64:0] add_ln700_10_fu_1042_p2;
reg   [64:0] add_ln700_10_reg_1410;
wire   [63:0] add_ln209_5_fu_1071_p2;
reg   [63:0] add_ln209_5_reg_1415;
reg   [1:0] trunc_ln858_9_reg_1420;
reg    ap_enable_reg_pp3_iter3;
wire   [2:0] add_ln295_fu_1090_p2;
wire    ap_CS_fsm_state35;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state24;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state30;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg   [2:0] lhs0_digits_data_V_address0;
reg    lhs0_digits_data_V_ce0;
reg    lhs0_digits_data_V_we0;
wire   [63:0] lhs0_digits_data_V_q0;
reg   [2:0] lhs1_digits_data_V_address0;
reg    lhs1_digits_data_V_ce0;
reg    lhs1_digits_data_V_we0;
wire   [63:0] lhs1_digits_data_V_q0;
reg   [2:0] rhs0_digits_data_V_address0;
reg    rhs0_digits_data_V_ce0;
reg    rhs0_digits_data_V_we0;
wire   [63:0] rhs0_digits_data_V_q0;
reg   [2:0] rhs1_digits_data_V_address0;
reg    rhs1_digits_data_V_ce0;
reg    rhs1_digits_data_V_we0;
wire   [63:0] rhs1_digits_data_V_q0;
reg   [2:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [63:0] lhs0_tmp_digits_data_q0;
reg   [2:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [63:0] lhs1_tmp_digits_data_q0;
reg   [2:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [63:0] rhs0_tmp_digits_data_q0;
reg   [2:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [63:0] rhs1_tmp_digits_data_q0;
reg   [3:0] z0_digits_data_V_address0;
reg    z0_digits_data_V_ce0;
reg    z0_digits_data_V_we0;
reg    z0_digits_data_V_ce1;
reg    z0_digits_data_V_we1;
wire   [63:0] z0_digits_data_V_q1;
reg   [3:0] z2_digits_data_V_address0;
reg    z2_digits_data_V_ce0;
reg    z2_digits_data_V_we0;
reg    z2_digits_data_V_ce1;
reg    z2_digits_data_V_we1;
wire   [63:0] z2_digits_data_V_q1;
reg   [3:0] cross_mul_digits_dat_address0;
reg    cross_mul_digits_dat_ce0;
reg    cross_mul_digits_dat_we0;
reg    cross_mul_digits_dat_ce1;
reg    cross_mul_digits_dat_we1;
wire   [63:0] cross_mul_digits_dat_q1;
reg   [3:0] add2_digits_data_V_address0;
reg    add2_digits_data_V_ce0;
reg    add2_digits_data_V_we0;
reg   [3:0] z1_digits_data_V_address0;
reg    z1_digits_data_V_ce0;
reg    z1_digits_data_V_we0;
wire   [63:0] z1_digits_data_V_q0;
wire    grp_karastuba_mul_templa_2_fu_585_ap_start;
wire    grp_karastuba_mul_templa_2_fu_585_ap_idle;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0;
wire    grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0;
wire   [63:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1;
wire   [63:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_ap_return;
wire    grp_mul_I_O_fu_594_ap_start;
wire    grp_mul_I_O_fu_594_ap_idle;
wire   [2:0] grp_mul_I_O_fu_594_u_digits_data_V_address0;
wire    grp_mul_I_O_fu_594_u_digits_data_V_ce0;
wire   [2:0] grp_mul_I_O_fu_594_v_digits_data_V_address0;
wire    grp_mul_I_O_fu_594_v_digits_data_V_ce0;
wire   [3:0] grp_mul_I_O_fu_594_w_digits_data_V_address0;
wire    grp_mul_I_O_fu_594_w_digits_data_V_ce0;
wire    grp_mul_I_O_fu_594_w_digits_data_V_we0;
wire   [63:0] grp_mul_I_O_fu_594_w_digits_data_V_d0;
wire   [3:0] grp_mul_I_O_fu_594_w_digits_data_V_address1;
wire    grp_mul_I_O_fu_594_w_digits_data_V_ce1;
wire    grp_mul_I_O_fu_594_w_digits_data_V_we1;
wire   [63:0] grp_mul_I_O_fu_594_w_digits_data_V_d1;
wire    grp_mul_I_O_fu_605_ap_start;
wire    grp_mul_I_O_fu_605_ap_idle;
wire   [2:0] grp_mul_I_O_fu_605_u_digits_data_V_address0;
wire    grp_mul_I_O_fu_605_u_digits_data_V_ce0;
wire   [2:0] grp_mul_I_O_fu_605_v_digits_data_V_address0;
wire    grp_mul_I_O_fu_605_v_digits_data_V_ce0;
wire   [3:0] grp_mul_I_O_fu_605_w_digits_data_V_address0;
wire    grp_mul_I_O_fu_605_w_digits_data_V_ce0;
wire    grp_mul_I_O_fu_605_w_digits_data_V_we0;
wire   [63:0] grp_mul_I_O_fu_605_w_digits_data_V_d0;
wire   [3:0] grp_mul_I_O_fu_605_w_digits_data_V_address1;
wire    grp_mul_I_O_fu_605_w_digits_data_V_ce1;
wire    grp_mul_I_O_fu_605_w_digits_data_V_we1;
wire   [63:0] grp_mul_I_O_fu_605_w_digits_data_V_d1;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_start;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_idle;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0;
wire   [4:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0;
wire   [63:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0;
wire   [4:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1;
wire   [63:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1;
reg   [3:0] i_0_reg_404;
wire    ap_CS_fsm_state3;
reg   [3:0] i1_0_reg_415;
wire    ap_CS_fsm_state5;
reg   [3:0] i2_0_reg_427;
wire    ap_CS_fsm_state7;
reg   [3:0] i3_0_reg_438;
wire    ap_CS_fsm_state9;
reg   [1:0] ap_phi_mux_p_088_0_i_phi_fu_454_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_op2_assign_phi_fu_477_p4;
wire    ap_block_pp1_stage0;
reg   [1:0] ap_phi_mux_p_084_0_phi_fu_500_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4;
reg   [1:0] res_tmp_bits_0_reg_530;
reg   [1:0] ap_phi_mux_p_0160_0_phi_fu_546_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] res_tmp_bits_1_reg_576;
reg    grp_karastuba_mul_templa_2_fu_585_ap_start_reg;
reg    grp_mul_I_O_fu_594_ap_start_reg;
reg    grp_mul_I_O_fu_605_ap_start_reg;
reg    grp_CAT_I_I_I_O_2_fu_616_ap_start_reg;
wire   [63:0] zext_ln247_1_fu_665_p1;
wire   [63:0] zext_ln247_fu_670_p1;
wire   [63:0] zext_ln249_1_fu_711_p1;
wire   [63:0] zext_ln249_fu_716_p1;
wire   [63:0] zext_ln276_fu_931_p1;
wire   [63:0] zext_ln277_fu_936_p1;
wire   [63:0] zext_ln290_fu_1019_p1;
wire   [63:0] zext_ln291_fu_1024_p1;
wire   [3:0] xor_ln247_fu_659_p2;
wire   [3:0] xor_ln249_fu_705_p2;
wire   [64:0] zext_ln209_fu_744_p1;
wire   [64:0] zext_ln700_fu_747_p1;
wire   [65:0] zext_ln700_10_fu_764_p1;
wire   [65:0] zext_ln51_fu_756_p1;
wire   [63:0] zext_ln700_9_fu_760_p1;
wire   [63:0] add_ln209_7_fu_773_p2;
wire   [65:0] tmp_V_2_fu_767_p2;
wire   [4:0] zext_ln61_2_fu_800_p1;
wire   [4:0] zext_ln61_1_fu_797_p1;
wire   [4:0] add_ln61_fu_803_p2;
wire   [5:0] zext_ln61_fu_793_p1;
wire   [5:0] zext_ln61_3_fu_809_p1;
wire   [5:0] add2_tmp_bits_fu_813_p2;
wire   [64:0] zext_ln180_fu_841_p1;
wire   [64:0] zext_ln701_fu_844_p1;
wire   [64:0] select_ln701_fu_853_p3;
wire   [64:0] tmp_V_4_fu_872_p2;
wire   [63:0] trunc_ln701_fu_869_p1;
wire   [63:0] select_ln701_1_fu_861_p3;
wire   [4:0] empty_21_fu_891_p3;
wire   [4:0] add_ln92_fu_899_p2;
wire  signed [6:0] sext_ln92_fu_904_p1;
wire   [64:0] zext_ln277_1_fu_947_p1;
wire   [64:0] zext_ln700_11_fu_950_p1;
wire   [65:0] zext_ln700_13_fu_968_p1;
wire   [65:0] zext_ln273_fu_960_p1;
wire   [63:0] zext_ln700_12_fu_964_p1;
wire   [63:0] add_ln209_8_fu_977_p2;
wire   [65:0] tmp_V_fu_971_p2;
wire   [64:0] zext_ln291_1_fu_1035_p1;
wire   [64:0] zext_ln700_14_fu_1038_p1;
wire   [65:0] zext_ln700_16_fu_1056_p1;
wire   [65:0] zext_ln287_fu_1048_p1;
wire   [63:0] zext_ln700_15_fu_1052_p1;
wire   [63:0] add_ln209_9_fu_1065_p2;
wire   [65:0] tmp_V_5_fu_1059_p2;
wire   [2:0] zext_ln295_fu_1086_p1;
wire    ap_CS_fsm_state36;
wire   [1:0] mul_ln297_fu_1105_p0;
wire   [1:0] mul_ln297_fu_1105_p1;
wire   [3:0] zext_ln297_fu_1095_p1;
wire   [3:0] mul_ln297_fu_1105_p2;
wire   [3:0] add_ln297_fu_1111_p2;
reg   [3:0] ap_return_preg;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [3:0] mul_ln297_fu_1105_p00;
wire   [3:0] mul_ln297_fu_1105_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 grp_karastuba_mul_templa_2_fu_585_ap_start_reg = 1'b0;
#0 grp_mul_I_O_fu_594_ap_start_reg = 1'b0;
#0 grp_mul_I_O_fu_605_ap_start_reg = 1'b0;
#0 grp_CAT_I_I_I_O_2_fu_616_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_V_address0),
    .ce0(lhs0_digits_data_V_ce0),
    .we0(lhs0_digits_data_V_we0),
    .d0(lhs_digits_data_V_q0),
    .q0(lhs0_digits_data_V_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_V_address0),
    .ce0(lhs1_digits_data_V_ce0),
    .we0(lhs1_digits_data_V_we0),
    .d0(lhs_digits_data_V_q0),
    .q0(lhs1_digits_data_V_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_V_address0),
    .ce0(rhs0_digits_data_V_ce0),
    .we0(rhs0_digits_data_V_we0),
    .d0(rhs_digits_data_V_q0),
    .q0(rhs0_digits_data_V_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_V_address0),
    .ce0(rhs1_digits_data_V_ce0),
    .we0(rhs1_digits_data_V_we0),
    .d0(rhs_digits_data_V_q0),
    .q0(rhs1_digits_data_V_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(lhs_digits_data_V_q0),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(lhs_digits_data_V_q0),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(rhs_digits_data_V_q0),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 64 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(rhs_digits_data_V_q0),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_temmb6 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z0_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z0_digits_data_V_address0),
    .ce0(z0_digits_data_V_ce0),
    .we0(z0_digits_data_V_we0),
    .d0(grp_mul_I_O_fu_594_w_digits_data_V_d0),
    .q0(z0_digits_data_V_q0),
    .address1(grp_mul_I_O_fu_594_w_digits_data_V_address1),
    .ce1(z0_digits_data_V_ce1),
    .we1(z0_digits_data_V_we1),
    .d1(grp_mul_I_O_fu_594_w_digits_data_V_d1),
    .q1(z0_digits_data_V_q1)
);

karastuba_mul_temmb6 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_digits_data_V_address0),
    .ce0(z2_digits_data_V_ce0),
    .we0(z2_digits_data_V_we0),
    .d0(grp_mul_I_O_fu_605_w_digits_data_V_d0),
    .q0(z2_digits_data_V_q0),
    .address1(grp_mul_I_O_fu_605_w_digits_data_V_address1),
    .ce1(z2_digits_data_V_ce1),
    .we1(z2_digits_data_V_we1),
    .d1(grp_mul_I_O_fu_605_w_digits_data_V_d1),
    .q1(z2_digits_data_V_q1)
);

karastuba_mul_temmb6 #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
cross_mul_digits_dat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cross_mul_digits_dat_address0),
    .ce0(cross_mul_digits_dat_ce0),
    .we0(cross_mul_digits_dat_we0),
    .d0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0),
    .q0(cross_mul_digits_dat_q0),
    .address1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1),
    .ce1(cross_mul_digits_dat_ce1),
    .we1(cross_mul_digits_dat_we1),
    .d1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1),
    .q1(cross_mul_digits_dat_q1)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
add2_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_V_address0),
    .ce0(add2_digits_data_V_ce0),
    .we0(add2_digits_data_V_we0),
    .d0(add_ln209_6_reg_1249),
    .q0(add2_digits_data_V_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 64 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z1_digits_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_V_address0),
    .ce0(z1_digits_data_V_ce0),
    .we0(z1_digits_data_V_we0),
    .d0(add_ln700_7_reg_1309),
    .q0(z1_digits_data_V_q0)
);

karastuba_mul_templa_2 grp_karastuba_mul_templa_2_fu_585(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_2_fu_585_ap_start),
    .ap_done(grp_karastuba_mul_templa_2_fu_585_ap_done),
    .ap_idle(grp_karastuba_mul_templa_2_fu_585_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_2_fu_585_ap_ready),
    .lhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0),
    .lhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0),
    .lhs0_tmp_digits_data_V_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0),
    .lhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0),
    .lhs1_tmp_digits_data_V_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_V_address0(grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0),
    .rhs0_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0),
    .rhs0_tmp_digits_data_V_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_V_address0(grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0),
    .rhs1_tmp_digits_data_V_ce0(grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0),
    .rhs1_tmp_digits_data_V_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_digits_data_V_address0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0),
    .cross_mul_digits_data_V_ce0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0),
    .cross_mul_digits_data_V_we0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0),
    .cross_mul_digits_data_V_d0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d0),
    .cross_mul_digits_data_V_q0(cross_mul_digits_dat_q0),
    .cross_mul_digits_data_V_address1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address1),
    .cross_mul_digits_data_V_ce1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1),
    .cross_mul_digits_data_V_we1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1),
    .cross_mul_digits_data_V_d1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_d1),
    .cross_mul_digits_data_V_q1(cross_mul_digits_dat_q1),
    .ap_return(grp_karastuba_mul_templa_2_fu_585_ap_return)
);

mul_I_O grp_mul_I_O_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mul_I_O_fu_594_ap_start),
    .ap_done(grp_mul_I_O_fu_594_ap_done),
    .ap_idle(grp_mul_I_O_fu_594_ap_idle),
    .ap_ready(grp_mul_I_O_fu_594_ap_ready),
    .u_tmp_bits_read(2'd0),
    .u_digits_data_V_address0(grp_mul_I_O_fu_594_u_digits_data_V_address0),
    .u_digits_data_V_ce0(grp_mul_I_O_fu_594_u_digits_data_V_ce0),
    .u_digits_data_V_q0(lhs0_digits_data_V_q0),
    .v_tmp_bits_read(2'd0),
    .v_digits_data_V_address0(grp_mul_I_O_fu_594_v_digits_data_V_address0),
    .v_digits_data_V_ce0(grp_mul_I_O_fu_594_v_digits_data_V_ce0),
    .v_digits_data_V_q0(rhs0_digits_data_V_q0),
    .w_digits_data_V_address0(grp_mul_I_O_fu_594_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_mul_I_O_fu_594_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_mul_I_O_fu_594_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_mul_I_O_fu_594_w_digits_data_V_d0),
    .w_digits_data_V_q0(z0_digits_data_V_q0),
    .w_digits_data_V_address1(grp_mul_I_O_fu_594_w_digits_data_V_address1),
    .w_digits_data_V_ce1(grp_mul_I_O_fu_594_w_digits_data_V_ce1),
    .w_digits_data_V_we1(grp_mul_I_O_fu_594_w_digits_data_V_we1),
    .w_digits_data_V_d1(grp_mul_I_O_fu_594_w_digits_data_V_d1),
    .w_digits_data_V_q1(z0_digits_data_V_q1),
    .ap_return(grp_mul_I_O_fu_594_ap_return)
);

mul_I_O grp_mul_I_O_fu_605(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mul_I_O_fu_605_ap_start),
    .ap_done(grp_mul_I_O_fu_605_ap_done),
    .ap_idle(grp_mul_I_O_fu_605_ap_idle),
    .ap_ready(grp_mul_I_O_fu_605_ap_ready),
    .u_tmp_bits_read(2'd0),
    .u_digits_data_V_address0(grp_mul_I_O_fu_605_u_digits_data_V_address0),
    .u_digits_data_V_ce0(grp_mul_I_O_fu_605_u_digits_data_V_ce0),
    .u_digits_data_V_q0(lhs1_digits_data_V_q0),
    .v_tmp_bits_read(2'd0),
    .v_digits_data_V_address0(grp_mul_I_O_fu_605_v_digits_data_V_address0),
    .v_digits_data_V_ce0(grp_mul_I_O_fu_605_v_digits_data_V_ce0),
    .v_digits_data_V_q0(rhs1_digits_data_V_q0),
    .w_digits_data_V_address0(grp_mul_I_O_fu_605_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_mul_I_O_fu_605_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_mul_I_O_fu_605_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_mul_I_O_fu_605_w_digits_data_V_d0),
    .w_digits_data_V_q0(z2_digits_data_V_q0),
    .w_digits_data_V_address1(grp_mul_I_O_fu_605_w_digits_data_V_address1),
    .w_digits_data_V_ce1(grp_mul_I_O_fu_605_w_digits_data_V_ce1),
    .w_digits_data_V_we1(grp_mul_I_O_fu_605_w_digits_data_V_we1),
    .w_digits_data_V_d1(grp_mul_I_O_fu_605_w_digits_data_V_d1),
    .w_digits_data_V_q1(z2_digits_data_V_q1),
    .ap_return(grp_mul_I_O_fu_605_ap_return)
);

CAT_I_I_I_O_2 grp_CAT_I_I_I_O_2_fu_616(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_2_fu_616_ap_start),
    .ap_done(grp_CAT_I_I_I_O_2_fu_616_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_2_fu_616_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_2_fu_616_ap_ready),
    .x0_digits_data_V_address0(grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0),
    .x0_digits_data_V_ce0(grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0),
    .x0_digits_data_V_q0(z0_digits_data_V_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_1314),
    .x1_digits_data_V_address0(grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0),
    .x1_digits_data_V_ce0(grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0),
    .x1_digits_data_V_q0(z1_digits_data_V_q0),
    .x2_digits_data_V_address0(grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0),
    .x2_digits_data_V_ce0(grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0),
    .x2_digits_data_V_q0(z2_digits_data_V_q0),
    .w_digits_data_V_address0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0),
    .w_digits_data_V_ce0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0),
    .w_digits_data_V_we0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0),
    .w_digits_data_V_d0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0),
    .w_digits_data_V_q0(res_digits_data_V_q0),
    .w_digits_data_V_address1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1),
    .w_digits_data_V_ce1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1),
    .w_digits_data_V_we1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1),
    .w_digits_data_V_d1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1),
    .w_digits_data_V_q1(res_digits_data_V_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state17)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state24))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state24)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state30)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_return_preg <= add_ln297_fu_1111_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_2_fu_616_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln249_fu_693_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_2_fu_585_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mul_I_O_fu_594_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln249_fu_693_p2 == 1'd1))) begin
            grp_mul_I_O_fu_594_ap_start_reg <= 1'b1;
        end else if ((grp_mul_I_O_fu_594_ap_ready == 1'b1)) begin
            grp_mul_I_O_fu_594_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mul_I_O_fu_605_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln249_fu_693_p2 == 1'd1))) begin
            grp_mul_I_O_fu_605_ap_start_reg <= 1'b1;
        end else if ((grp_mul_I_O_fu_605_ap_ready == 1'b1)) begin
            grp_mul_I_O_fu_605_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_630_p2 == 1'd1))) begin
        i1_0_reg_415 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_0_reg_415 <= i_2_reg_1151;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln247_fu_647_p2 == 1'd1))) begin
        i2_0_reg_427 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_427 <= i_3_reg_1164;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln248_fu_676_p2 == 1'd1))) begin
        i3_0_reg_438 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i3_0_reg_438 <= i_4_reg_1183;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
        i4_0_reg_508 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln273_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i4_0_reg_508 <= i_7_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
        i7_0_reg_554 <= 5'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_fu_1007_p2 == 1'd0))) begin
        i7_0_reg_554 <= i_8_fu_1013_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i2_reg_485 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_823_p2 == 1'd0))) begin
        i_0_i2_reg_485 <= i_6_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_reg_462 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln51_fu_726_p2 == 1'd0))) begin
        i_0_i_reg_462 <= i_5_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_404 <= i_reg_1132;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_404 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
        j8_0_reg_565 <= 6'd16;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_fu_1007_p2 == 1'd0))) begin
        j8_0_reg_565 <= j_4_fu_1029_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
        j_0_reg_519 <= 6'd16;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln273_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_0_reg_519 <= j_fu_941_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        op2_assign_reg_473 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1264_pp1_iter3_reg == 1'd0))) begin
        op2_assign_reg_473 <= tmp_1_reg_1304;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
        p_0160_0_reg_542 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379_pp3_iter3_reg == 1'd0))) begin
        p_0160_0_reg_542 <= trunc_ln858_9_reg_1420;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
        p_084_0_reg_496 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln273_reg_1323_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        p_084_0_reg_496 <= trunc_ln858_8_reg_1364;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        p_088_0_i_reg_450 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln51_reg_1208_pp0_iter3_reg == 1'd0))) begin
        p_088_0_i_reg_450 <= trunc_ln_reg_1254;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln269_reg_1319 == 1'd0))) begin
        res_tmp_bits_0_reg_530 <= p_084_0_reg_496;
    end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (icmp_ln269_fu_914_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        res_tmp_bits_0_reg_530 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        res_tmp_bits_1_reg_576 <= add_ln295_fu_1090_p2;
    end else if (((icmp_ln283_fu_1002_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        res_tmp_bits_1_reg_576 <= zext_ln283_fu_998_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1264 == 1'd0))) begin
        add2_digits_data_V_l_reg_1293 <= add2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379_pp3_iter2_reg == 1'd0))) begin
        add_ln209_5_reg_1415 <= add_ln209_5_fu_1071_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln51_reg_1208_pp0_iter2_reg == 1'd0))) begin
        add_ln209_6_reg_1249 <= add_ln209_6_fu_778_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_reg_1323_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln209_reg_1359 <= add_ln209_fu_983_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379_pp3_iter1_reg == 1'd0))) begin
        add_ln700_10_reg_1410 <= add_ln700_10_fu_1042_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1264_pp1_iter2_reg == 1'd0))) begin
        add_ln700_7_reg_1309 <= add_ln700_7_fu_885_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln273_reg_1323_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln700_8_reg_1354 <= add_ln700_8_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln51_reg_1208_pp0_iter1_reg == 1'd0))) begin
        add_ln700_reg_1244 <= add_ln700_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1264 == 1'd0))) begin
        cross_mul_digits_dat_2_reg_1288 <= cross_mul_digits_dat_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_1264 <= exitcond_i_fu_823_p2;
        exitcond_i_reg_1264_pp1_iter1_reg <= exitcond_i_reg_1264;
        zext_ln77_reg_1273_pp1_iter1_reg[4 : 0] <= zext_ln77_reg_1273[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_reg_1264_pp1_iter2_reg <= exitcond_i_reg_1264_pp1_iter1_reg;
        exitcond_i_reg_1264_pp1_iter3_reg <= exitcond_i_reg_1264_pp1_iter2_reg;
        zext_ln77_reg_1273_pp1_iter2_reg[4 : 0] <= zext_ln77_reg_1273_pp1_iter1_reg[4 : 0];
        zext_ln77_reg_1273_pp1_iter3_reg[4 : 0] <= zext_ln77_reg_1273_pp1_iter2_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_2_reg_1151 <= i_2_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_3_reg_1164 <= i_3_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_4_reg_1183 <= i_4_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1132 <= i_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        icmp_ln269_reg_1319 <= icmp_ln269_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln273_reg_1323 <= icmp_ln273_fu_919_p2;
        icmp_ln273_reg_1323_pp2_iter1_reg <= icmp_ln273_reg_1323;
        res_digits_data_V_ad_reg_1337_pp2_iter1_reg <= res_digits_data_V_ad_reg_1337;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln273_reg_1323_pp2_iter2_reg <= icmp_ln273_reg_1323_pp2_iter1_reg;
        icmp_ln273_reg_1323_pp2_iter3_reg <= icmp_ln273_reg_1323_pp2_iter2_reg;
        lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg <= lhs_digits_data_V_lo_2_reg_1348;
        reg_626_pp2_iter2_reg <= reg_626;
        res_digits_data_V_ad_reg_1337_pp2_iter2_reg <= res_digits_data_V_ad_reg_1337_pp2_iter1_reg;
        res_digits_data_V_ad_reg_1337_pp2_iter3_reg <= res_digits_data_V_ad_reg_1337_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln287_reg_1379 <= icmp_ln287_fu_1007_p2;
        icmp_ln287_reg_1379_pp3_iter1_reg <= icmp_ln287_reg_1379;
        res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg <= res_digits_data_V_ad_1_reg_1393;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln287_reg_1379_pp3_iter2_reg <= icmp_ln287_reg_1379_pp3_iter1_reg;
        icmp_ln287_reg_1379_pp3_iter3_reg <= icmp_ln287_reg_1379_pp3_iter2_reg;
        reg_626_pp3_iter2_reg <= reg_626;
        res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg <= res_digits_data_V_ad_1_reg_1393_pp3_iter1_reg;
        res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg <= res_digits_data_V_ad_1_reg_1393_pp3_iter2_reg;
        rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg <= rhs_digits_data_V_lo_2_reg_1404;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln51_reg_1208 <= icmp_ln51_fu_726_p2;
        icmp_ln51_reg_1208_pp0_iter1_reg <= icmp_ln51_reg_1208;
        zext_ln56_reg_1217_pp0_iter1_reg[4 : 0] <= zext_ln56_reg_1217[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln51_reg_1208_pp0_iter2_reg <= icmp_ln51_reg_1208_pp0_iter1_reg;
        icmp_ln51_reg_1208_pp0_iter3_reg <= icmp_ln51_reg_1208_pp0_iter2_reg;
        z0_digits_data_V_loa_reg_1232_pp0_iter2_reg <= z0_digits_data_V_loa_reg_1232;
        z2_digits_data_V_loa_reg_1238_pp0_iter2_reg <= z2_digits_data_V_loa_reg_1238;
        zext_ln56_reg_1217_pp0_iter2_reg[4 : 0] <= zext_ln56_reg_1217_pp0_iter1_reg[4 : 0];
        zext_ln56_reg_1217_pp0_iter3_reg[4 : 0] <= zext_ln56_reg_1217_pp0_iter2_reg[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_reg_1323 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lhs_digits_data_V_lo_2_reg_1348 <= lhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_reg_1323 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379 == 1'd0)))) begin
        reg_626 <= res_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_fu_1007_p2 == 1'd0))) begin
        res_digits_data_V_ad_1_reg_1393 <= zext_ln291_fu_1024_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_fu_919_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        res_digits_data_V_ad_reg_1337 <= zext_ln277_fu_936_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        res_tmp_bits_write_a_1_reg_1198 <= grp_mul_I_O_fu_605_ap_return;
        res_tmp_bits_write_a_reg_1193 <= grp_mul_I_O_fu_594_ap_return;
        zext_ln257_reg_1203[3 : 0] <= zext_ln257_fu_722_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379 == 1'd0))) begin
        rhs_digits_data_V_lo_2_reg_1404 <= rhs_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_i_reg_1264_pp1_iter2_reg == 1'd0))) begin
        tmp_1_reg_1304 <= tmp_V_4_fu_872_p2[32'd64];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1264_pp1_iter1_reg == 1'd0))) begin
        tmp_V_3_reg_1298 <= tmp_V_3_fu_847_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln273_reg_1323_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln858_8_reg_1364 <= {{tmp_V_fu_971_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379_pp3_iter2_reg == 1'd0))) begin
        trunc_ln858_9_reg_1420 <= {{tmp_V_5_fu_1059_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln51_reg_1208_pp0_iter2_reg == 1'd0))) begin
        trunc_ln_reg_1254 <= {{tmp_V_2_fu_767_p2[65:64]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln51_reg_1208 == 1'd0))) begin
        z0_digits_data_V_loa_reg_1232 <= z0_digits_data_V_q0;
        z2_digits_data_V_loa_reg_1238 <= z2_digits_data_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        z1_tmp_bits_reg_1314 <= z1_tmp_bits_fu_908_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_630_p2 == 1'd0))) begin
        zext_ln246_reg_1137[3 : 0] <= zext_ln246_fu_642_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln248_fu_676_p2 == 1'd0))) begin
        zext_ln248_reg_1169[3 : 0] <= zext_ln248_fu_688_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        zext_ln283_reg_1369[1 : 0] <= zext_ln283_fu_998_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln51_fu_726_p2 == 1'd0))) begin
        zext_ln56_reg_1217[4 : 0] <= zext_ln56_fu_738_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        zext_ln61_4_reg_1259[5 : 0] <= zext_ln61_4_fu_819_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_823_p2 == 1'd0))) begin
        zext_ln77_reg_1273[4 : 0] <= zext_ln77_fu_835_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_V_address0 = zext_ln77_fu_835_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add2_digits_data_V_address0 = zext_ln56_reg_1217_pp0_iter3_reg;
    end else begin
        add2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        add2_digits_data_V_ce0 = 1'b1;
    end else begin
        add2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln51_reg_1208_pp0_iter3_reg == 1'd0))) begin
        add2_digits_data_V_we0 = 1'b1;
    end else begin
        add2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln51_fu_726_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_823_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln273_fu_919_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln287_fu_1007_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1264_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_op2_assign_phi_fu_477_p4 = tmp_1_reg_1304;
    end else begin
        ap_phi_mux_op2_assign_phi_fu_477_p4 = op2_assign_reg_473;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln287_reg_1379_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_0160_0_phi_fu_546_p4 = trunc_ln858_9_reg_1420;
    end else begin
        ap_phi_mux_p_0160_0_phi_fu_546_p4 = p_0160_0_reg_542;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln273_reg_1323_pp2_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_084_0_phi_fu_500_p4 = trunc_ln858_8_reg_1364;
    end else begin
        ap_phi_mux_p_084_0_phi_fu_500_p4 = p_084_0_reg_496;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln51_reg_1208_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_p_088_0_i_phi_fu_454_p4 = trunc_ln_reg_1254;
    end else begin
        ap_phi_mux_p_088_0_i_phi_fu_454_p4 = p_088_0_i_reg_450;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln269_reg_1319 == 1'd0))) begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4 = p_084_0_reg_496;
    end else begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4 = res_tmp_bits_0_reg_530;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_return = add_ln297_fu_1111_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_address0 = zext_ln77_fu_835_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_address0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_address0;
    end else begin
        cross_mul_digits_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce0;
    end else begin
        cross_mul_digits_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce1 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_ce1;
    end else begin
        cross_mul_digits_dat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we0;
    end else begin
        cross_mul_digits_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we1 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_V_we1;
    end else begin
        cross_mul_digits_dat_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_V_address0 = zext_ln246_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_V_address0 = grp_mul_I_O_fu_594_u_digits_data_V_address0;
    end else begin
        lhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_V_ce0 = grp_mul_I_O_fu_594_u_digits_data_V_ce0;
    end else begin
        lhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_V_we0 = 1'b1;
    end else begin
        lhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_address0 = zext_ln246_reg_1137;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_V_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_V_address0 = zext_ln247_fu_670_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_V_address0 = grp_mul_I_O_fu_605_u_digits_data_V_address0;
    end else begin
        lhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_V_ce0 = grp_mul_I_O_fu_605_u_digits_data_V_ce0;
    end else begin
        lhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_V_we0 = 1'b1;
    end else begin
        lhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_address0 = zext_ln247_fu_670_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_V_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        lhs_digits_data_V_address0 = zext_ln276_fu_931_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs_digits_data_V_address0 = zext_ln247_1_fu_665_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lhs_digits_data_V_address0 = zext_ln246_fu_642_p1;
    end else begin
        lhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        lhs_digits_data_V_ce0 = 1'b1;
    end else begin
        lhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        res_digits_data_V_address0 = zext_ln291_fu_1024_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        res_digits_data_V_address0 = zext_ln277_fu_936_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_address0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address0;
    end else begin
        res_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_V_address1 = res_digits_data_V_ad_1_reg_1393_pp3_iter3_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_V_address1 = res_digits_data_V_ad_reg_1337_pp2_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_address1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_address1;
    end else begin
        res_digits_data_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        res_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_ce0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce0;
    end else begin
        res_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_V_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_ce1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_ce1;
    end else begin
        res_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_V_d1 = add_ln209_5_reg_1415;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_V_d1 = add_ln209_reg_1359;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_d1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d1;
    end else begin
        res_digits_data_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_we0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we0;
    end else begin
        res_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln287_reg_1379_pp3_iter3_reg == 1'd0)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln273_reg_1323_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_V_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_V_we1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_we1;
    end else begin
        res_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_V_address0 = zext_ln248_reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_address0 = grp_mul_I_O_fu_594_v_digits_data_V_address0;
    end else begin
        rhs0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_V_ce0 = grp_mul_I_O_fu_594_v_digits_data_V_ce0;
    end else begin
        rhs0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_V_we0 = 1'b1;
    end else begin
        rhs0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_address0 = zext_ln248_reg_1169;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_V_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_V_address0 = zext_ln249_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_V_address0 = grp_mul_I_O_fu_605_v_digits_data_V_address0;
    end else begin
        rhs1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_V_ce0 = grp_mul_I_O_fu_605_v_digits_data_V_ce0;
    end else begin
        rhs1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_V_we0 = 1'b1;
    end else begin
        rhs1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_address0 = zext_ln249_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_V_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        rhs_digits_data_V_address0 = zext_ln290_fu_1019_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rhs_digits_data_V_address0 = zext_ln249_1_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rhs_digits_data_V_address0 = zext_ln248_fu_688_p1;
    end else begin
        rhs_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        rhs_digits_data_V_ce0 = 1'b1;
    end else begin
        rhs_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_address0 = zext_ln56_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z0_digits_data_V_address0 = grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_V_address0 = grp_mul_I_O_fu_594_w_digits_data_V_address0;
    end else begin
        z0_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z0_digits_data_V_ce0 = grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_V_ce0 = grp_mul_I_O_fu_594_w_digits_data_V_ce0;
    end else begin
        z0_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_V_ce1 = grp_mul_I_O_fu_594_w_digits_data_V_ce1;
    end else begin
        z0_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_V_we0 = grp_mul_I_O_fu_594_w_digits_data_V_we0;
    end else begin
        z0_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_V_we1 = grp_mul_I_O_fu_594_w_digits_data_V_we1;
    end else begin
        z0_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_address0 = zext_ln77_reg_1273_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z1_digits_data_V_address0 = grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_address0;
    end else begin
        z1_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z1_digits_data_V_ce0 = grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_V_ce0;
    end else begin
        z1_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1264_pp1_iter3_reg == 1'd0))) begin
        z1_digits_data_V_we0 = 1'b1;
    end else begin
        z1_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_address0 = zext_ln56_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z2_digits_data_V_address0 = grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_V_address0 = grp_mul_I_O_fu_605_w_digits_data_V_address0;
    end else begin
        z2_digits_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z2_digits_data_V_ce0 = grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_V_ce0 = grp_mul_I_O_fu_605_w_digits_data_V_ce0;
    end else begin
        z2_digits_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_V_ce1 = grp_mul_I_O_fu_605_w_digits_data_V_ce1;
    end else begin
        z2_digits_data_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_V_we0 = grp_mul_I_O_fu_605_w_digits_data_V_we0;
    end else begin
        z2_digits_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_V_we1 = grp_mul_I_O_fu_605_w_digits_data_V_we1;
    end else begin
        z2_digits_data_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln246_fu_630_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln247_fu_647_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln248_fu_676_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln249_fu_693_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln51_fu_726_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln51_fu_726_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_823_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_823_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln269_fu_914_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (icmp_ln269_fu_914_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln273_fu_919_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln273_fu_919_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln283_fu_1002_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln287_fu_1007_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln287_fu_1007_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_tmp_bits_fu_813_p2 = (zext_ln61_fu_793_p1 + zext_ln61_3_fu_809_p1);

assign add_ln209_5_fu_1071_p2 = (add_ln209_9_fu_1065_p2 + rhs_digits_data_V_lo_2_reg_1404_pp3_iter2_reg);

assign add_ln209_6_fu_778_p2 = (add_ln209_7_fu_773_p2 + z0_digits_data_V_loa_reg_1232_pp0_iter2_reg);

assign add_ln209_7_fu_773_p2 = (z2_digits_data_V_loa_reg_1238_pp0_iter2_reg + zext_ln700_9_fu_760_p1);

assign add_ln209_8_fu_977_p2 = (reg_626_pp2_iter2_reg + zext_ln700_12_fu_964_p1);

assign add_ln209_9_fu_1065_p2 = (reg_626_pp3_iter2_reg + zext_ln700_15_fu_1052_p1);

assign add_ln209_fu_983_p2 = (add_ln209_8_fu_977_p2 + lhs_digits_data_V_lo_2_reg_1348_pp2_iter2_reg);

assign add_ln295_fu_1090_p2 = (zext_ln283_reg_1369 + zext_ln295_fu_1086_p1);

assign add_ln297_fu_1111_p2 = (zext_ln297_fu_1095_p1 + mul_ln297_fu_1105_p2);

assign add_ln61_fu_803_p2 = (zext_ln61_2_fu_800_p1 + zext_ln61_1_fu_797_p1);

assign add_ln700_10_fu_1042_p2 = (zext_ln291_1_fu_1035_p1 + zext_ln700_14_fu_1038_p1);

assign add_ln700_7_fu_885_p2 = (trunc_ln701_fu_869_p1 + select_ln701_1_fu_861_p3);

assign add_ln700_8_fu_954_p2 = (zext_ln277_1_fu_947_p1 + zext_ln700_11_fu_950_p1);

assign add_ln700_fu_750_p2 = (zext_ln209_fu_744_p1 + zext_ln700_fu_747_p1);

assign add_ln92_fu_899_p2 = (empty_21_fu_891_p3 + zext_ln257_reg_1203);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_karastuba_mul_templa_2_fu_585_ap_done == 1'b0) | (grp_mul_I_O_fu_605_ap_done == 1'b0) | (grp_mul_I_O_fu_594_ap_done == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_21_fu_891_p3 = ((op2_assign_reg_473[0:0] === 1'b1) ? 5'd31 : 5'd0);

assign exitcond_i_fu_823_p2 = ((i_0_i2_reg_485 == 5'd16) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_2_fu_616_ap_start = grp_CAT_I_I_I_O_2_fu_616_ap_start_reg;

assign grp_karastuba_mul_templa_2_fu_585_ap_start = grp_karastuba_mul_templa_2_fu_585_ap_start_reg;

assign grp_mul_I_O_fu_594_ap_start = grp_mul_I_O_fu_594_ap_start_reg;

assign grp_mul_I_O_fu_605_ap_start = grp_mul_I_O_fu_605_ap_start_reg;

assign i_2_fu_653_p2 = (i1_0_reg_415 + 4'd1);

assign i_3_fu_682_p2 = (i2_0_reg_427 + 4'd1);

assign i_4_fu_699_p2 = (i3_0_reg_438 + 4'd1);

assign i_5_fu_732_p2 = (i_0_i_reg_462 + 5'd1);

assign i_6_fu_829_p2 = (i_0_i2_reg_485 + 5'd1);

assign i_7_fu_925_p2 = (i4_0_reg_508 + 5'd1);

assign i_8_fu_1013_p2 = (i7_0_reg_554 + 5'd1);

assign i_fu_636_p2 = (i_0_reg_404 + 4'd1);

assign icmp_ln246_fu_630_p2 = ((i_0_reg_404 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln247_fu_647_p2 = ((i1_0_reg_415 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_676_p2 = ((i2_0_reg_427 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln249_fu_693_p2 = ((i3_0_reg_438 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln269_fu_914_p2 = ((rhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln273_fu_919_p2 = ((i4_0_reg_508 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln283_fu_1002_p2 = ((lhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln287_fu_1007_p2 = ((i7_0_reg_554 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln51_fu_726_p2 = ((i_0_i_reg_462 == 5'd16) ? 1'b1 : 1'b0);

assign j_4_fu_1029_p2 = (j8_0_reg_565 + 6'd1);

assign j_fu_941_p2 = (j_0_reg_519 + 6'd1);

assign mul_ln297_fu_1105_p0 = mul_ln297_fu_1105_p00;

assign mul_ln297_fu_1105_p00 = rhs_tmp_bits_read;

assign mul_ln297_fu_1105_p1 = mul_ln297_fu_1105_p10;

assign mul_ln297_fu_1105_p10 = lhs_tmp_bits_read;

assign mul_ln297_fu_1105_p2 = (mul_ln297_fu_1105_p0 * mul_ln297_fu_1105_p1);

assign res_digits_data_V_d0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_V_d0;

assign select_ln701_1_fu_861_p3 = ((ap_phi_mux_op2_assign_phi_fu_477_p4[0:0] === 1'b1) ? 64'd18446744073709551615 : 64'd0);

assign select_ln701_fu_853_p3 = ((ap_phi_mux_op2_assign_phi_fu_477_p4[0:0] === 1'b1) ? 65'd36893488147419103231 : 65'd0);

assign sext_ln92_fu_904_p1 = $signed(add_ln92_fu_899_p2);

assign tmp_V_2_fu_767_p2 = (zext_ln700_10_fu_764_p1 + zext_ln51_fu_756_p1);

assign tmp_V_3_fu_847_p2 = (zext_ln180_fu_841_p1 - zext_ln701_fu_844_p1);

assign tmp_V_4_fu_872_p2 = (select_ln701_fu_853_p3 + tmp_V_3_reg_1298);

assign tmp_V_5_fu_1059_p2 = (zext_ln700_16_fu_1056_p1 + zext_ln287_fu_1048_p1);

assign tmp_V_fu_971_p2 = (zext_ln700_13_fu_968_p1 + zext_ln273_fu_960_p1);

assign trunc_ln701_fu_869_p1 = tmp_V_3_reg_1298[63:0];

assign xor_ln247_fu_659_p2 = (i1_0_reg_415 ^ 4'd8);

assign xor_ln249_fu_705_p2 = (i3_0_reg_438 ^ 4'd8);

assign z1_tmp_bits_fu_908_p2 = ($signed(sext_ln92_fu_904_p1) - $signed(zext_ln61_4_reg_1259));

assign zext_ln180_fu_841_p1 = cross_mul_digits_dat_2_reg_1288;

assign zext_ln209_fu_744_p1 = z0_digits_data_V_loa_reg_1232;

assign zext_ln246_fu_642_p1 = i_0_reg_404;

assign zext_ln247_1_fu_665_p1 = xor_ln247_fu_659_p2;

assign zext_ln247_fu_670_p1 = i1_0_reg_415;

assign zext_ln248_fu_688_p1 = i2_0_reg_427;

assign zext_ln249_1_fu_711_p1 = xor_ln249_fu_705_p2;

assign zext_ln249_fu_716_p1 = i3_0_reg_438;

assign zext_ln257_fu_722_p1 = grp_karastuba_mul_templa_2_fu_585_ap_return;

assign zext_ln273_fu_960_p1 = ap_phi_mux_p_084_0_phi_fu_500_p4;

assign zext_ln276_fu_931_p1 = i4_0_reg_508;

assign zext_ln277_1_fu_947_p1 = lhs_digits_data_V_lo_2_reg_1348;

assign zext_ln277_fu_936_p1 = j_0_reg_519;

assign zext_ln283_fu_998_p1 = ap_phi_mux_res_tmp_bits_0_phi_fu_534_p4;

assign zext_ln287_fu_1048_p1 = ap_phi_mux_p_0160_0_phi_fu_546_p4;

assign zext_ln290_fu_1019_p1 = i7_0_reg_554;

assign zext_ln291_1_fu_1035_p1 = rhs_digits_data_V_lo_2_reg_1404;

assign zext_ln291_fu_1024_p1 = j8_0_reg_565;

assign zext_ln295_fu_1086_p1 = p_0160_0_reg_542;

assign zext_ln297_fu_1095_p1 = res_tmp_bits_1_reg_576;

assign zext_ln51_fu_756_p1 = ap_phi_mux_p_088_0_i_phi_fu_454_p4;

assign zext_ln56_fu_738_p1 = i_0_i_reg_462;

assign zext_ln61_1_fu_797_p1 = res_tmp_bits_write_a_reg_1193;

assign zext_ln61_2_fu_800_p1 = res_tmp_bits_write_a_1_reg_1198;

assign zext_ln61_3_fu_809_p1 = add_ln61_fu_803_p2;

assign zext_ln61_4_fu_819_p1 = add2_tmp_bits_fu_813_p2;

assign zext_ln61_fu_793_p1 = p_088_0_i_reg_450;

assign zext_ln700_10_fu_764_p1 = add_ln700_reg_1244;

assign zext_ln700_11_fu_950_p1 = reg_626;

assign zext_ln700_12_fu_964_p1 = ap_phi_mux_p_084_0_phi_fu_500_p4;

assign zext_ln700_13_fu_968_p1 = add_ln700_8_reg_1354;

assign zext_ln700_14_fu_1038_p1 = reg_626;

assign zext_ln700_15_fu_1052_p1 = ap_phi_mux_p_0160_0_phi_fu_546_p4;

assign zext_ln700_16_fu_1056_p1 = add_ln700_10_reg_1410;

assign zext_ln700_9_fu_760_p1 = ap_phi_mux_p_088_0_i_phi_fu_454_p4;

assign zext_ln700_fu_747_p1 = z2_digits_data_V_loa_reg_1238;

assign zext_ln701_fu_844_p1 = add2_digits_data_V_l_reg_1293;

assign zext_ln77_fu_835_p1 = i_0_i2_reg_485;

always @ (posedge ap_clk) begin
    zext_ln246_reg_1137[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln248_reg_1169[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln257_reg_1203[4] <= 1'b0;
    zext_ln56_reg_1217[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_1217_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_1217_pp0_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln56_reg_1217_pp0_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln61_4_reg_1259[6] <= 1'b0;
    zext_ln77_reg_1273[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1273_pp1_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1273_pp1_iter2_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln77_reg_1273_pp1_iter3_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1369[2] <= 1'b0;
end

endmodule //karastuba_mul_templa_5
