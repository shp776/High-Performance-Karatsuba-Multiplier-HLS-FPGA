-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity karastuba_mul_templa_3 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    lhs_digits_data_V_ce0 : OUT STD_LOGIC;
    lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    rhs_digits_data_V_ce0 : OUT STD_LOGIC;
    rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_digits_data_V_ce0 : OUT STD_LOGIC;
    res_digits_data_V_we0 : OUT STD_LOGIC;
    res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
    res_digits_data_V_ce1 : OUT STD_LOGIC;
    res_digits_data_V_we1 : OUT STD_LOGIC;
    res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of karastuba_mul_templa_3 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (18 downto 0) := "0000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (18 downto 0) := "0000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (18 downto 0) := "0000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (18 downto 0) := "0000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (18 downto 0) := "0000010000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (18 downto 0) := "0001000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (18 downto 0) := "0010000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (18 downto 0) := "0100000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv65_1FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (64 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_088_0_i_reg_377 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_0_i_reg_389 : STD_LOGIC_VECTOR (6 downto 0);
    signal op2_assign_reg_400 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i1_reg_412 : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_464 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal reg_472 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_fu_486_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_reg_767 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln246_fu_492_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln246_reg_772 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln246_fu_480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_16_fu_503_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_16_reg_786 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln247_fu_497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_17_fu_532_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_17_reg_799 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln248_fu_538_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln248_reg_804 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln248_fu_526_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_18_fu_549_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_18_reg_818 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln249_fu_543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal z0_tmp_bits_reg_828 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_karastuba_mul_templa_4_fu_432_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_ap_done : STD_LOGIC;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal grp_karastuba_mul_templa_4_fu_443_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal z2_tmp_bits_reg_833 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln257_fu_572_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln257_reg_838 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln51_fu_576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_843 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state15_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln51_reg_843_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_843_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln51_reg_843_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_19_fu_582_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln56_fu_588_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_852 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_852_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_852_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln56_reg_852_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_867 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_867_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_873 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_873_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_fu_600_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_reg_879 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_fu_628_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_reg_884 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_889 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal zext_ln61_9_fu_669_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln61_9_reg_894 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal exitcond_i_fu_673_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_899 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state21_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_899_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_899_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_899_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_20_fu_679_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln77_fu_685_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_908 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_908_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_908_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln77_reg_908_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_6_reg_923 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_l_reg_928 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_V_10_fu_697_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_10_reg_933 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_reg_939 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal add_ln700_15_fu_735_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_15_reg_944 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_tmp_bits_fu_758_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal z1_tmp_bits_reg_949 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal lhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs0_digits_data_V_ce0 : STD_LOGIC;
    signal lhs0_digits_data_V_we0 : STD_LOGIC;
    signal lhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs1_digits_data_V_ce0 : STD_LOGIC;
    signal lhs1_digits_data_V_we0 : STD_LOGIC;
    signal lhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs0_digits_data_V_ce0 : STD_LOGIC;
    signal rhs0_digits_data_V_we0 : STD_LOGIC;
    signal rhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs1_digits_data_V_ce0 : STD_LOGIC;
    signal rhs1_digits_data_V_we0 : STD_LOGIC;
    signal rhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal lhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal rhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal z0_digits_data_V_ce0 : STD_LOGIC;
    signal z0_digits_data_V_we0 : STD_LOGIC;
    signal z0_digits_data_V_ce1 : STD_LOGIC;
    signal z0_digits_data_V_we1 : STD_LOGIC;
    signal z0_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal z2_digits_data_V_ce0 : STD_LOGIC;
    signal z2_digits_data_V_we0 : STD_LOGIC;
    signal z2_digits_data_V_ce1 : STD_LOGIC;
    signal z2_digits_data_V_we1 : STD_LOGIC;
    signal z2_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal cross_mul_digits_dat_ce0 : STD_LOGIC;
    signal cross_mul_digits_dat_we0 : STD_LOGIC;
    signal cross_mul_digits_dat_ce1 : STD_LOGIC;
    signal cross_mul_digits_dat_we1 : STD_LOGIC;
    signal cross_mul_digits_dat_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal add2_digits_data_V_ce0 : STD_LOGIC;
    signal add2_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal z1_digits_data_V_ce0 : STD_LOGIC;
    signal z1_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_fu_423_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_fu_423_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_ap_start : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_ap_done : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_ap_idle : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_ap_ready : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_0_reg_331 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i1_0_reg_342 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i2_0_reg_354 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i3_0_reg_365 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_phi_mux_p_088_0_i_phi_fu_381_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_op2_assign_phi_fu_404_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal grp_karastuba_mul_templa_fu_423_ap_start_reg : STD_LOGIC := '0';
    signal grp_karastuba_mul_templa_4_fu_432_ap_start_reg : STD_LOGIC := '0';
    signal grp_karastuba_mul_templa_4_fu_443_ap_start_reg : STD_LOGIC := '0';
    signal grp_CAT_I_I_I_O_fu_454_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal zext_ln247_1_fu_515_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln247_fu_520_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_1_fu_561_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln249_fu_566_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln247_fu_509_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal xor_ln249_fu_555_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln209_fu_594_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_fu_597_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_25_fu_614_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln51_fu_606_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_24_fu_610_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_13_fu_623_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_617_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln61_2_fu_650_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln61_1_fu_647_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln61_fu_653_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln61_fu_643_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln61_8_fu_659_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add2_tmp_bits_fu_663_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln180_fu_691_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln701_fu_694_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal select_ln701_fu_703_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_11_fu_722_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal trunc_ln701_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln701_3_fu_711_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_45_fu_741_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln92_fu_749_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln92_fu_754_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;

    component karastuba_mul_templa IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cross_mul_digits_data_V_ce0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        cross_mul_digits_data_V_ce1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component karastuba_mul_templa_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        lhs_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        rhs_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        res_digits_data_V_ce0 : OUT STD_LOGIC;
        res_digits_data_V_we0 : OUT STD_LOGIC;
        res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        res_digits_data_V_ce1 : OUT STD_LOGIC;
        res_digits_data_V_we1 : OUT STD_LOGIC;
        res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component CAT_I_I_I_O IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x0_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        x0_digits_data_V_ce0 : OUT STD_LOGIC;
        x0_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x1_tmp_bits_read : IN STD_LOGIC_VECTOR (6 downto 0);
        x1_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        x1_digits_data_V_ce0 : OUT STD_LOGIC;
        x1_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x2_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        x2_digits_data_V_ce0 : OUT STD_LOGIC;
        x2_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        w_digits_data_V_ce0 : OUT STD_LOGIC;
        w_digits_data_V_we0 : OUT STD_LOGIC;
        w_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (6 downto 0);
        w_digits_data_V_ce1 : OUT STD_LOGIC;
        w_digits_data_V_we1 : OUT STD_LOGIC;
        w_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temEe0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temQgW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temThq IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    lhs0_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_digits_data_V_address0,
        ce0 => lhs0_digits_data_V_ce0,
        we0 => lhs0_digits_data_V_we0,
        d0 => reg_464,
        q0 => lhs0_digits_data_V_q0);

    lhs1_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_digits_data_V_address0,
        ce0 => lhs1_digits_data_V_ce0,
        we0 => lhs1_digits_data_V_we0,
        d0 => reg_464,
        q0 => lhs1_digits_data_V_q0);

    rhs0_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_digits_data_V_address0,
        ce0 => rhs0_digits_data_V_ce0,
        we0 => rhs0_digits_data_V_we0,
        d0 => reg_472,
        q0 => rhs0_digits_data_V_q0);

    rhs1_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_digits_data_V_address0,
        ce0 => rhs1_digits_data_V_ce0,
        we0 => rhs1_digits_data_V_we0,
        d0 => reg_472,
        q0 => rhs1_digits_data_V_q0);

    lhs0_tmp_digits_data_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_tmp_digits_data_address0,
        ce0 => lhs0_tmp_digits_data_ce0,
        we0 => lhs0_tmp_digits_data_we0,
        d0 => reg_464,
        q0 => lhs0_tmp_digits_data_q0);

    lhs1_tmp_digits_data_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_tmp_digits_data_address0,
        ce0 => lhs1_tmp_digits_data_ce0,
        we0 => lhs1_tmp_digits_data_we0,
        d0 => reg_464,
        q0 => lhs1_tmp_digits_data_q0);

    rhs0_tmp_digits_data_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_tmp_digits_data_address0,
        ce0 => rhs0_tmp_digits_data_ce0,
        we0 => rhs0_tmp_digits_data_we0,
        d0 => reg_472,
        q0 => rhs0_tmp_digits_data_q0);

    rhs1_tmp_digits_data_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_tmp_digits_data_address0,
        ce0 => rhs1_tmp_digits_data_ce0,
        we0 => rhs1_tmp_digits_data_we0,
        d0 => reg_472,
        q0 => rhs1_tmp_digits_data_q0);

    z0_digits_data_V_U : component karastuba_mul_temQgW
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z0_digits_data_V_address0,
        ce0 => z0_digits_data_V_ce0,
        we0 => z0_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0,
        q0 => z0_digits_data_V_q0,
        address1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1,
        ce1 => z0_digits_data_V_ce1,
        we1 => z0_digits_data_V_we1,
        d1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1,
        q1 => z0_digits_data_V_q1);

    z2_digits_data_V_U : component karastuba_mul_temQgW
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z2_digits_data_V_address0,
        ce0 => z2_digits_data_V_ce0,
        we0 => z2_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0,
        q0 => z2_digits_data_V_q0,
        address1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1,
        ce1 => z2_digits_data_V_ce1,
        we1 => z2_digits_data_V_we1,
        d1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1,
        q1 => z2_digits_data_V_q1);

    cross_mul_digits_dat_U : component karastuba_mul_temQgW
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cross_mul_digits_dat_address0,
        ce0 => cross_mul_digits_dat_ce0,
        we0 => cross_mul_digits_dat_we0,
        d0 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0,
        q0 => cross_mul_digits_dat_q0,
        address1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1,
        ce1 => cross_mul_digits_dat_ce1,
        we1 => cross_mul_digits_dat_we1,
        d1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1,
        q1 => cross_mul_digits_dat_q1);

    add2_digits_data_V_U : component karastuba_mul_temThq
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => add2_digits_data_V_address0,
        ce0 => add2_digits_data_V_ce0,
        we0 => add2_digits_data_V_we0,
        d0 => add_ln209_reg_884,
        q0 => add2_digits_data_V_q0);

    z1_digits_data_V_U : component karastuba_mul_temThq
    generic map (
        DataWidth => 64,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z1_digits_data_V_address0,
        ce0 => z1_digits_data_V_ce0,
        we0 => z1_digits_data_V_we0,
        d0 => add_ln700_15_reg_944,
        q0 => z1_digits_data_V_q0);

    grp_karastuba_mul_templa_fu_423 : component karastuba_mul_templa
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_fu_423_ap_start,
        ap_done => grp_karastuba_mul_templa_fu_423_ap_done,
        ap_idle => grp_karastuba_mul_templa_fu_423_ap_idle,
        ap_ready => grp_karastuba_mul_templa_fu_423_ap_ready,
        lhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0,
        lhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0,
        lhs0_tmp_digits_data_V_q0 => lhs0_tmp_digits_data_q0,
        lhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0,
        lhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0,
        lhs1_tmp_digits_data_V_q0 => lhs1_tmp_digits_data_q0,
        rhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0,
        rhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0,
        rhs0_tmp_digits_data_V_q0 => rhs0_tmp_digits_data_q0,
        rhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0,
        rhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0,
        rhs1_tmp_digits_data_V_q0 => rhs1_tmp_digits_data_q0,
        cross_mul_digits_data_V_address0 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_we0 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0,
        cross_mul_digits_data_V_d0 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d0,
        cross_mul_digits_data_V_q0 => cross_mul_digits_dat_q0,
        cross_mul_digits_data_V_address1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address1,
        cross_mul_digits_data_V_ce1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1,
        cross_mul_digits_data_V_we1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1,
        cross_mul_digits_data_V_d1 => grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_d1,
        cross_mul_digits_data_V_q1 => cross_mul_digits_dat_q1,
        ap_return => grp_karastuba_mul_templa_fu_423_ap_return);

    grp_karastuba_mul_templa_4_fu_432 : component karastuba_mul_templa_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_4_fu_432_ap_start,
        ap_done => grp_karastuba_mul_templa_4_fu_432_ap_done,
        ap_idle => grp_karastuba_mul_templa_4_fu_432_ap_idle,
        ap_ready => grp_karastuba_mul_templa_4_fu_432_ap_ready,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0 => lhs0_digits_data_V_q0,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0 => rhs0_digits_data_V_q0,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d0,
        res_digits_data_V_q0 => z0_digits_data_V_q0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_d1,
        res_digits_data_V_q1 => z0_digits_data_V_q1,
        ap_return => grp_karastuba_mul_templa_4_fu_432_ap_return);

    grp_karastuba_mul_templa_4_fu_443 : component karastuba_mul_templa_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_4_fu_443_ap_start,
        ap_done => grp_karastuba_mul_templa_4_fu_443_ap_done,
        ap_idle => grp_karastuba_mul_templa_4_fu_443_ap_idle,
        ap_ready => grp_karastuba_mul_templa_4_fu_443_ap_ready,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0 => lhs1_digits_data_V_q0,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0 => rhs1_digits_data_V_q0,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d0,
        res_digits_data_V_q0 => z2_digits_data_V_q0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_d1,
        res_digits_data_V_q1 => z2_digits_data_V_q1,
        ap_return => grp_karastuba_mul_templa_4_fu_443_ap_return);

    grp_CAT_I_I_I_O_fu_454 : component CAT_I_I_I_O
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_CAT_I_I_I_O_fu_454_ap_start,
        ap_done => grp_CAT_I_I_I_O_fu_454_ap_done,
        ap_idle => grp_CAT_I_I_I_O_fu_454_ap_idle,
        ap_ready => grp_CAT_I_I_I_O_fu_454_ap_ready,
        x0_digits_data_V_address0 => grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0,
        x0_digits_data_V_ce0 => grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0,
        x0_digits_data_V_q0 => z0_digits_data_V_q0,
        x1_tmp_bits_read => z1_tmp_bits_reg_949,
        x1_digits_data_V_address0 => grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0,
        x1_digits_data_V_ce0 => grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0,
        x1_digits_data_V_q0 => z1_digits_data_V_q0,
        x2_digits_data_V_address0 => grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0,
        x2_digits_data_V_ce0 => grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0,
        x2_digits_data_V_q0 => z2_digits_data_V_q0,
        w_digits_data_V_address0 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0,
        w_digits_data_V_ce0 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0,
        w_digits_data_V_we0 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0,
        w_digits_data_V_d0 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0,
        w_digits_data_V_q0 => res_digits_data_V_q0,
        w_digits_data_V_address1 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1,
        w_digits_data_V_ce1 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1,
        w_digits_data_V_we1 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1,
        w_digits_data_V_d1 => grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1,
        w_digits_data_V_q1 => res_digits_data_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state15)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state15);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_CAT_I_I_I_O_fu_454_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_CAT_I_I_I_O_fu_454_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_CAT_I_I_I_O_fu_454_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_CAT_I_I_I_O_fu_454_ap_ready = ap_const_logic_1)) then 
                    grp_CAT_I_I_I_O_fu_454_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_4_fu_432_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln249_fu_543_p2 = ap_const_lv1_1))) then 
                    grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_4_fu_432_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_4_fu_432_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_4_fu_443_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln249_fu_543_p2 = ap_const_lv1_1))) then 
                    grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_4_fu_443_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_4_fu_443_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_fu_423_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_fu_423_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln249_fu_543_p2 = ap_const_lv1_1))) then 
                    grp_karastuba_mul_templa_fu_423_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_fu_423_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_fu_423_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_480_p2 = ap_const_lv1_1))) then 
                i1_0_reg_342 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i1_0_reg_342 <= i_16_reg_786;
            end if; 
        end if;
    end process;

    i2_0_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln247_fu_497_p2 = ap_const_lv1_1))) then 
                i2_0_reg_354 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i2_0_reg_354 <= i_17_reg_799;
            end if; 
        end if;
    end process;

    i3_0_reg_365_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln248_fu_526_p2 = ap_const_lv1_1))) then 
                i3_0_reg_365 <= ap_const_lv6_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i3_0_reg_365 <= i_18_reg_818;
            end if; 
        end if;
    end process;

    i_0_i1_reg_412_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_0_i1_reg_412 <= ap_const_lv7_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_673_p2 = ap_const_lv1_0))) then 
                i_0_i1_reg_412 <= i_20_fu_679_p2;
            end if; 
        end if;
    end process;

    i_0_i_reg_389_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then 
                i_0_i_reg_389 <= ap_const_lv7_0;
            elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_fu_576_p2 = ap_const_lv1_0))) then 
                i_0_i_reg_389 <= i_19_fu_582_p2;
            end if; 
        end if;
    end process;

    i_0_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_reg_331 <= i_reg_767;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_331 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    op2_assign_reg_400_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                op2_assign_reg_400 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_899_pp1_iter3_reg = ap_const_lv1_0))) then 
                op2_assign_reg_400 <= tmp_reg_939;
            end if; 
        end if;
    end process;

    p_088_0_i_reg_377_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then 
                p_088_0_i_reg_377 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843_pp0_iter3_reg = ap_const_lv1_0))) then 
                p_088_0_i_reg_377 <= trunc_ln_reg_889;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_899 = ap_const_lv1_0))) then
                add2_digits_data_V_l_reg_928 <= add2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843_pp0_iter2_reg = ap_const_lv1_0))) then
                add_ln209_reg_884 <= add_ln209_fu_628_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_899_pp1_iter2_reg = ap_const_lv1_0))) then
                add_ln700_15_reg_944 <= add_ln700_15_fu_735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln700_reg_879 <= add_ln700_fu_600_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_899 = ap_const_lv1_0))) then
                cross_mul_digits_dat_6_reg_923 <= cross_mul_digits_dat_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_i_reg_899 <= exitcond_i_fu_673_p2;
                exitcond_i_reg_899_pp1_iter1_reg <= exitcond_i_reg_899;
                    zext_ln77_reg_908_pp1_iter1_reg(6 downto 0) <= zext_ln77_reg_908(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_i_reg_899_pp1_iter2_reg <= exitcond_i_reg_899_pp1_iter1_reg;
                exitcond_i_reg_899_pp1_iter3_reg <= exitcond_i_reg_899_pp1_iter2_reg;
                    zext_ln77_reg_908_pp1_iter2_reg(6 downto 0) <= zext_ln77_reg_908_pp1_iter1_reg(6 downto 0);
                    zext_ln77_reg_908_pp1_iter3_reg(6 downto 0) <= zext_ln77_reg_908_pp1_iter2_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_16_reg_786 <= i_16_fu_503_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_17_reg_799 <= i_17_fu_532_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_18_reg_818 <= i_18_fu_549_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_767 <= i_fu_486_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln51_reg_843 <= icmp_ln51_fu_576_p2;
                icmp_ln51_reg_843_pp0_iter1_reg <= icmp_ln51_reg_843;
                    zext_ln56_reg_852_pp0_iter1_reg(6 downto 0) <= zext_ln56_reg_852(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln51_reg_843_pp0_iter2_reg <= icmp_ln51_reg_843_pp0_iter1_reg;
                icmp_ln51_reg_843_pp0_iter3_reg <= icmp_ln51_reg_843_pp0_iter2_reg;
                z0_digits_data_V_loa_reg_867_pp0_iter2_reg <= z0_digits_data_V_loa_reg_867;
                z2_digits_data_V_loa_reg_873_pp0_iter2_reg <= z2_digits_data_V_loa_reg_873;
                    zext_ln56_reg_852_pp0_iter2_reg(6 downto 0) <= zext_ln56_reg_852_pp0_iter1_reg(6 downto 0);
                    zext_ln56_reg_852_pp0_iter3_reg(6 downto 0) <= zext_ln56_reg_852_pp0_iter2_reg(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state3))) then
                reg_464 <= lhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                reg_472 <= rhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_899_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_V_10_reg_933 <= tmp_V_10_fu_697_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_i_reg_899_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_reg_939 <= tmp_V_11_fu_722_p2(64 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843_pp0_iter2_reg = ap_const_lv1_0))) then
                trunc_ln_reg_889 <= tmp_V_fu_617_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843 = ap_const_lv1_0))) then
                z0_digits_data_V_loa_reg_867 <= z0_digits_data_V_q0;
                z2_digits_data_V_loa_reg_873 <= z2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then
                z0_tmp_bits_reg_828 <= grp_karastuba_mul_templa_4_fu_432_ap_return;
                z2_tmp_bits_reg_833 <= grp_karastuba_mul_templa_4_fu_443_ap_return;
                    zext_ln257_reg_838(3 downto 0) <= zext_ln257_fu_572_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                z1_tmp_bits_reg_949 <= z1_tmp_bits_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_480_p2 = ap_const_lv1_0))) then
                    zext_ln246_reg_772(5 downto 0) <= zext_ln246_fu_492_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln248_fu_526_p2 = ap_const_lv1_0))) then
                    zext_ln248_reg_804(5 downto 0) <= zext_ln248_fu_538_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_fu_576_p2 = ap_const_lv1_0))) then
                    zext_ln56_reg_852(6 downto 0) <= zext_ln56_fu_588_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    zext_ln61_9_reg_894(5 downto 0) <= zext_ln61_9_fu_669_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_673_p2 = ap_const_lv1_0))) then
                    zext_ln77_reg_908(6 downto 0) <= zext_ln77_fu_685_p1(6 downto 0);
            end if;
        end if;
    end process;
    zext_ln246_reg_772(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln248_reg_804(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln257_reg_838(4) <= '0';
    zext_ln56_reg_852(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_852_pp0_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_852_pp0_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln56_reg_852_pp0_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln61_9_reg_894(6) <= '0';
    zext_ln77_reg_908(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_908_pp1_iter1_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_908_pp1_iter2_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    zext_ln77_reg_908_pp1_iter3_reg(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln246_fu_480_p2, ap_CS_fsm_state5, icmp_ln247_fu_497_p2, ap_CS_fsm_state8, icmp_ln248_fu_526_p2, ap_CS_fsm_state11, icmp_ln249_fu_543_p2, ap_CS_fsm_state14, ap_block_state14_on_subcall_done, icmp_ln51_fu_576_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, exitcond_i_fu_673_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_fu_454_ap_done, ap_CS_fsm_state27)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln246_fu_480_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln247_fu_497_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln248_fu_526_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln249_fu_543_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state14 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state14) and (ap_const_boolean_0 = ap_block_state14_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln51_fu_576_p2 = ap_const_lv1_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln51_fu_576_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_673_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_673_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_CAT_I_I_I_O_fu_454_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    add2_digits_data_V_address0_assign_proc : process(zext_ln56_reg_852_pp0_iter3_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln77_fu_685_p1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            add2_digits_data_V_address0 <= zext_ln77_fu_685_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            add2_digits_data_V_address0 <= zext_ln56_reg_852_pp0_iter3_reg(6 - 1 downto 0);
        else 
            add2_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    add2_digits_data_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            add2_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    add2_digits_data_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln51_reg_843_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln51_reg_843_pp0_iter3_reg = ap_const_lv1_0))) then 
            add2_digits_data_V_we0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add2_tmp_bits_fu_663_p2 <= std_logic_vector(unsigned(zext_ln61_fu_643_p1) + unsigned(zext_ln61_8_fu_659_p1));
    add_ln209_13_fu_623_p2 <= std_logic_vector(unsigned(z2_digits_data_V_loa_reg_873_pp0_iter2_reg) + unsigned(zext_ln700_24_fu_610_p1));
    add_ln209_fu_628_p2 <= std_logic_vector(unsigned(add_ln209_13_fu_623_p2) + unsigned(z0_digits_data_V_loa_reg_867_pp0_iter2_reg));
    add_ln61_fu_653_p2 <= std_logic_vector(unsigned(zext_ln61_2_fu_650_p1) + unsigned(zext_ln61_1_fu_647_p1));
    add_ln700_15_fu_735_p2 <= std_logic_vector(unsigned(trunc_ln701_fu_719_p1) + unsigned(select_ln701_3_fu_711_p3));
    add_ln700_fu_600_p2 <= std_logic_vector(unsigned(zext_ln209_fu_594_p1) + unsigned(zext_ln700_fu_597_p1));
    add_ln92_fu_749_p2 <= std_logic_vector(unsigned(empty_45_fu_741_p3) + unsigned(zext_ln257_reg_838));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15);
    ap_CS_fsm_state26 <= ap_CS_fsm(17);
    ap_CS_fsm_state27 <= ap_CS_fsm(18);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_on_subcall_done_assign_proc : process(grp_karastuba_mul_templa_4_fu_432_ap_done, grp_karastuba_mul_templa_4_fu_443_ap_done, grp_karastuba_mul_templa_fu_423_ap_done)
    begin
                ap_block_state14_on_subcall_done <= ((grp_karastuba_mul_templa_fu_423_ap_done = ap_const_logic_0) or (grp_karastuba_mul_templa_4_fu_443_ap_done = ap_const_logic_0) or (grp_karastuba_mul_templa_4_fu_432_ap_done = ap_const_logic_0));
    end process;

        ap_block_state15_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state15_assign_proc : process(icmp_ln51_fu_576_p2)
    begin
        if ((icmp_ln51_fu_576_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state21_assign_proc : process(exitcond_i_fu_673_p2)
    begin
        if ((exitcond_i_fu_673_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_CAT_I_I_I_O_fu_454_ap_done, ap_CS_fsm_state27)
    begin
        if ((((grp_CAT_I_I_I_O_fu_454_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_op2_assign_phi_fu_404_p4_assign_proc : process(op2_assign_reg_400, exitcond_i_reg_899_pp1_iter3_reg, tmp_reg_939, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_899_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_op2_assign_phi_fu_404_p4 <= tmp_reg_939;
        else 
            ap_phi_mux_op2_assign_phi_fu_404_p4 <= op2_assign_reg_400;
        end if; 
    end process;


    ap_phi_mux_p_088_0_i_phi_fu_381_p4_assign_proc : process(p_088_0_i_reg_377, icmp_ln51_reg_843_pp0_iter3_reg, trunc_ln_reg_889, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln51_reg_843_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_088_0_i_phi_fu_381_p4 <= trunc_ln_reg_889;
        else 
            ap_phi_mux_p_088_0_i_phi_fu_381_p4 <= p_088_0_i_reg_377;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_CAT_I_I_I_O_fu_454_ap_done, ap_CS_fsm_state27)
    begin
        if (((grp_CAT_I_I_I_O_fu_454_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln77_fu_685_p1, grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_address0 <= zext_ln77_fu_685_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_address0 <= grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_address0;
        else 
            cross_mul_digits_dat_address0 <= "XXXXXX";
        end if; 
    end process;


    cross_mul_digits_dat_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_ce0 <= grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce0;
        else 
            cross_mul_digits_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_ce1 <= grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_ce1;
        else 
            cross_mul_digits_dat_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_we0 <= grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we0;
        else 
            cross_mul_digits_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_we1 <= grp_karastuba_mul_templa_fu_423_cross_mul_digits_data_V_we1;
        else 
            cross_mul_digits_dat_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_45_fu_741_p3 <= 
        ap_const_lv5_1F when (op2_assign_reg_400(0) = '1') else 
        ap_const_lv5_0;
    exitcond_i_fu_673_p2 <= "1" when (i_0_i1_reg_412 = ap_const_lv7_40) else "0";
    grp_CAT_I_I_I_O_fu_454_ap_start <= grp_CAT_I_I_I_O_fu_454_ap_start_reg;
    grp_karastuba_mul_templa_4_fu_432_ap_start <= grp_karastuba_mul_templa_4_fu_432_ap_start_reg;
    grp_karastuba_mul_templa_4_fu_443_ap_start <= grp_karastuba_mul_templa_4_fu_443_ap_start_reg;
    grp_karastuba_mul_templa_fu_423_ap_start <= grp_karastuba_mul_templa_fu_423_ap_start_reg;
    i_16_fu_503_p2 <= std_logic_vector(unsigned(i1_0_reg_342) + unsigned(ap_const_lv6_1));
    i_17_fu_532_p2 <= std_logic_vector(unsigned(i2_0_reg_354) + unsigned(ap_const_lv6_1));
    i_18_fu_549_p2 <= std_logic_vector(unsigned(i3_0_reg_365) + unsigned(ap_const_lv6_1));
    i_19_fu_582_p2 <= std_logic_vector(unsigned(i_0_i_reg_389) + unsigned(ap_const_lv7_1));
    i_20_fu_679_p2 <= std_logic_vector(unsigned(i_0_i1_reg_412) + unsigned(ap_const_lv7_1));
    i_fu_486_p2 <= std_logic_vector(unsigned(i_0_reg_331) + unsigned(ap_const_lv6_1));
    icmp_ln246_fu_480_p2 <= "1" when (i_0_reg_331 = ap_const_lv6_20) else "0";
    icmp_ln247_fu_497_p2 <= "1" when (i1_0_reg_342 = ap_const_lv6_20) else "0";
    icmp_ln248_fu_526_p2 <= "1" when (i2_0_reg_354 = ap_const_lv6_20) else "0";
    icmp_ln249_fu_543_p2 <= "1" when (i3_0_reg_365 = ap_const_lv6_20) else "0";
    icmp_ln51_fu_576_p2 <= "1" when (i_0_i_reg_389 = ap_const_lv7_40) else "0";

    lhs0_digits_data_V_address0_assign_proc : process(zext_ln246_reg_772, ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_address0 <= zext_ln246_reg_772(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_address0;
        else 
            lhs0_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    lhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_432_lhs_digits_data_V_ce0;
        else 
            lhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_address0_assign_proc : process(zext_ln246_reg_772, ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_address0 <= zext_ln246_reg_772(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_address0;
        else 
            lhs0_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    lhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_423_lhs0_tmp_digits_data_V_ce0;
        else 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0, ap_CS_fsm_state7, zext_ln247_fu_520_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_address0 <= zext_ln247_fu_520_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_address0;
        else 
            lhs1_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    lhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_443_lhs_digits_data_V_ce0;
        else 
            lhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0, ap_CS_fsm_state7, zext_ln247_fu_520_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_address0 <= zext_ln247_fu_520_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_address0;
        else 
            lhs1_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    lhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_423_lhs1_tmp_digits_data_V_ce0;
        else 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state2, zext_ln246_fu_492_p1, ap_CS_fsm_state5, zext_ln247_1_fu_515_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs_digits_data_V_address0 <= zext_ln247_1_fu_515_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lhs_digits_data_V_address0 <= zext_ln246_fu_492_p1(6 - 1 downto 0);
        else 
            lhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    lhs_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            lhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            lhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    res_digits_data_V_address0 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address0;
    res_digits_data_V_address1 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_address1;
    res_digits_data_V_ce0 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce0;
    res_digits_data_V_ce1 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_ce1;
    res_digits_data_V_d0 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d0;
    res_digits_data_V_d1 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_d1;
    res_digits_data_V_we0 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we0;
    res_digits_data_V_we1 <= grp_CAT_I_I_I_O_fu_454_w_digits_data_V_we1;

    rhs0_digits_data_V_address0_assign_proc : process(zext_ln248_reg_804, ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_address0 <= zext_ln248_reg_804(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_address0;
        else 
            rhs0_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    rhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_432_rhs_digits_data_V_ce0;
        else 
            rhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_address0_assign_proc : process(zext_ln248_reg_804, ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_address0 <= zext_ln248_reg_804(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_address0;
        else 
            rhs0_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    rhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_423_rhs0_tmp_digits_data_V_ce0;
        else 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0, ap_CS_fsm_state13, zext_ln249_fu_566_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_address0 <= zext_ln249_fu_566_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_address0;
        else 
            rhs1_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    rhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_443_rhs_digits_data_V_ce0;
        else 
            rhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0, ap_CS_fsm_state13, zext_ln249_fu_566_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_address0 <= zext_ln249_fu_566_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_address0;
        else 
            rhs1_tmp_digits_data_address0 <= "XXXXX";
        end if; 
    end process;


    rhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_fu_423_rhs1_tmp_digits_data_V_ce0;
        else 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state8, zext_ln248_fu_538_p1, ap_CS_fsm_state11, zext_ln249_1_fu_561_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rhs_digits_data_V_address0 <= zext_ln249_1_fu_561_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rhs_digits_data_V_address0 <= zext_ln248_fu_538_p1(6 - 1 downto 0);
        else 
            rhs_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    rhs_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state8, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            rhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            rhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln701_3_fu_711_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_404_p4(0) = '1') else 
        ap_const_lv64_0;
    select_ln701_fu_703_p3 <= 
        ap_const_lv65_1FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_404_p4(0) = '1') else 
        ap_const_lv65_0;
        sext_ln92_fu_754_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln92_fu_749_p2),7));

    tmp_V_10_fu_697_p2 <= std_logic_vector(unsigned(zext_ln180_fu_691_p1) - unsigned(zext_ln701_fu_694_p1));
    tmp_V_11_fu_722_p2 <= std_logic_vector(unsigned(select_ln701_fu_703_p3) + unsigned(tmp_V_10_reg_933));
    tmp_V_fu_617_p2 <= std_logic_vector(unsigned(zext_ln700_25_fu_614_p1) + unsigned(zext_ln51_fu_606_p1));
    trunc_ln701_fu_719_p1 <= tmp_V_10_reg_933(64 - 1 downto 0);
    xor_ln247_fu_509_p2 <= (i1_0_reg_342 xor ap_const_lv6_20);
    xor_ln249_fu_555_p2 <= (i3_0_reg_365 xor ap_const_lv6_20);

    z0_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln56_fu_588_p1, grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0, grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0, ap_block_pp0_stage0, ap_CS_fsm_state27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z0_digits_data_V_address0 <= zext_ln56_fu_588_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z0_digits_data_V_address0 <= grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_address0;
        else 
            z0_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    z0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0, grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0, ap_CS_fsm_state27)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            z0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z0_digits_data_V_ce0 <= grp_CAT_I_I_I_O_fu_454_x0_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce0;
        else 
            z0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_ce1 <= grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_ce1;
        else 
            z0_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_we0 <= grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we0;
        else 
            z0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_we1 <= grp_karastuba_mul_templa_4_fu_432_res_digits_data_V_we1;
        else 
            z0_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_address0_assign_proc : process(zext_ln77_reg_908_pp1_iter3_reg, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0, ap_block_pp1_stage0, ap_CS_fsm_state27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_address0 <= zext_ln77_reg_908_pp1_iter3_reg(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z1_digits_data_V_address0 <= grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_address0;
        else 
            z1_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    z1_digits_data_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0, ap_CS_fsm_state27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z1_digits_data_V_ce0 <= grp_CAT_I_I_I_O_fu_454_x1_digits_data_V_ce0;
        else 
            z1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_i_reg_899_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_899_pp1_iter3_reg = ap_const_lv1_0))) then 
            z1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            z1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_tmp_bits_fu_758_p2 <= std_logic_vector(signed(sext_ln92_fu_754_p1) - signed(zext_ln61_9_reg_894));

    z2_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln56_fu_588_p1, grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0, grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0, ap_block_pp0_stage0, ap_CS_fsm_state27)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z2_digits_data_V_address0 <= zext_ln56_fu_588_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z2_digits_data_V_address0 <= grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_address0 <= grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_address0;
        else 
            z2_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    z2_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0, grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0, ap_CS_fsm_state27)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            z2_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z2_digits_data_V_ce0 <= grp_CAT_I_I_I_O_fu_454_x2_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_ce0 <= grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce0;
        else 
            z2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_ce1 <= grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_ce1;
        else 
            z2_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_we0 <= grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we0;
        else 
            z2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_we1 <= grp_karastuba_mul_templa_4_fu_443_res_digits_data_V_we1;
        else 
            z2_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln180_fu_691_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cross_mul_digits_dat_6_reg_923),65));
    zext_ln209_fu_594_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z0_digits_data_V_loa_reg_867),65));
    zext_ln246_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_331),64));
    zext_ln247_1_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln247_fu_509_p2),64));
    zext_ln247_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_342),64));
    zext_ln248_fu_538_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_reg_354),64));
    zext_ln249_1_fu_561_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln249_fu_555_p2),64));
    zext_ln249_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_365),64));
    zext_ln257_fu_572_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_karastuba_mul_templa_fu_423_ap_return),5));
    zext_ln51_fu_606_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_381_p4),66));
    zext_ln56_fu_588_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_389),64));
    zext_ln61_1_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z0_tmp_bits_reg_828),5));
    zext_ln61_2_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_tmp_bits_reg_833),5));
    zext_ln61_8_fu_659_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln61_fu_653_p2),6));
    zext_ln61_9_fu_669_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_tmp_bits_fu_663_p2),7));
    zext_ln61_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_088_0_i_reg_377),6));
    zext_ln700_24_fu_610_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_381_p4),64));
    zext_ln700_25_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_reg_879),66));
    zext_ln700_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_digits_data_V_loa_reg_873),65));
    zext_ln701_fu_694_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_digits_data_V_l_reg_928),65));
    zext_ln77_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i1_reg_412),64));
end behav;
