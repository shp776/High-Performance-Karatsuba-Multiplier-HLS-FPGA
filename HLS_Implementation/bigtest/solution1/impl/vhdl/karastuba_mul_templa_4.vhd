-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity karastuba_mul_templa_4 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    lhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
    lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    lhs_digits_data_V_ce0 : OUT STD_LOGIC;
    lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    rhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
    rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    rhs_digits_data_V_ce0 : OUT STD_LOGIC;
    rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_digits_data_V_ce0 : OUT STD_LOGIC;
    res_digits_data_V_we0 : OUT STD_LOGIC;
    res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
    res_digits_data_V_ce1 : OUT STD_LOGIC;
    res_digits_data_V_we1 : OUT STD_LOGIC;
    res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of karastuba_mul_templa_4 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (23 downto 0) := "000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (23 downto 0) := "000000000010000000000000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000100000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (23 downto 0) := "000000001000000000000000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "000000010000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (23 downto 0) := "000000100000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (23 downto 0) := "000001000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "000010000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (23 downto 0) := "000100000000000000000000";
    constant ap_ST_fsm_pp3_stage0 : STD_LOGIC_VECTOR (23 downto 0) := "001000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (23 downto 0) := "010000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (23 downto 0) := "100000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv6_20 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv65_1FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (64 downto 0) := "11111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_088_0_i_reg_442 : STD_LOGIC_VECTOR (1 downto 0);
    signal i_0_i_reg_454 : STD_LOGIC_VECTOR (5 downto 0);
    signal op2_assign_reg_465 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_0_i1_reg_477 : STD_LOGIC_VECTOR (5 downto 0);
    signal p_084_0_reg_488 : STD_LOGIC_VECTOR (1 downto 0);
    signal i4_0_reg_500 : STD_LOGIC_VECTOR (5 downto 0);
    signal j_0_reg_511 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_0160_0_reg_534 : STD_LOGIC_VECTOR (1 downto 0);
    signal i7_0_reg_546 : STD_LOGIC_VECTOR (5 downto 0);
    signal j8_0_reg_557 : STD_LOGIC_VECTOR (6 downto 0);
    signal reg_618 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal reg_618_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state28_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state30_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state31_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal icmp_ln282_reg_1335 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_626 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal reg_626_pp3_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state34_pp3_stage0_iter0 : BOOLEAN;
    signal ap_block_state35_pp3_stage0_iter1 : BOOLEAN;
    signal ap_block_state36_pp3_stage0_iter2 : BOOLEAN;
    signal ap_block_state37_pp3_stage0_iter3 : BOOLEAN;
    signal ap_block_state38_pp3_stage0_iter4 : BOOLEAN;
    signal ap_block_pp3_stage0_11001 : BOOLEAN;
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_pp3_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp3_stage0 : signal is "none";
    signal ap_enable_reg_pp3_iter1 : STD_LOGIC := '0';
    signal icmp_ln296_reg_1385 : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_634 : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_634_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal reg_634_pp3_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal i_fu_644_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_reg_1144 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal zext_ln255_fu_650_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln255_reg_1149 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln255_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_9_fu_661_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_9_reg_1163 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln256_fu_655_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_10_fu_690_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_10_reg_1176 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal zext_ln257_fu_696_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln257_reg_1181 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln257_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_11_fu_707_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_11_reg_1195 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal icmp_ln258_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal z0_tmp_bits_reg_1205 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_karastuba_mul_templa_5_fu_586_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_ap_done : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_ap_ready : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_ap_done : STD_LOGIC;
    signal ap_block_state14_on_subcall_done : BOOLEAN;
    signal grp_karastuba_mul_templa_5_fu_597_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal z2_tmp_bits_reg_1210 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln266_fu_730_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln266_reg_1215 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln53_fu_734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1220 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state15_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state19_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln53_reg_1220_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1220_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_reg_1220_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_12_fu_740_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln58_fu_746_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_reg_1229 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_reg_1229_pp0_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_reg_1229_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln58_reg_1229_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_1244 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_loa_reg_1244_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_1250 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_loa_reg_1250_pp0_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_fu_758_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_reg_1256 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_5_fu_786_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_5_reg_1261 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_1266 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal zext_ln63_7_fu_827_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln63_7_reg_1271 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal exitcond_i_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1276 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state21_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state22_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state23_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state24_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state25_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal exitcond_i_reg_1276_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1276_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond_i_reg_1276_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_13_fu_837_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal zext_ln80_fu_843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln80_reg_1285 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln80_reg_1285_pp1_iter1_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln80_reg_1285_pp1_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln80_reg_1285_pp1_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_4_reg_1300 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_l_reg_1305 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal tmp_V_7_fu_855_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_7_reg_1310 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_2_reg_1316 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal add_ln700_13_fu_893_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln700_13_reg_1321 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_tmp_bits_fu_916_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal z1_tmp_bits_reg_1326 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal icmp_ln278_fu_922_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln278_reg_1331 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal grp_CAT_I_I_I_O_1_fu_608_ap_ready : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_ap_done : STD_LOGIC;
    signal icmp_ln282_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln282_reg_1335_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln282_reg_1335_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln282_reg_1335_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_14_fu_933_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal res_digits_data_V_ad_reg_1349 : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_reg_1349_pp2_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_reg_1349_pp2_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_reg_1349_pp2_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal j_fu_949_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln700_14_fu_963_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_14_reg_1360 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_fu_992_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_reg_1365 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln858_6_reg_1370 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal zext_ln292_fu_1008_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln292_reg_1375 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal icmp_ln292_fu_1012_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln296_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln296_reg_1385_pp3_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln296_reg_1385_pp3_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln296_reg_1385_pp3_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_15_fu_1023_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_enable_reg_pp3_iter0 : STD_LOGIC := '0';
    signal res_digits_data_V_ad_2_reg_1399 : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg : STD_LOGIC_VECTOR (5 downto 0);
    signal j_5_fu_1039_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln700_16_fu_1053_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln700_16_reg_1410 : STD_LOGIC_VECTOR (64 downto 0);
    signal add_ln209_4_fu_1082_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_4_reg_1415 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln858_7_reg_1420 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_enable_reg_pp3_iter3 : STD_LOGIC := '0';
    signal add_ln304_fu_1102_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state15 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state21 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state28 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_block_pp3_stage0_subdone : BOOLEAN;
    signal ap_condition_pp3_exit_iter0_state34 : STD_LOGIC;
    signal ap_enable_reg_pp3_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp3_iter4 : STD_LOGIC := '0';
    signal lhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs0_digits_data_V_ce0 : STD_LOGIC;
    signal lhs0_digits_data_V_we0 : STD_LOGIC;
    signal lhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs1_digits_data_V_ce0 : STD_LOGIC;
    signal lhs1_digits_data_V_we0 : STD_LOGIC;
    signal lhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal rhs0_digits_data_V_ce0 : STD_LOGIC;
    signal rhs0_digits_data_V_we0 : STD_LOGIC;
    signal rhs0_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal rhs1_digits_data_V_ce0 : STD_LOGIC;
    signal rhs1_digits_data_V_we0 : STD_LOGIC;
    signal rhs1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal lhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal lhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal lhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs0_tmp_digits_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal rhs0_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs0_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal rhs1_tmp_digits_data_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal rhs1_tmp_digits_data_ce0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_we0 : STD_LOGIC;
    signal rhs1_tmp_digits_data_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal z0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal z0_digits_data_V_ce0 : STD_LOGIC;
    signal z0_digits_data_V_we0 : STD_LOGIC;
    signal z0_digits_data_V_ce1 : STD_LOGIC;
    signal z0_digits_data_V_we1 : STD_LOGIC;
    signal z0_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal z2_digits_data_V_ce0 : STD_LOGIC;
    signal z2_digits_data_V_we0 : STD_LOGIC;
    signal z2_digits_data_V_ce1 : STD_LOGIC;
    signal z2_digits_data_V_we1 : STD_LOGIC;
    signal z2_digits_data_V_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal cross_mul_digits_dat_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal cross_mul_digits_dat_ce0 : STD_LOGIC;
    signal cross_mul_digits_dat_we0 : STD_LOGIC;
    signal cross_mul_digits_dat_ce1 : STD_LOGIC;
    signal cross_mul_digits_dat_we1 : STD_LOGIC;
    signal cross_mul_digits_dat_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add2_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal add2_digits_data_V_ce0 : STD_LOGIC;
    signal add2_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal z1_digits_data_V_ce0 : STD_LOGIC;
    signal z1_digits_data_V_we0 : STD_LOGIC;
    signal z1_digits_data_V_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_ap_return : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_ap_start : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_ap_idle : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1 : STD_LOGIC;
    signal grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_ap_start : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_ap_idle : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1 : STD_LOGIC;
    signal grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_0_reg_396 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal i1_0_reg_407 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal i2_0_reg_419 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal i3_0_reg_430 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal ap_phi_mux_p_088_0_i_phi_fu_446_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_op2_assign_phi_fu_469_p4 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal ap_phi_mux_p_084_0_phi_fu_492_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal res_tmp_bits_0_reg_522 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_phi_mux_p_0160_0_phi_fu_538_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp3_stage0 : BOOLEAN;
    signal res_tmp_bits_1_reg_568 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_karastuba_mul_templa_1_fu_577_ap_start_reg : STD_LOGIC := '0';
    signal grp_karastuba_mul_templa_5_fu_586_ap_start_reg : STD_LOGIC := '0';
    signal grp_karastuba_mul_templa_5_fu_597_ap_start_reg : STD_LOGIC := '0';
    signal grp_CAT_I_I_I_O_1_fu_608_ap_start_reg : STD_LOGIC := '0';
    signal zext_ln256_2_fu_673_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln256_fu_678_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln258_2_fu_719_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln258_fu_724_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln285_fu_939_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln286_fu_944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln299_fu_1029_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln300_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln256_fu_667_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal xor_ln258_fu_713_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln209_fu_752_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_fu_755_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_18_fu_772_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln53_fu_764_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_17_fu_768_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_10_fu_781_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_6_fu_775_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln63_5_fu_808_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln63_4_fu_805_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln63_fu_811_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln63_fu_801_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln63_6_fu_817_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal add2_tmp_bits_fu_821_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln180_fu_849_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln701_fu_852_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal select_ln701_fu_861_p3 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_V_8_fu_880_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal trunc_ln701_fu_877_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln701_2_fu_869_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_33_fu_899_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln95_fu_907_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal sext_ln95_fu_912_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln286_1_fu_955_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_19_fu_959_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_21_fu_977_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln282_fu_969_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_20_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_11_fu_986_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_fu_980_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln300_1_fu_1045_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_22_fu_1049_p1 : STD_LOGIC_VECTOR (64 downto 0);
    signal zext_ln700_24_fu_1067_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln296_fu_1059_p1 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln700_23_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln209_12_fu_1076_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_V_9_fu_1070_p2 : STD_LOGIC_VECTOR (65 downto 0);
    signal zext_ln304_fu_1098_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal mul_ln306_fu_1117_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln306_fu_1117_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln306_fu_1107_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln306_fu_1117_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln306_fu_1123_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_idle_pp3 : STD_LOGIC;
    signal ap_enable_pp3 : STD_LOGIC;
    signal mul_ln306_fu_1117_p00 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln306_fu_1117_p10 : STD_LOGIC_VECTOR (3 downto 0);

    component karastuba_mul_templa_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        lhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        lhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        lhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs0_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        rhs0_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs0_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs1_tmp_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        rhs1_tmp_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs1_tmp_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        cross_mul_digits_data_V_ce0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we0 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        cross_mul_digits_data_V_ce1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_we1 : OUT STD_LOGIC;
        cross_mul_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        cross_mul_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component karastuba_mul_templa_5 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        lhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        lhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        lhs_digits_data_V_ce0 : OUT STD_LOGIC;
        lhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        rhs_tmp_bits_read : IN STD_LOGIC_VECTOR (1 downto 0);
        rhs_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        rhs_digits_data_V_ce0 : OUT STD_LOGIC;
        rhs_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        res_digits_data_V_ce0 : OUT STD_LOGIC;
        res_digits_data_V_we0 : OUT STD_LOGIC;
        res_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        res_digits_data_V_ce1 : OUT STD_LOGIC;
        res_digits_data_V_we1 : OUT STD_LOGIC;
        res_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        res_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;


    component CAT_I_I_I_O_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x0_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x0_digits_data_V_ce0 : OUT STD_LOGIC;
        x0_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x1_tmp_bits_read : IN STD_LOGIC_VECTOR (6 downto 0);
        x1_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x1_digits_data_V_ce0 : OUT STD_LOGIC;
        x1_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        x2_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        x2_digits_data_V_ce0 : OUT STD_LOGIC;
        x2_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        w_digits_data_V_ce0 : OUT STD_LOGIC;
        w_digits_data_V_we0 : OUT STD_LOGIC;
        w_digits_data_V_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_address1 : OUT STD_LOGIC_VECTOR (5 downto 0);
        w_digits_data_V_ce1 : OUT STD_LOGIC;
        w_digits_data_V_we1 : OUT STD_LOGIC;
        w_digits_data_V_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        w_digits_data_V_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_tempcA IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temBew IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component karastuba_mul_temEe0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    lhs0_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_digits_data_V_address0,
        ce0 => lhs0_digits_data_V_ce0,
        we0 => lhs0_digits_data_V_we0,
        d0 => reg_618,
        q0 => lhs0_digits_data_V_q0);

    lhs1_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_digits_data_V_address0,
        ce0 => lhs1_digits_data_V_ce0,
        we0 => lhs1_digits_data_V_we0,
        d0 => reg_618,
        q0 => lhs1_digits_data_V_q0);

    rhs0_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_digits_data_V_address0,
        ce0 => rhs0_digits_data_V_ce0,
        we0 => rhs0_digits_data_V_we0,
        d0 => reg_626,
        q0 => rhs0_digits_data_V_q0);

    rhs1_digits_data_V_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_digits_data_V_address0,
        ce0 => rhs1_digits_data_V_ce0,
        we0 => rhs1_digits_data_V_we0,
        d0 => reg_626,
        q0 => rhs1_digits_data_V_q0);

    lhs0_tmp_digits_data_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs0_tmp_digits_data_address0,
        ce0 => lhs0_tmp_digits_data_ce0,
        we0 => lhs0_tmp_digits_data_we0,
        d0 => reg_618,
        q0 => lhs0_tmp_digits_data_q0);

    lhs1_tmp_digits_data_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => lhs1_tmp_digits_data_address0,
        ce0 => lhs1_tmp_digits_data_ce0,
        we0 => lhs1_tmp_digits_data_we0,
        d0 => reg_618,
        q0 => lhs1_tmp_digits_data_q0);

    rhs0_tmp_digits_data_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs0_tmp_digits_data_address0,
        ce0 => rhs0_tmp_digits_data_ce0,
        we0 => rhs0_tmp_digits_data_we0,
        d0 => reg_626,
        q0 => rhs0_tmp_digits_data_q0);

    rhs1_tmp_digits_data_U : component karastuba_mul_tempcA
    generic map (
        DataWidth => 64,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => rhs1_tmp_digits_data_address0,
        ce0 => rhs1_tmp_digits_data_ce0,
        we0 => rhs1_tmp_digits_data_we0,
        d0 => reg_626,
        q0 => rhs1_tmp_digits_data_q0);

    z0_digits_data_V_U : component karastuba_mul_temBew
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z0_digits_data_V_address0,
        ce0 => z0_digits_data_V_ce0,
        we0 => z0_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0,
        q0 => z0_digits_data_V_q0,
        address1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1,
        ce1 => z0_digits_data_V_ce1,
        we1 => z0_digits_data_V_we1,
        d1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1,
        q1 => z0_digits_data_V_q1);

    z2_digits_data_V_U : component karastuba_mul_temBew
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z2_digits_data_V_address0,
        ce0 => z2_digits_data_V_ce0,
        we0 => z2_digits_data_V_we0,
        d0 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0,
        q0 => z2_digits_data_V_q0,
        address1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1,
        ce1 => z2_digits_data_V_ce1,
        we1 => z2_digits_data_V_we1,
        d1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1,
        q1 => z2_digits_data_V_q1);

    cross_mul_digits_dat_U : component karastuba_mul_temBew
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => cross_mul_digits_dat_address0,
        ce0 => cross_mul_digits_dat_ce0,
        we0 => cross_mul_digits_dat_we0,
        d0 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0,
        q0 => cross_mul_digits_dat_q0,
        address1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1,
        ce1 => cross_mul_digits_dat_ce1,
        we1 => cross_mul_digits_dat_we1,
        d1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1,
        q1 => cross_mul_digits_dat_q1);

    add2_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => add2_digits_data_V_address0,
        ce0 => add2_digits_data_V_ce0,
        we0 => add2_digits_data_V_we0,
        d0 => add_ln209_5_reg_1261,
        q0 => add2_digits_data_V_q0);

    z1_digits_data_V_U : component karastuba_mul_temEe0
    generic map (
        DataWidth => 64,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => z1_digits_data_V_address0,
        ce0 => z1_digits_data_V_ce0,
        we0 => z1_digits_data_V_we0,
        d0 => add_ln700_13_reg_1321,
        q0 => z1_digits_data_V_q0);

    grp_karastuba_mul_templa_1_fu_577 : component karastuba_mul_templa_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_1_fu_577_ap_start,
        ap_done => grp_karastuba_mul_templa_1_fu_577_ap_done,
        ap_idle => grp_karastuba_mul_templa_1_fu_577_ap_idle,
        ap_ready => grp_karastuba_mul_templa_1_fu_577_ap_ready,
        lhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0,
        lhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0,
        lhs0_tmp_digits_data_V_q0 => lhs0_tmp_digits_data_q0,
        lhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0,
        lhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0,
        lhs1_tmp_digits_data_V_q0 => lhs1_tmp_digits_data_q0,
        rhs0_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0,
        rhs0_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0,
        rhs0_tmp_digits_data_V_q0 => rhs0_tmp_digits_data_q0,
        rhs1_tmp_digits_data_V_address0 => grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0,
        rhs1_tmp_digits_data_V_ce0 => grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0,
        rhs1_tmp_digits_data_V_q0 => rhs1_tmp_digits_data_q0,
        cross_mul_digits_data_V_address0 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0,
        cross_mul_digits_data_V_ce0 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0,
        cross_mul_digits_data_V_we0 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0,
        cross_mul_digits_data_V_d0 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d0,
        cross_mul_digits_data_V_q0 => cross_mul_digits_dat_q0,
        cross_mul_digits_data_V_address1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address1,
        cross_mul_digits_data_V_ce1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1,
        cross_mul_digits_data_V_we1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1,
        cross_mul_digits_data_V_d1 => grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_d1,
        cross_mul_digits_data_V_q1 => cross_mul_digits_dat_q1,
        ap_return => grp_karastuba_mul_templa_1_fu_577_ap_return);

    grp_karastuba_mul_templa_5_fu_586 : component karastuba_mul_templa_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_5_fu_586_ap_start,
        ap_done => grp_karastuba_mul_templa_5_fu_586_ap_done,
        ap_idle => grp_karastuba_mul_templa_5_fu_586_ap_idle,
        ap_ready => grp_karastuba_mul_templa_5_fu_586_ap_ready,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0 => lhs0_digits_data_V_q0,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0 => rhs0_digits_data_V_q0,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d0,
        res_digits_data_V_q0 => z0_digits_data_V_q0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_d1,
        res_digits_data_V_q1 => z0_digits_data_V_q1,
        ap_return => grp_karastuba_mul_templa_5_fu_586_ap_return);

    grp_karastuba_mul_templa_5_fu_597 : component karastuba_mul_templa_5
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_karastuba_mul_templa_5_fu_597_ap_start,
        ap_done => grp_karastuba_mul_templa_5_fu_597_ap_done,
        ap_idle => grp_karastuba_mul_templa_5_fu_597_ap_idle,
        ap_ready => grp_karastuba_mul_templa_5_fu_597_ap_ready,
        lhs_tmp_bits_read => ap_const_lv2_0,
        lhs_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0,
        lhs_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0,
        lhs_digits_data_V_q0 => lhs1_digits_data_V_q0,
        rhs_tmp_bits_read => ap_const_lv2_0,
        rhs_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0,
        rhs_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0,
        rhs_digits_data_V_q0 => rhs1_digits_data_V_q0,
        res_digits_data_V_address0 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0,
        res_digits_data_V_ce0 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0,
        res_digits_data_V_we0 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0,
        res_digits_data_V_d0 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d0,
        res_digits_data_V_q0 => z2_digits_data_V_q0,
        res_digits_data_V_address1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address1,
        res_digits_data_V_ce1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1,
        res_digits_data_V_we1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1,
        res_digits_data_V_d1 => grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_d1,
        res_digits_data_V_q1 => z2_digits_data_V_q1,
        ap_return => grp_karastuba_mul_templa_5_fu_597_ap_return);

    grp_CAT_I_I_I_O_1_fu_608 : component CAT_I_I_I_O_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_CAT_I_I_I_O_1_fu_608_ap_start,
        ap_done => grp_CAT_I_I_I_O_1_fu_608_ap_done,
        ap_idle => grp_CAT_I_I_I_O_1_fu_608_ap_idle,
        ap_ready => grp_CAT_I_I_I_O_1_fu_608_ap_ready,
        x0_digits_data_V_address0 => grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0,
        x0_digits_data_V_ce0 => grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0,
        x0_digits_data_V_q0 => z0_digits_data_V_q0,
        x1_tmp_bits_read => z1_tmp_bits_reg_1326,
        x1_digits_data_V_address0 => grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0,
        x1_digits_data_V_ce0 => grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0,
        x1_digits_data_V_q0 => z1_digits_data_V_q0,
        x2_digits_data_V_address0 => grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0,
        x2_digits_data_V_ce0 => grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0,
        x2_digits_data_V_q0 => z2_digits_data_V_q0,
        w_digits_data_V_address0 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0,
        w_digits_data_V_ce0 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0,
        w_digits_data_V_we0 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0,
        w_digits_data_V_d0 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0,
        w_digits_data_V_q0 => res_digits_data_V_q0,
        w_digits_data_V_address1 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1,
        w_digits_data_V_ce1 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1,
        w_digits_data_V_we1 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1,
        w_digits_data_V_d1 => grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1,
        w_digits_data_V_q1 => res_digits_data_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state15) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state15)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state15);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                elsif (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                    ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state21)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state21);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                    ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state28) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter0_state28)) then 
                        ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state28);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                elsif (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp3_exit_iter0_state34) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp3_exit_iter0_state34)) then 
                        ap_enable_reg_pp3_iter1 <= (ap_const_logic_1 xor ap_condition_pp3_exit_iter0_state34);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp3_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone)) then 
                    ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp3_iter4 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv4_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    ap_return_preg <= add_ln306_fu_1123_p2;
                end if; 
            end if;
        end if;
    end process;


    grp_CAT_I_I_I_O_1_fu_608_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                    grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_CAT_I_I_I_O_1_fu_608_ap_ready = ap_const_logic_1)) then 
                    grp_CAT_I_I_I_O_1_fu_608_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_1_fu_577_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln258_fu_701_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_1_fu_577_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_1_fu_577_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_5_fu_586_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln258_fu_701_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_5_fu_586_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_5_fu_586_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_karastuba_mul_templa_5_fu_597_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln258_fu_701_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                    grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_karastuba_mul_templa_5_fu_597_ap_ready = ap_const_logic_1)) then 
                    grp_karastuba_mul_templa_5_fu_597_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i1_0_reg_407_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln255_fu_638_p2 = ap_const_lv1_1))) then 
                i1_0_reg_407 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                i1_0_reg_407 <= i_9_reg_1163;
            end if; 
        end if;
    end process;

    i2_0_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln256_fu_655_p2 = ap_const_lv1_1))) then 
                i2_0_reg_419 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                i2_0_reg_419 <= i_10_reg_1176;
            end if; 
        end if;
    end process;

    i3_0_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln257_fu_684_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                i3_0_reg_430 <= ap_const_lv5_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                i3_0_reg_430 <= i_11_reg_1195;
            end if; 
        end if;
    end process;

    i4_0_reg_500_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then 
                i4_0_reg_500 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln282_fu_927_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                i4_0_reg_500 <= i_14_fu_933_p2;
            end if; 
        end if;
    end process;

    i7_0_reg_546_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then 
                i7_0_reg_546 <= ap_const_lv6_0;
            elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_fu_1017_p2 = ap_const_lv1_0))) then 
                i7_0_reg_546 <= i_15_fu_1023_p2;
            end if; 
        end if;
    end process;

    i_0_i1_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                i_0_i1_reg_477 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_831_p2 = ap_const_lv1_0))) then 
                i_0_i1_reg_477 <= i_13_fu_837_p2;
            end if; 
        end if;
    end process;

    i_0_i_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i_0_i_reg_454 <= ap_const_lv6_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_734_p2 = ap_const_lv1_0))) then 
                i_0_i_reg_454 <= i_12_fu_740_p2;
            end if; 
        end if;
    end process;

    i_0_reg_396_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                i_0_reg_396 <= i_reg_1144;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_396 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    j8_0_reg_557_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then 
                j8_0_reg_557 <= ap_const_lv7_20;
            elsif (((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_fu_1017_p2 = ap_const_lv1_0))) then 
                j8_0_reg_557 <= j_5_fu_1039_p2;
            end if; 
        end if;
    end process;

    j_0_reg_511_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then 
                j_0_reg_511 <= ap_const_lv7_20;
            elsif (((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln282_fu_927_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                j_0_reg_511 <= j_fu_949_p2;
            end if; 
        end if;
    end process;

    op2_assign_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
                op2_assign_reg_465 <= ap_const_lv1_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1276_pp1_iter3_reg = ap_const_lv1_0))) then 
                op2_assign_reg_465 <= tmp_2_reg_1316;
            end if; 
        end if;
    end process;

    p_0160_0_reg_534_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then 
                p_0160_0_reg_534 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385_pp3_iter3_reg = ap_const_lv1_0))) then 
                p_0160_0_reg_534 <= trunc_ln858_7_reg_1420;
            end if; 
        end if;
    end process;

    p_084_0_reg_488_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then 
                p_084_0_reg_488 <= ap_const_lv2_0;
            elsif (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln282_reg_1335_pp2_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then 
                p_084_0_reg_488 <= trunc_ln858_6_reg_1370;
            end if; 
        end if;
    end process;

    p_088_0_i_reg_442_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                p_088_0_i_reg_442 <= ap_const_lv2_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln53_reg_1220_pp0_iter3_reg = ap_const_lv1_0))) then 
                p_088_0_i_reg_442 <= trunc_ln_reg_1266;
            end if; 
        end if;
    end process;

    res_tmp_bits_0_reg_522_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln278_reg_1331 = ap_const_lv1_0))) then 
                res_tmp_bits_0_reg_522 <= p_084_0_reg_488;
            elsif (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (icmp_ln278_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
                res_tmp_bits_0_reg_522 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    res_tmp_bits_1_reg_568_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
                res_tmp_bits_1_reg_568 <= add_ln304_fu_1102_p2;
            elsif (((icmp_ln292_fu_1012_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                res_tmp_bits_1_reg_568 <= zext_ln292_fu_1008_p1;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_1276 = ap_const_lv1_0))) then
                add2_digits_data_V_l_reg_1305 <= add2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385_pp3_iter2_reg = ap_const_lv1_0))) then
                add_ln209_4_reg_1415 <= add_ln209_4_fu_1082_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln53_reg_1220_pp0_iter2_reg = ap_const_lv1_0))) then
                add_ln209_5_reg_1261 <= add_ln209_5_fu_786_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_reg_1335_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln209_reg_1365 <= add_ln209_fu_992_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_1276_pp1_iter2_reg = ap_const_lv1_0))) then
                add_ln700_13_reg_1321 <= add_ln700_13_fu_893_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln282_reg_1335_pp2_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                add_ln700_14_reg_1360 <= add_ln700_14_fu_963_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385_pp3_iter1_reg = ap_const_lv1_0))) then
                add_ln700_16_reg_1410 <= add_ln700_16_fu_1053_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln53_reg_1220_pp0_iter1_reg = ap_const_lv1_0))) then
                add_ln700_reg_1256 <= add_ln700_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_reg_1276 = ap_const_lv1_0))) then
                cross_mul_digits_dat_4_reg_1300 <= cross_mul_digits_dat_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                exitcond_i_reg_1276 <= exitcond_i_fu_831_p2;
                exitcond_i_reg_1276_pp1_iter1_reg <= exitcond_i_reg_1276;
                    zext_ln80_reg_1285_pp1_iter1_reg(5 downto 0) <= zext_ln80_reg_1285(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                exitcond_i_reg_1276_pp1_iter2_reg <= exitcond_i_reg_1276_pp1_iter1_reg;
                exitcond_i_reg_1276_pp1_iter3_reg <= exitcond_i_reg_1276_pp1_iter2_reg;
                    zext_ln80_reg_1285_pp1_iter2_reg(5 downto 0) <= zext_ln80_reg_1285_pp1_iter1_reg(5 downto 0);
                    zext_ln80_reg_1285_pp1_iter3_reg(5 downto 0) <= zext_ln80_reg_1285_pp1_iter2_reg(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                i_10_reg_1176 <= i_10_fu_690_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                i_11_reg_1195 <= i_11_fu_707_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                i_9_reg_1163 <= i_9_fu_661_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1144 <= i_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                icmp_ln278_reg_1331 <= icmp_ln278_fu_922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                icmp_ln282_reg_1335 <= icmp_ln282_fu_927_p2;
                icmp_ln282_reg_1335_pp2_iter1_reg <= icmp_ln282_reg_1335;
                res_digits_data_V_ad_reg_1349_pp2_iter1_reg <= res_digits_data_V_ad_reg_1349;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                icmp_ln282_reg_1335_pp2_iter2_reg <= icmp_ln282_reg_1335_pp2_iter1_reg;
                icmp_ln282_reg_1335_pp2_iter3_reg <= icmp_ln282_reg_1335_pp2_iter2_reg;
                reg_618_pp2_iter2_reg <= reg_618;
                reg_634_pp2_iter2_reg <= reg_634;
                res_digits_data_V_ad_reg_1349_pp2_iter2_reg <= res_digits_data_V_ad_reg_1349_pp2_iter1_reg;
                res_digits_data_V_ad_reg_1349_pp2_iter3_reg <= res_digits_data_V_ad_reg_1349_pp2_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001))) then
                icmp_ln296_reg_1385 <= icmp_ln296_fu_1017_p2;
                icmp_ln296_reg_1385_pp3_iter1_reg <= icmp_ln296_reg_1385;
                res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg <= res_digits_data_V_ad_2_reg_1399;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp3_stage0_11001)) then
                icmp_ln296_reg_1385_pp3_iter2_reg <= icmp_ln296_reg_1385_pp3_iter1_reg;
                icmp_ln296_reg_1385_pp3_iter3_reg <= icmp_ln296_reg_1385_pp3_iter2_reg;
                reg_626_pp3_iter2_reg <= reg_626;
                reg_634_pp3_iter2_reg <= reg_634;
                res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg <= res_digits_data_V_ad_2_reg_1399_pp3_iter1_reg;
                res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg <= res_digits_data_V_ad_2_reg_1399_pp3_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln53_reg_1220 <= icmp_ln53_fu_734_p2;
                icmp_ln53_reg_1220_pp0_iter1_reg <= icmp_ln53_reg_1220;
                    zext_ln58_reg_1229_pp0_iter1_reg(5 downto 0) <= zext_ln58_reg_1229(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln53_reg_1220_pp0_iter2_reg <= icmp_ln53_reg_1220_pp0_iter1_reg;
                icmp_ln53_reg_1220_pp0_iter3_reg <= icmp_ln53_reg_1220_pp0_iter2_reg;
                z0_digits_data_V_loa_reg_1244_pp0_iter2_reg <= z0_digits_data_V_loa_reg_1244;
                z2_digits_data_V_loa_reg_1250_pp0_iter2_reg <= z2_digits_data_V_loa_reg_1250;
                    zext_ln58_reg_1229_pp0_iter2_reg(5 downto 0) <= zext_ln58_reg_1229_pp0_iter1_reg(5 downto 0);
                    zext_ln58_reg_1229_pp0_iter3_reg(5 downto 0) <= zext_ln58_reg_1229_pp0_iter2_reg(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln282_reg_1335 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then
                reg_618 <= lhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385 = ap_const_lv1_0)))) then
                reg_626 <= rhs_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_enable_reg_pp3_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385 = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln282_reg_1335 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then
                reg_634 <= res_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_fu_1017_p2 = ap_const_lv1_0))) then
                res_digits_data_V_ad_2_reg_1399 <= zext_ln300_fu_1034_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln282_fu_927_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                res_digits_data_V_ad_reg_1349 <= zext_ln286_fu_944_p1(6 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (exitcond_i_reg_1276_pp1_iter2_reg = ap_const_lv1_0))) then
                tmp_2_reg_1316 <= tmp_V_8_fu_880_p2(64 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (exitcond_i_reg_1276_pp1_iter1_reg = ap_const_lv1_0))) then
                tmp_V_7_reg_1310 <= tmp_V_7_fu_855_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln282_reg_1335_pp2_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                trunc_ln858_6_reg_1370 <= tmp_V_fu_980_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp3_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385_pp3_iter2_reg = ap_const_lv1_0))) then
                trunc_ln858_7_reg_1420 <= tmp_V_9_fu_1070_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln53_reg_1220_pp0_iter2_reg = ap_const_lv1_0))) then
                trunc_ln_reg_1266 <= tmp_V_6_fu_775_p2(65 downto 64);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_reg_1220 = ap_const_lv1_0))) then
                z0_digits_data_V_loa_reg_1244 <= z0_digits_data_V_q0;
                z2_digits_data_V_loa_reg_1250 <= z2_digits_data_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                z0_tmp_bits_reg_1205 <= grp_karastuba_mul_templa_5_fu_586_ap_return;
                z2_tmp_bits_reg_1210 <= grp_karastuba_mul_templa_5_fu_597_ap_return;
                    zext_ln266_reg_1215(3 downto 0) <= zext_ln266_fu_730_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                z1_tmp_bits_reg_1326 <= z1_tmp_bits_fu_916_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln255_fu_638_p2 = ap_const_lv1_0))) then
                    zext_ln255_reg_1149(4 downto 0) <= zext_ln255_fu_650_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (icmp_ln257_fu_684_p2 = ap_const_lv1_0))) then
                    zext_ln257_reg_1181(4 downto 0) <= zext_ln257_fu_696_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                    zext_ln292_reg_1375(1 downto 0) <= zext_ln292_fu_1008_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln53_fu_734_p2 = ap_const_lv1_0))) then
                    zext_ln58_reg_1229(5 downto 0) <= zext_ln58_fu_746_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    zext_ln63_7_reg_1271(5 downto 0) <= zext_ln63_7_fu_827_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (exitcond_i_fu_831_p2 = ap_const_lv1_0))) then
                    zext_ln80_reg_1285(5 downto 0) <= zext_ln80_fu_843_p1(5 downto 0);
            end if;
        end if;
    end process;
    zext_ln255_reg_1149(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln257_reg_1181(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    zext_ln266_reg_1215(4) <= '0';
    zext_ln58_reg_1229(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln58_reg_1229_pp0_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln58_reg_1229_pp0_iter2_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln58_reg_1229_pp0_iter3_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln63_7_reg_1271(6) <= '0';
    zext_ln80_reg_1285(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln80_reg_1285_pp1_iter1_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln80_reg_1285_pp1_iter2_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln80_reg_1285_pp1_iter3_reg(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    zext_ln292_reg_1375(2) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp2_iter1, ap_enable_reg_pp3_iter1, ap_CS_fsm_state2, icmp_ln255_fu_638_p2, ap_CS_fsm_state5, icmp_ln256_fu_655_p2, ap_CS_fsm_state8, icmp_ln257_fu_684_p2, ap_CS_fsm_state11, icmp_ln258_fu_701_p2, ap_CS_fsm_state14, ap_block_state14_on_subcall_done, icmp_ln53_fu_734_p2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, exitcond_i_fu_831_p2, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, icmp_ln278_fu_922_p2, ap_CS_fsm_state27, grp_CAT_I_I_I_O_1_fu_608_ap_done, icmp_ln282_fu_927_p2, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter3, ap_CS_fsm_state33, icmp_ln292_fu_1012_p2, icmp_ln296_fu_1017_p2, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter4, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter4, ap_block_pp3_stage0_subdone, ap_enable_reg_pp3_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln255_fu_638_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln256_fu_655_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                if (((icmp_ln257_fu_684_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state11 => 
                if (((icmp_ln258_fu_701_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state14;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state14 => 
                if (((ap_const_boolean_0 = ap_block_state14_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln53_fu_734_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln53_fu_734_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_831_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (exitcond_i_fu_831_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state27) and (icmp_ln278_fu_922_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((grp_CAT_I_I_I_O_1_fu_608_ap_done = ap_const_logic_1) and (icmp_ln278_fu_922_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln282_fu_927_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln282_fu_927_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state33 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln292_fu_1012_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_pp3_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln296_fu_1017_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) and not(((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp3_stage0_subdone) and (icmp_ln296_fu_1017_p2 = ap_const_lv1_1) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp3_stage0;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    add2_digits_data_V_address0_assign_proc : process(zext_ln58_reg_1229_pp0_iter3_reg, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln80_fu_843_p1, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            add2_digits_data_V_address0 <= zext_ln80_fu_843_p1(5 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1))) then 
            add2_digits_data_V_address0 <= zext_ln58_reg_1229_pp0_iter3_reg(5 - 1 downto 0);
        else 
            add2_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    add2_digits_data_V_ce0_assign_proc : process(ap_block_pp0_stage0_11001, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, ap_enable_reg_pp0_iter4)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1)))) then 
            add2_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    add2_digits_data_V_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln53_reg_1220_pp0_iter3_reg, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln53_reg_1220_pp0_iter3_reg = ap_const_lv1_0))) then 
            add2_digits_data_V_we0 <= ap_const_logic_1;
        else 
            add2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add2_tmp_bits_fu_821_p2 <= std_logic_vector(unsigned(zext_ln63_fu_801_p1) + unsigned(zext_ln63_6_fu_817_p1));
    add_ln209_10_fu_781_p2 <= std_logic_vector(unsigned(z2_digits_data_V_loa_reg_1250_pp0_iter2_reg) + unsigned(zext_ln700_17_fu_768_p1));
    add_ln209_11_fu_986_p2 <= std_logic_vector(unsigned(reg_634_pp2_iter2_reg) + unsigned(zext_ln700_20_fu_973_p1));
    add_ln209_12_fu_1076_p2 <= std_logic_vector(unsigned(reg_634_pp3_iter2_reg) + unsigned(zext_ln700_23_fu_1063_p1));
    add_ln209_4_fu_1082_p2 <= std_logic_vector(unsigned(add_ln209_12_fu_1076_p2) + unsigned(reg_626_pp3_iter2_reg));
    add_ln209_5_fu_786_p2 <= std_logic_vector(unsigned(add_ln209_10_fu_781_p2) + unsigned(z0_digits_data_V_loa_reg_1244_pp0_iter2_reg));
    add_ln209_fu_992_p2 <= std_logic_vector(unsigned(add_ln209_11_fu_986_p2) + unsigned(reg_618_pp2_iter2_reg));
    add_ln304_fu_1102_p2 <= std_logic_vector(unsigned(zext_ln292_reg_1375) + unsigned(zext_ln304_fu_1098_p1));
    add_ln306_fu_1123_p2 <= std_logic_vector(unsigned(zext_ln306_fu_1107_p1) + unsigned(mul_ln306_fu_1117_p2));
    add_ln63_fu_811_p2 <= std_logic_vector(unsigned(zext_ln63_5_fu_808_p1) + unsigned(zext_ln63_4_fu_805_p1));
    add_ln700_13_fu_893_p2 <= std_logic_vector(unsigned(trunc_ln701_fu_877_p1) + unsigned(select_ln701_2_fu_869_p3));
    add_ln700_14_fu_963_p2 <= std_logic_vector(unsigned(zext_ln286_1_fu_955_p1) + unsigned(zext_ln700_19_fu_959_p1));
    add_ln700_16_fu_1053_p2 <= std_logic_vector(unsigned(zext_ln300_1_fu_1045_p1) + unsigned(zext_ln700_22_fu_1049_p1));
    add_ln700_fu_758_p2 <= std_logic_vector(unsigned(zext_ln209_fu_752_p1) + unsigned(zext_ln700_fu_755_p1));
    add_ln95_fu_907_p2 <= std_logic_vector(unsigned(empty_33_fu_899_p3) + unsigned(zext_ln266_reg_1215));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(16);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(19);
    ap_CS_fsm_pp3_stage0 <= ap_CS_fsm(21);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(15);
    ap_CS_fsm_state26 <= ap_CS_fsm(17);
    ap_CS_fsm_state27 <= ap_CS_fsm(18);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state33 <= ap_CS_fsm(20);
    ap_CS_fsm_state39 <= ap_CS_fsm(22);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(23);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp3_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state14_on_subcall_done_assign_proc : process(grp_karastuba_mul_templa_5_fu_586_ap_done, grp_karastuba_mul_templa_5_fu_597_ap_done, grp_karastuba_mul_templa_1_fu_577_ap_done)
    begin
                ap_block_state14_on_subcall_done <= ((grp_karastuba_mul_templa_1_fu_577_ap_done = ap_const_logic_0) or (grp_karastuba_mul_templa_5_fu_597_ap_done = ap_const_logic_0) or (grp_karastuba_mul_templa_5_fu_586_ap_done = ap_const_logic_0));
    end process;

        ap_block_state15_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp3_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp3_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp3_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp3_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp3_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_exit_iter0_state15_assign_proc : process(icmp_ln53_fu_734_p2)
    begin
        if ((icmp_ln53_fu_734_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state15 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state15 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state21_assign_proc : process(exitcond_i_fu_831_p2)
    begin
        if ((exitcond_i_fu_831_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state21 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state28_assign_proc : process(icmp_ln282_fu_927_p2)
    begin
        if ((icmp_ln282_fu_927_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state28 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state28 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp3_exit_iter0_state34_assign_proc : process(icmp_ln296_fu_1017_p2)
    begin
        if ((icmp_ln296_fu_1017_p2 = ap_const_lv1_1)) then 
            ap_condition_pp3_exit_iter0_state34 <= ap_const_logic_1;
        else 
            ap_condition_pp3_exit_iter0_state34 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state40)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state40) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);
    ap_enable_pp3 <= (ap_idle_pp3 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter4)
    begin
        if (((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp3_assign_proc : process(ap_enable_reg_pp3_iter1, ap_enable_reg_pp3_iter0, ap_enable_reg_pp3_iter3, ap_enable_reg_pp3_iter2, ap_enable_reg_pp3_iter4)
    begin
        if (((ap_enable_reg_pp3_iter4 = ap_const_logic_0) and (ap_enable_reg_pp3_iter2 = ap_const_logic_0) and (ap_enable_reg_pp3_iter3 = ap_const_logic_0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_0) and (ap_enable_reg_pp3_iter1 = ap_const_logic_0))) then 
            ap_idle_pp3 <= ap_const_logic_1;
        else 
            ap_idle_pp3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_op2_assign_phi_fu_469_p4_assign_proc : process(op2_assign_reg_465, exitcond_i_reg_1276_pp1_iter3_reg, tmp_2_reg_1316, ap_enable_reg_pp1_iter4, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1276_pp1_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_op2_assign_phi_fu_469_p4 <= tmp_2_reg_1316;
        else 
            ap_phi_mux_op2_assign_phi_fu_469_p4 <= op2_assign_reg_465;
        end if; 
    end process;


    ap_phi_mux_p_0160_0_phi_fu_538_p4_assign_proc : process(p_0160_0_reg_534, icmp_ln296_reg_1385_pp3_iter3_reg, trunc_ln858_7_reg_1420, ap_enable_reg_pp3_iter4, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (icmp_ln296_reg_1385_pp3_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_0160_0_phi_fu_538_p4 <= trunc_ln858_7_reg_1420;
        else 
            ap_phi_mux_p_0160_0_phi_fu_538_p4 <= p_0160_0_reg_534;
        end if; 
    end process;


    ap_phi_mux_p_084_0_phi_fu_492_p4_assign_proc : process(p_084_0_reg_488, icmp_ln282_reg_1335_pp2_iter3_reg, trunc_ln858_6_reg_1370, ap_enable_reg_pp2_iter4, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln282_reg_1335_pp2_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_084_0_phi_fu_492_p4 <= trunc_ln858_6_reg_1370;
        else 
            ap_phi_mux_p_084_0_phi_fu_492_p4 <= p_084_0_reg_488;
        end if; 
    end process;


    ap_phi_mux_p_088_0_i_phi_fu_446_p4_assign_proc : process(p_088_0_i_reg_442, icmp_ln53_reg_1220_pp0_iter3_reg, trunc_ln_reg_1266, ap_enable_reg_pp0_iter4, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (icmp_ln53_reg_1220_pp0_iter3_reg = ap_const_lv1_0))) then 
            ap_phi_mux_p_088_0_i_phi_fu_446_p4 <= trunc_ln_reg_1266;
        else 
            ap_phi_mux_p_088_0_i_phi_fu_446_p4 <= p_088_0_i_reg_442;
        end if; 
    end process;


    ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4_assign_proc : process(p_084_0_reg_488, icmp_ln278_reg_1331, ap_CS_fsm_state33, res_tmp_bits_0_reg_522)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state33) and (icmp_ln278_reg_1331 = ap_const_lv1_0))) then 
            ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4 <= p_084_0_reg_488;
        else 
            ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4 <= res_tmp_bits_0_reg_522;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_CS_fsm_state40, add_ln306_fu_1123_p2, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            ap_return <= add_ln306_fu_1123_p2;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    cross_mul_digits_dat_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter0, zext_ln80_fu_843_p1, grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_address0 <= zext_ln80_fu_843_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_address0 <= grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_address0;
        else 
            cross_mul_digits_dat_address0 <= "XXXXX";
        end if; 
    end process;


    cross_mul_digits_dat_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0, grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            cross_mul_digits_dat_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_ce0 <= grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce0;
        else 
            cross_mul_digits_dat_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_ce1 <= grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_ce1;
        else 
            cross_mul_digits_dat_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_we0 <= grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we0;
        else 
            cross_mul_digits_dat_we0 <= ap_const_logic_0;
        end if; 
    end process;


    cross_mul_digits_dat_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            cross_mul_digits_dat_we1 <= grp_karastuba_mul_templa_1_fu_577_cross_mul_digits_data_V_we1;
        else 
            cross_mul_digits_dat_we1 <= ap_const_logic_0;
        end if; 
    end process;

    empty_33_fu_899_p3 <= 
        ap_const_lv5_1F when (op2_assign_reg_465(0) = '1') else 
        ap_const_lv5_0;
    exitcond_i_fu_831_p2 <= "1" when (i_0_i1_reg_477 = ap_const_lv6_20) else "0";
    grp_CAT_I_I_I_O_1_fu_608_ap_start <= grp_CAT_I_I_I_O_1_fu_608_ap_start_reg;
    grp_karastuba_mul_templa_1_fu_577_ap_start <= grp_karastuba_mul_templa_1_fu_577_ap_start_reg;
    grp_karastuba_mul_templa_5_fu_586_ap_start <= grp_karastuba_mul_templa_5_fu_586_ap_start_reg;
    grp_karastuba_mul_templa_5_fu_597_ap_start <= grp_karastuba_mul_templa_5_fu_597_ap_start_reg;
    i_10_fu_690_p2 <= std_logic_vector(unsigned(i2_0_reg_419) + unsigned(ap_const_lv5_1));
    i_11_fu_707_p2 <= std_logic_vector(unsigned(i3_0_reg_430) + unsigned(ap_const_lv5_1));
    i_12_fu_740_p2 <= std_logic_vector(unsigned(i_0_i_reg_454) + unsigned(ap_const_lv6_1));
    i_13_fu_837_p2 <= std_logic_vector(unsigned(i_0_i1_reg_477) + unsigned(ap_const_lv6_1));
    i_14_fu_933_p2 <= std_logic_vector(unsigned(i4_0_reg_500) + unsigned(ap_const_lv6_1));
    i_15_fu_1023_p2 <= std_logic_vector(unsigned(i7_0_reg_546) + unsigned(ap_const_lv6_1));
    i_9_fu_661_p2 <= std_logic_vector(unsigned(i1_0_reg_407) + unsigned(ap_const_lv5_1));
    i_fu_644_p2 <= std_logic_vector(unsigned(i_0_reg_396) + unsigned(ap_const_lv5_1));
    icmp_ln255_fu_638_p2 <= "1" when (i_0_reg_396 = ap_const_lv5_10) else "0";
    icmp_ln256_fu_655_p2 <= "1" when (i1_0_reg_407 = ap_const_lv5_10) else "0";
    icmp_ln257_fu_684_p2 <= "1" when (i2_0_reg_419 = ap_const_lv5_10) else "0";
    icmp_ln258_fu_701_p2 <= "1" when (i3_0_reg_430 = ap_const_lv5_10) else "0";
    icmp_ln278_fu_922_p2 <= "1" when (rhs_tmp_bits_read = ap_const_lv2_0) else "0";
    icmp_ln282_fu_927_p2 <= "1" when (i4_0_reg_500 = ap_const_lv6_20) else "0";
    icmp_ln292_fu_1012_p2 <= "1" when (lhs_tmp_bits_read = ap_const_lv2_0) else "0";
    icmp_ln296_fu_1017_p2 <= "1" when (i7_0_reg_546 = ap_const_lv6_20) else "0";
    icmp_ln53_fu_734_p2 <= "1" when (i_0_i_reg_454 = ap_const_lv6_20) else "0";
    j_5_fu_1039_p2 <= std_logic_vector(unsigned(j8_0_reg_557) + unsigned(ap_const_lv7_1));
    j_fu_949_p2 <= std_logic_vector(unsigned(j_0_reg_511) + unsigned(ap_const_lv7_1));

    lhs0_digits_data_V_address0_assign_proc : process(zext_ln255_reg_1149, ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_address0 <= zext_ln255_reg_1149(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_address0;
        else 
            lhs0_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    lhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_586_lhs_digits_data_V_ce0;
        else 
            lhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_address0_assign_proc : process(zext_ln255_reg_1149, ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_address0 <= zext_ln255_reg_1149(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_address0;
        else 
            lhs0_tmp_digits_data_address0 <= "XXXX";
        end if; 
    end process;


    lhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_1_fu_577_lhs0_tmp_digits_data_V_ce0;
        else 
            lhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0, ap_CS_fsm_state7, zext_ln256_fu_678_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_address0 <= zext_ln256_fu_678_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_address0;
        else 
            lhs1_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    lhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_597_lhs_digits_data_V_ce0;
        else 
            lhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            lhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0, ap_CS_fsm_state7, zext_ln256_fu_678_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_address0 <= zext_ln256_fu_678_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_address0;
        else 
            lhs1_tmp_digits_data_address0 <= "XXXX";
        end if; 
    end process;


    lhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            lhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_1_fu_577_lhs1_tmp_digits_data_V_ce0;
        else 
            lhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            lhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    lhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state2, zext_ln255_fu_650_p1, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0, ap_block_pp2_stage0, zext_ln256_2_fu_673_p1, zext_ln285_fu_939_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            lhs_digits_data_V_address0 <= zext_ln285_fu_939_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            lhs_digits_data_V_address0 <= zext_ln256_2_fu_673_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            lhs_digits_data_V_address0 <= zext_ln255_fu_650_p1(5 - 1 downto 0);
        else 
            lhs_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    lhs_digits_data_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0, ap_CS_fsm_state2, ap_CS_fsm_state5, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            lhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            lhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_ln306_fu_1117_p0 <= mul_ln306_fu_1117_p00(2 - 1 downto 0);
    mul_ln306_fu_1117_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rhs_tmp_bits_read),4));
    mul_ln306_fu_1117_p1 <= mul_ln306_fu_1117_p10(2 - 1 downto 0);
    mul_ln306_fu_1117_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lhs_tmp_bits_read),4));
    mul_ln306_fu_1117_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln306_fu_1117_p0) * unsigned(mul_ln306_fu_1117_p1), 4));

    res_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state27, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0, ap_block_pp2_stage0, ap_block_pp3_stage0, zext_ln286_fu_944_p1, zext_ln300_fu_1034_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            res_digits_data_V_address0 <= zext_ln300_fu_1034_p1(6 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            res_digits_data_V_address0 <= zext_ln286_fu_944_p1(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_address0 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address0;
        else 
            res_digits_data_V_address0 <= "XXXXXX";
        end if; 
    end process;


    res_digits_data_V_address1_assign_proc : process(ap_CS_fsm_state27, res_digits_data_V_ad_reg_1349_pp2_iter3_reg, res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_address1 <= res_digits_data_V_ad_2_reg_1399_pp3_iter3_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_address1 <= res_digits_data_V_ad_reg_1349_pp2_iter3_reg;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_address1 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_address1;
        else 
            res_digits_data_V_address1 <= "XXXXXX";
        end if; 
    end process;


    res_digits_data_V_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_CS_fsm_pp2_stage0, ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state27, ap_enable_reg_pp2_iter0, ap_enable_reg_pp3_iter0, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0)
    begin
        if ((((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            res_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_ce0 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce0;
        else 
            res_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    res_digits_data_V_ce1_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_CS_fsm_state27, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1)
    begin
        if ((((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            res_digits_data_V_ce1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_ce1 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_ce1;
        else 
            res_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    res_digits_data_V_d0 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d0;

    res_digits_data_V_d1_assign_proc : process(ap_CS_fsm_state27, add_ln209_reg_1365, add_ln209_4_reg_1415, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1, ap_block_pp2_stage0, ap_block_pp3_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_d1 <= add_ln209_4_reg_1415;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then 
            res_digits_data_V_d1 <= add_ln209_reg_1365;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_d1 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_d1;
        else 
            res_digits_data_V_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    res_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state27, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_we0 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we0;
        else 
            res_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    res_digits_data_V_we1_assign_proc : process(ap_block_pp2_stage0_11001, ap_block_pp3_stage0_11001, ap_CS_fsm_state27, icmp_ln282_reg_1335_pp2_iter3_reg, icmp_ln296_reg_1385_pp3_iter3_reg, ap_enable_reg_pp2_iter4, ap_enable_reg_pp3_iter4, grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1)
    begin
        if ((((ap_enable_reg_pp3_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001) and (icmp_ln296_reg_1385_pp3_iter3_reg = ap_const_lv1_0)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (icmp_ln282_reg_1335_pp2_iter3_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            res_digits_data_V_we1 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            res_digits_data_V_we1 <= grp_CAT_I_I_I_O_1_fu_608_w_digits_data_V_we1;
        else 
            res_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_address0_assign_proc : process(zext_ln257_reg_1181, ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_address0 <= zext_ln257_reg_1181(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_address0;
        else 
            rhs0_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    rhs0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_586_rhs_digits_data_V_ce0;
        else 
            rhs0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_address0_assign_proc : process(zext_ln257_reg_1181, ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_address0 <= zext_ln257_reg_1181(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_tmp_digits_data_address0 <= grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_address0;
        else 
            rhs0_tmp_digits_data_address0 <= "XXXX";
        end if; 
    end process;


    rhs0_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs0_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_1_fu_577_rhs0_tmp_digits_data_V_ce0;
        else 
            rhs0_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs0_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs0_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0, ap_CS_fsm_state13, zext_ln258_fu_724_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_address0 <= zext_ln258_fu_724_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_address0;
        else 
            rhs1_digits_data_V_address0 <= "XXXX";
        end if; 
    end process;


    rhs1_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_597_rhs_digits_data_V_ce0;
        else 
            rhs1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            rhs1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_address0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0, ap_CS_fsm_state13, zext_ln258_fu_724_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_address0 <= zext_ln258_fu_724_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_tmp_digits_data_address0 <= grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_address0;
        else 
            rhs1_tmp_digits_data_address0 <= "XXXX";
        end if; 
    end process;


    rhs1_tmp_digits_data_ce0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0, ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            rhs1_tmp_digits_data_ce0 <= grp_karastuba_mul_templa_1_fu_577_rhs1_tmp_digits_data_V_ce0;
        else 
            rhs1_tmp_digits_data_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs1_tmp_digits_data_we0_assign_proc : process(ap_CS_fsm_state13)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_1;
        else 
            rhs1_tmp_digits_data_we0 <= ap_const_logic_0;
        end if; 
    end process;


    rhs_digits_data_V_address0_assign_proc : process(ap_CS_fsm_pp3_stage0, ap_CS_fsm_state8, zext_ln257_fu_696_p1, ap_CS_fsm_state11, ap_enable_reg_pp3_iter0, ap_block_pp3_stage0, zext_ln258_2_fu_719_p1, zext_ln299_fu_1029_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp3_stage0) and (ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0))) then 
            rhs_digits_data_V_address0 <= zext_ln299_fu_1029_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            rhs_digits_data_V_address0 <= zext_ln258_2_fu_719_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rhs_digits_data_V_address0 <= zext_ln257_fu_696_p1(5 - 1 downto 0);
        else 
            rhs_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    rhs_digits_data_V_ce0_assign_proc : process(ap_block_pp3_stage0_11001, ap_CS_fsm_pp3_stage0, ap_CS_fsm_state8, ap_CS_fsm_state11, ap_enable_reg_pp3_iter0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state8) or ((ap_enable_reg_pp3_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp3_stage0) and (ap_const_boolean_0 = ap_block_pp3_stage0_11001)))) then 
            rhs_digits_data_V_ce0 <= ap_const_logic_1;
        else 
            rhs_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln701_2_fu_869_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_469_p4(0) = '1') else 
        ap_const_lv64_0;
    select_ln701_fu_861_p3 <= 
        ap_const_lv65_1FFFFFFFFFFFFFFFF when (ap_phi_mux_op2_assign_phi_fu_469_p4(0) = '1') else 
        ap_const_lv65_0;
        sext_ln95_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln95_fu_907_p2),7));

    tmp_V_6_fu_775_p2 <= std_logic_vector(unsigned(zext_ln700_18_fu_772_p1) + unsigned(zext_ln53_fu_764_p1));
    tmp_V_7_fu_855_p2 <= std_logic_vector(unsigned(zext_ln180_fu_849_p1) - unsigned(zext_ln701_fu_852_p1));
    tmp_V_8_fu_880_p2 <= std_logic_vector(unsigned(select_ln701_fu_861_p3) + unsigned(tmp_V_7_reg_1310));
    tmp_V_9_fu_1070_p2 <= std_logic_vector(unsigned(zext_ln700_24_fu_1067_p1) + unsigned(zext_ln296_fu_1059_p1));
    tmp_V_fu_980_p2 <= std_logic_vector(unsigned(zext_ln700_21_fu_977_p1) + unsigned(zext_ln282_fu_969_p1));
    trunc_ln701_fu_877_p1 <= tmp_V_7_reg_1310(64 - 1 downto 0);
    xor_ln256_fu_667_p2 <= (i1_0_reg_407 xor ap_const_lv5_10);
    xor_ln258_fu_713_p2 <= (i3_0_reg_430 xor ap_const_lv5_10);

    z0_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln58_fu_746_p1, ap_CS_fsm_state27, grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0, grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z0_digits_data_V_address0 <= zext_ln58_fu_746_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z0_digits_data_V_address0 <= grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_address0;
        else 
            z0_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    z0_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state27, grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0, grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z0_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z0_digits_data_V_ce0 <= grp_CAT_I_I_I_O_1_fu_608_x0_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce0;
        else 
            z0_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_ce1 <= grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_ce1;
        else 
            z0_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_we0 <= grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we0;
        else 
            z0_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z0_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z0_digits_data_V_we1 <= grp_karastuba_mul_templa_5_fu_586_res_digits_data_V_we1;
        else 
            z0_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_address0_assign_proc : process(zext_ln80_reg_1285_pp1_iter3_reg, ap_CS_fsm_state27, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0, ap_block_pp1_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_address0 <= zext_ln80_reg_1285_pp1_iter3_reg(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z1_digits_data_V_address0 <= grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_address0;
        else 
            z1_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    z1_digits_data_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_CS_fsm_state27, ap_enable_reg_pp1_iter4, grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1))) then 
            z1_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z1_digits_data_V_ce0 <= grp_CAT_I_I_I_O_1_fu_608_x1_digits_data_V_ce0;
        else 
            z1_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z1_digits_data_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, exitcond_i_reg_1276_pp1_iter3_reg, ap_enable_reg_pp1_iter4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter4 = ap_const_logic_1) and (exitcond_i_reg_1276_pp1_iter3_reg = ap_const_lv1_0))) then 
            z1_digits_data_V_we0 <= ap_const_logic_1;
        else 
            z1_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    z1_tmp_bits_fu_916_p2 <= std_logic_vector(signed(sext_ln95_fu_912_p1) - signed(zext_ln63_7_reg_1271));

    z2_digits_data_V_address0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln58_fu_746_p1, ap_CS_fsm_state27, grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0, grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z2_digits_data_V_address0 <= zext_ln58_fu_746_p1(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z2_digits_data_V_address0 <= grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_address0 <= grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_address0;
        else 
            z2_digits_data_V_address0 <= "XXXXX";
        end if; 
    end process;


    z2_digits_data_V_ce0_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_CS_fsm_state27, grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0, grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            z2_digits_data_V_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            z2_digits_data_V_ce0 <= grp_CAT_I_I_I_O_1_fu_608_x2_digits_data_V_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_ce0 <= grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce0;
        else 
            z2_digits_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_ce1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_ce1 <= grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_ce1;
        else 
            z2_digits_data_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we0_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_we0 <= grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we0;
        else 
            z2_digits_data_V_we0 <= ap_const_logic_0;
        end if; 
    end process;


    z2_digits_data_V_we1_assign_proc : process(ap_CS_fsm_state14, grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            z2_digits_data_V_we1 <= grp_karastuba_mul_templa_5_fu_597_res_digits_data_V_we1;
        else 
            z2_digits_data_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln180_fu_849_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(cross_mul_digits_dat_4_reg_1300),65));
    zext_ln209_fu_752_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z0_digits_data_V_loa_reg_1244),65));
    zext_ln255_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_reg_396),64));
    zext_ln256_2_fu_673_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln256_fu_667_p2),64));
    zext_ln256_fu_678_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_reg_407),64));
    zext_ln257_fu_696_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_reg_419),64));
    zext_ln258_2_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln258_fu_713_p2),64));
    zext_ln258_fu_724_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i3_0_reg_430),64));
    zext_ln266_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_karastuba_mul_templa_1_fu_577_ap_return),5));
    zext_ln282_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_084_0_phi_fu_492_p4),66));
    zext_ln285_fu_939_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i4_0_reg_500),64));
    zext_ln286_1_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_618),65));
    zext_ln286_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_511),64));
    zext_ln292_fu_1008_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_res_tmp_bits_0_phi_fu_526_p4),3));
    zext_ln296_fu_1059_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0160_0_phi_fu_538_p4),66));
    zext_ln299_fu_1029_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i7_0_reg_546),64));
    zext_ln300_1_fu_1045_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_626),65));
    zext_ln300_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j8_0_reg_557),64));
    zext_ln304_fu_1098_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_0160_0_reg_534),3));
    zext_ln306_fu_1107_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(res_tmp_bits_1_reg_568),4));
    zext_ln53_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_446_p4),66));
    zext_ln58_fu_746_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_454),64));
    zext_ln63_4_fu_805_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z0_tmp_bits_reg_1205),5));
    zext_ln63_5_fu_808_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_tmp_bits_reg_1210),5));
    zext_ln63_6_fu_817_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln63_fu_811_p2),6));
    zext_ln63_7_fu_827_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_tmp_bits_fu_821_p2),7));
    zext_ln63_fu_801_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_088_0_i_reg_442),6));
    zext_ln700_17_fu_768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_088_0_i_phi_fu_446_p4),64));
    zext_ln700_18_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_reg_1256),66));
    zext_ln700_19_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_634),65));
    zext_ln700_20_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_084_0_phi_fu_492_p4),64));
    zext_ln700_21_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_14_reg_1360),66));
    zext_ln700_22_fu_1049_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(reg_634),65));
    zext_ln700_23_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0160_0_phi_fu_538_p4),64));
    zext_ln700_24_fu_1067_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln700_16_reg_1410),66));
    zext_ln700_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_digits_data_V_loa_reg_1250),65));
    zext_ln701_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add2_digits_data_V_l_reg_1305),65));
    zext_ln80_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i1_reg_477),64));
end behav;
