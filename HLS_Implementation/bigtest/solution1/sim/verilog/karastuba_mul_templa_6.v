// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_templa_6 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lhs_tmp_bits_read,
        lhs_digits_data_address0,
        lhs_digits_data_ce0,
        lhs_digits_data_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_address0,
        rhs_digits_data_ce0,
        rhs_digits_data_q0,
        res_digits_data_address0,
        res_digits_data_ce0,
        res_digits_data_we0,
        res_digits_data_d0,
        res_digits_data_q0,
        res_digits_data_address1,
        res_digits_data_ce1,
        res_digits_data_we1,
        res_digits_data_d1,
        res_digits_data_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_pp0_stage0 = 20'd1024;
parameter    ap_ST_fsm_state14 = 20'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 20'd4096;
parameter    ap_ST_fsm_state18 = 20'd8192;
parameter    ap_ST_fsm_state19 = 20'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 20'd32768;
parameter    ap_ST_fsm_state25 = 20'd65536;
parameter    ap_ST_fsm_pp3_stage0 = 20'd131072;
parameter    ap_ST_fsm_state31 = 20'd262144;
parameter    ap_ST_fsm_state32 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] lhs_tmp_bits_read;
output  [3:0] lhs_digits_data_address0;
output   lhs_digits_data_ce0;
input  [31:0] lhs_digits_data_q0;
input  [1:0] rhs_tmp_bits_read;
output  [3:0] rhs_digits_data_address0;
output   rhs_digits_data_ce0;
input  [31:0] rhs_digits_data_q0;
output  [4:0] res_digits_data_address0;
output   res_digits_data_ce0;
output   res_digits_data_we0;
output  [31:0] res_digits_data_d0;
input  [31:0] res_digits_data_q0;
output  [4:0] res_digits_data_address1;
output   res_digits_data_ce1;
output   res_digits_data_we1;
output  [31:0] res_digits_data_d1;
input  [31:0] res_digits_data_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[3:0] lhs_digits_data_address0;
reg lhs_digits_data_ce0;
reg[3:0] rhs_digits_data_address0;
reg rhs_digits_data_ce0;
reg[4:0] res_digits_data_address0;
reg res_digits_data_ce0;
reg res_digits_data_we0;
reg[4:0] res_digits_data_address1;
reg res_digits_data_ce1;
reg res_digits_data_we1;
reg[31:0] res_digits_data_d1;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] tmp_0_i_reg_448;
reg   [4:0] i_0_i_reg_460;
reg   [0:0] needDown_0_i_reg_471;
reg   [4:0] i_0_i2_reg_483;
reg   [4:0] i4_0_reg_494;
reg   [1:0] tmp_0_reg_506;
reg   [5:0] j_0_reg_518;
reg   [1:0] tmp6_0_reg_541;
reg   [4:0] i7_0_reg_553;
reg   [5:0] j8_0_reg_565;
reg   [31:0] reg_626;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state20_pp2_stage0_iter0;
wire    ap_block_state21_pp2_stage0_iter1;
wire    ap_block_state22_pp2_stage0_iter2;
wire    ap_block_state23_pp2_stage0_iter3;
wire    ap_block_state24_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln282_reg_1309;
reg   [31:0] reg_626_pp2_iter2_reg;
reg   [31:0] reg_626_pp3_iter2_reg;
wire    ap_block_state26_pp3_stage0_iter0;
wire    ap_block_state27_pp3_stage0_iter1;
wire    ap_block_state28_pp3_stage0_iter2;
wire    ap_block_state29_pp3_stage0_iter3;
wire    ap_block_state30_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln296_reg_1364;
wire   [3:0] i_fu_636_p2;
reg   [3:0] i_reg_1140;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln255_fu_642_p1;
reg   [63:0] zext_ln255_reg_1145;
wire   [0:0] icmp_ln255_fu_630_p2;
wire   [3:0] i_7_fu_653_p2;
reg   [3:0] i_7_reg_1159;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln256_fu_647_p2;
wire   [3:0] i_8_fu_682_p2;
reg   [3:0] i_8_reg_1172;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln257_fu_688_p1;
reg   [63:0] zext_ln257_reg_1177;
wire   [0:0] icmp_ln257_fu_676_p2;
wire   [3:0] i_9_fu_699_p2;
reg   [3:0] i_9_reg_1191;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln258_fu_693_p2;
wire   [3:0] grp_mul_I_O_fu_594_ap_return;
reg   [3:0] res_tmp_bits_write_a_reg_1201;
wire    ap_CS_fsm_state10;
wire    grp_mul_I_O_fu_594_ap_ready;
wire    grp_mul_I_O_fu_594_ap_done;
wire    grp_mul_I_O_fu_605_ap_ready;
wire    grp_mul_I_O_fu_605_ap_done;
wire    grp_karastuba_mul_templa_2_fu_585_ap_ready;
wire    grp_karastuba_mul_templa_2_fu_585_ap_done;
reg    ap_block_state10_on_subcall_done;
wire   [3:0] grp_mul_I_O_fu_605_ap_return;
reg   [3:0] res_tmp_bits_write_a_1_reg_1206;
wire   [4:0] zext_ln266_fu_722_p1;
reg   [4:0] zext_ln266_reg_1211;
wire   [0:0] icmp_ln53_fu_726_p2;
reg   [0:0] icmp_ln53_reg_1216;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state11_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_1216_pp0_iter1_reg;
wire   [4:0] i_10_fu_732_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln58_fu_738_p1;
reg   [63:0] zext_ln58_reg_1225;
reg   [63:0] zext_ln58_reg_1225_pp0_iter1_reg;
wire   [31:0] z0_digits_data_q0;
reg   [31:0] z0_digits_data_load_reg_1240;
wire   [31:0] z2_digits_data_q0;
reg   [31:0] z2_digits_data_load_reg_1245;
wire   [32:0] add_ln59_fu_752_p2;
reg   [32:0] add_ln59_reg_1250;
reg    ap_enable_reg_pp0_iter2;
wire   [6:0] zext_ln63_7_fu_822_p1;
reg   [6:0] zext_ln63_7_reg_1260;
wire    ap_CS_fsm_state14;
wire   [0:0] exitcond_i_fu_826_p2;
reg   [0:0] exitcond_i_reg_1265;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state15_pp1_stage0_iter0;
wire    ap_block_state16_pp1_stage0_iter1;
wire    ap_block_state17_pp1_stage0_iter2;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_1265_pp1_iter1_reg;
wire   [4:0] i_11_fu_832_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln80_fu_838_p1;
reg   [63:0] zext_ln80_reg_1274;
reg   [63:0] zext_ln80_reg_1274_pp1_iter1_reg;
wire   [32:0] tmp_11_fu_852_p2;
reg   [32:0] tmp_11_reg_1289;
reg    ap_enable_reg_pp1_iter2;
wire   [6:0] z1_tmp_bits_fu_914_p2;
reg   [6:0] z1_tmp_bits_reg_1300;
wire    ap_CS_fsm_state18;
wire   [0:0] icmp_ln278_fu_920_p2;
reg   [0:0] icmp_ln278_reg_1305;
wire    ap_CS_fsm_state19;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_ready;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_done;
wire   [0:0] icmp_ln282_fu_925_p2;
reg   [0:0] icmp_ln282_reg_1309_pp2_iter1_reg;
reg   [0:0] icmp_ln282_reg_1309_pp2_iter2_reg;
reg   [0:0] icmp_ln282_reg_1309_pp2_iter3_reg;
wire   [4:0] i_12_fu_931_p2;
reg   [4:0] i_12_reg_1313;
reg    ap_enable_reg_pp2_iter0;
reg   [4:0] res_digits_data_addr_reg_1318;
reg   [4:0] res_digits_data_addr_reg_1318_pp2_iter1_reg;
reg   [4:0] res_digits_data_addr_reg_1318_pp2_iter2_reg;
reg   [4:0] res_digits_data_addr_reg_1318_pp2_iter3_reg;
wire   [5:0] j_fu_942_p2;
reg   [31:0] lhs_digits_data_load_3_reg_1334;
reg    ap_enable_reg_pp2_iter2;
wire   [32:0] add_ln286_fu_961_p2;
reg   [32:0] add_ln286_reg_1339;
wire   [31:0] add_ln287_fu_990_p2;
reg   [31:0] add_ln287_reg_1344;
reg   [1:0] trunc_ln1_reg_1349;
reg    ap_enable_reg_pp2_iter3;
wire   [2:0] zext_ln292_fu_1005_p1;
reg   [2:0] zext_ln292_reg_1354;
wire    ap_CS_fsm_state25;
wire   [0:0] icmp_ln292_fu_1009_p2;
wire   [0:0] icmp_ln296_fu_1014_p2;
reg   [0:0] icmp_ln296_reg_1364_pp3_iter1_reg;
reg   [0:0] icmp_ln296_reg_1364_pp3_iter2_reg;
reg   [0:0] icmp_ln296_reg_1364_pp3_iter3_reg;
wire   [4:0] i_13_fu_1020_p2;
reg   [4:0] i_13_reg_1368;
reg    ap_enable_reg_pp3_iter0;
reg   [4:0] res_digits_data_addr_1_reg_1373;
reg   [4:0] res_digits_data_addr_1_reg_1373_pp3_iter1_reg;
reg   [4:0] res_digits_data_addr_1_reg_1373_pp3_iter2_reg;
reg   [4:0] res_digits_data_addr_1_reg_1373_pp3_iter3_reg;
wire   [5:0] j_4_fu_1031_p2;
reg   [31:0] rhs_digits_data_load_3_reg_1389;
reg    ap_enable_reg_pp3_iter2;
wire   [32:0] add_ln300_fu_1050_p2;
reg   [32:0] add_ln300_reg_1394;
wire   [31:0] add_ln301_fu_1079_p2;
reg   [31:0] add_ln301_reg_1399;
reg   [1:0] trunc_ln2_reg_1404;
reg    ap_enable_reg_pp3_iter3;
wire   [2:0] add_ln304_fu_1098_p2;
wire    ap_CS_fsm_state31;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state15;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state20;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state26;
reg    ap_enable_reg_pp3_iter4;
reg   [2:0] lhs0_digits_data_address0;
reg    lhs0_digits_data_ce0;
reg    lhs0_digits_data_we0;
wire   [31:0] lhs0_digits_data_q0;
reg   [2:0] lhs1_digits_data_address0;
reg    lhs1_digits_data_ce0;
reg    lhs1_digits_data_we0;
wire   [31:0] lhs1_digits_data_q0;
reg   [2:0] rhs0_digits_data_address0;
reg    rhs0_digits_data_ce0;
reg    rhs0_digits_data_we0;
wire   [31:0] rhs0_digits_data_q0;
reg   [2:0] rhs1_digits_data_address0;
reg    rhs1_digits_data_ce0;
reg    rhs1_digits_data_we0;
wire   [31:0] rhs1_digits_data_q0;
reg   [2:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [31:0] lhs0_tmp_digits_data_q0;
reg   [2:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [31:0] lhs1_tmp_digits_data_q0;
reg   [2:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [31:0] rhs0_tmp_digits_data_q0;
reg   [2:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [31:0] rhs1_tmp_digits_data_q0;
reg   [3:0] z0_digits_data_address0;
reg    z0_digits_data_ce0;
reg    z0_digits_data_we0;
reg    z0_digits_data_ce1;
reg    z0_digits_data_we1;
wire   [31:0] z0_digits_data_q1;
reg   [3:0] z2_digits_data_address0;
reg    z2_digits_data_ce0;
reg    z2_digits_data_we0;
reg    z2_digits_data_ce1;
reg    z2_digits_data_we1;
wire   [31:0] z2_digits_data_q1;
reg   [3:0] cross_mul_digits_dat_address0;
reg    cross_mul_digits_dat_ce0;
reg    cross_mul_digits_dat_we0;
wire   [31:0] cross_mul_digits_dat_q0;
reg    cross_mul_digits_dat_ce1;
reg    cross_mul_digits_dat_we1;
wire   [31:0] cross_mul_digits_dat_q1;
reg   [3:0] add2_digits_data_address0;
reg    add2_digits_data_ce0;
reg    add2_digits_data_we0;
wire   [31:0] add2_digits_data_d0;
wire   [31:0] add2_digits_data_q0;
reg   [3:0] z1_digits_data_address0;
reg    z1_digits_data_ce0;
reg    z1_digits_data_we0;
wire   [31:0] z1_digits_data_d0;
wire   [31:0] z1_digits_data_q0;
wire    grp_karastuba_mul_templa_2_fu_585_ap_start;
wire    grp_karastuba_mul_templa_2_fu_585_ap_idle;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_ce0;
wire   [2:0] grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address0;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce0;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we0;
wire   [31:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d0;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address1;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce1;
wire    grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we1;
wire   [31:0] grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d1;
wire   [3:0] grp_karastuba_mul_templa_2_fu_585_ap_return;
wire    grp_mul_I_O_fu_594_ap_start;
wire    grp_mul_I_O_fu_594_ap_idle;
wire   [2:0] grp_mul_I_O_fu_594_u_digits_data_address0;
wire    grp_mul_I_O_fu_594_u_digits_data_ce0;
wire   [2:0] grp_mul_I_O_fu_594_v_digits_data_address0;
wire    grp_mul_I_O_fu_594_v_digits_data_ce0;
wire   [3:0] grp_mul_I_O_fu_594_w_digits_data_address0;
wire    grp_mul_I_O_fu_594_w_digits_data_ce0;
wire    grp_mul_I_O_fu_594_w_digits_data_we0;
wire   [31:0] grp_mul_I_O_fu_594_w_digits_data_d0;
wire   [3:0] grp_mul_I_O_fu_594_w_digits_data_address1;
wire    grp_mul_I_O_fu_594_w_digits_data_ce1;
wire    grp_mul_I_O_fu_594_w_digits_data_we1;
wire   [31:0] grp_mul_I_O_fu_594_w_digits_data_d1;
wire    grp_mul_I_O_fu_605_ap_start;
wire    grp_mul_I_O_fu_605_ap_idle;
wire   [2:0] grp_mul_I_O_fu_605_u_digits_data_address0;
wire    grp_mul_I_O_fu_605_u_digits_data_ce0;
wire   [2:0] grp_mul_I_O_fu_605_v_digits_data_address0;
wire    grp_mul_I_O_fu_605_v_digits_data_ce0;
wire   [3:0] grp_mul_I_O_fu_605_w_digits_data_address0;
wire    grp_mul_I_O_fu_605_w_digits_data_ce0;
wire    grp_mul_I_O_fu_605_w_digits_data_we0;
wire   [31:0] grp_mul_I_O_fu_605_w_digits_data_d0;
wire   [3:0] grp_mul_I_O_fu_605_w_digits_data_address1;
wire    grp_mul_I_O_fu_605_w_digits_data_ce1;
wire    grp_mul_I_O_fu_605_w_digits_data_we1;
wire   [31:0] grp_mul_I_O_fu_605_w_digits_data_d1;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_start;
wire    grp_CAT_I_I_I_O_2_fu_616_ap_idle;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_ce0;
wire   [3:0] grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_ce0;
wire   [4:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address0;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce0;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we0;
wire   [31:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d0;
wire   [4:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address1;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce1;
wire    grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we1;
wire   [31:0] grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d1;
reg   [3:0] i_0_reg_402;
wire    ap_CS_fsm_state3;
reg   [3:0] i1_0_reg_413;
wire    ap_CS_fsm_state5;
reg   [3:0] i2_0_reg_425;
wire    ap_CS_fsm_state7;
reg   [3:0] i3_0_reg_436;
wire    ap_CS_fsm_state9;
reg   [4:0] ap_phi_mux_i4_0_phi_fu_498_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_tmp_0_phi_fu_510_p4;
reg   [1:0] ap_phi_mux_res_tmp_bits_0_phi_fu_533_p4;
reg   [1:0] res_tmp_bits_0_reg_529;
reg   [1:0] ap_phi_mux_tmp6_0_phi_fu_545_p4;
wire    ap_block_pp3_stage0;
reg   [4:0] ap_phi_mux_i7_0_phi_fu_557_p4;
reg   [2:0] res_tmp_bits_1_reg_576;
reg    grp_karastuba_mul_templa_2_fu_585_ap_start_reg;
reg    grp_mul_I_O_fu_594_ap_start_reg;
reg    grp_mul_I_O_fu_605_ap_start_reg;
reg    grp_CAT_I_I_I_O_2_fu_616_ap_start_reg;
wire   [63:0] zext_ln256_fu_665_p1;
wire   [63:0] zext_ln256_2_fu_670_p1;
wire   [63:0] zext_ln258_fu_711_p1;
wire   [63:0] zext_ln258_2_fu_716_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage0;
wire   [63:0] zext_ln286_1_fu_937_p1;
wire   [63:0] zext_ln285_1_fu_948_p1;
wire   [63:0] zext_ln300_1_fu_1026_p1;
wire   [63:0] zext_ln299_1_fu_1037_p1;
wire   [3:0] xor_ln256_fu_659_p2;
wire   [3:0] xor_ln258_fu_705_p2;
wire   [32:0] zext_ln59_fu_744_p1;
wire   [32:0] zext_ln58_3_fu_748_p1;
wire   [33:0] zext_ln59_2_fu_766_p1;
wire   [33:0] zext_ln53_fu_758_p1;
wire   [31:0] zext_ln58_4_fu_762_p1;
wire   [31:0] add_ln60_2_fu_775_p2;
wire   [33:0] tmp_10_fu_769_p2;
wire   [4:0] zext_ln63_5_fu_803_p1;
wire   [4:0] zext_ln63_4_fu_800_p1;
wire   [4:0] add_ln63_fu_806_p2;
wire   [5:0] zext_ln63_fu_796_p1;
wire   [5:0] zext_ln63_6_fu_812_p1;
wire   [5:0] add2_tmp_bits_fu_816_p2;
wire   [32:0] zext_ln80_2_fu_844_p1;
wire   [32:0] zext_ln81_fu_848_p1;
wire   [32:0] select_ln82_fu_858_p3;
wire   [32:0] tmp_12_fu_877_p2;
wire   [31:0] trunc_ln82_fu_874_p1;
wire   [31:0] select_ln82_2_fu_866_p3;
wire   [4:0] empty_29_fu_897_p3;
wire   [4:0] add_ln95_fu_905_p2;
wire  signed [6:0] sext_ln95_fu_910_p1;
wire   [32:0] zext_ln286_fu_953_p1;
wire   [32:0] zext_ln285_fu_957_p1;
wire   [33:0] zext_ln286_2_fu_975_p1;
wire   [33:0] zext_ln282_fu_967_p1;
wire   [31:0] zext_ln285_2_fu_971_p1;
wire   [31:0] add_ln287_1_fu_984_p2;
wire   [33:0] tmp_fu_978_p2;
wire   [32:0] zext_ln300_fu_1042_p1;
wire   [32:0] zext_ln299_fu_1046_p1;
wire   [33:0] zext_ln300_2_fu_1064_p1;
wire   [33:0] zext_ln296_fu_1056_p1;
wire   [31:0] zext_ln299_2_fu_1060_p1;
wire   [31:0] add_ln301_1_fu_1073_p2;
wire   [33:0] tmp_14_fu_1067_p2;
wire   [2:0] zext_ln304_fu_1094_p1;
wire    ap_CS_fsm_state32;
wire   [1:0] mul_ln306_fu_1113_p0;
wire   [1:0] mul_ln306_fu_1113_p1;
wire   [3:0] zext_ln306_fu_1103_p1;
wire   [3:0] mul_ln306_fu_1113_p2;
wire   [3:0] add_ln306_fu_1119_p2;
reg   [3:0] ap_return_preg;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [3:0] mul_ln306_fu_1113_p00;
wire   [3:0] mul_ln306_fu_1113_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 grp_karastuba_mul_templa_2_fu_585_ap_start_reg = 1'b0;
#0 grp_mul_I_O_fu_594_ap_start_reg = 1'b0;
#0 grp_mul_I_O_fu_605_ap_start_reg = 1'b0;
#0 grp_CAT_I_I_I_O_2_fu_616_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_address0),
    .ce0(lhs0_digits_data_ce0),
    .we0(lhs0_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs0_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_address0),
    .ce0(lhs1_digits_data_ce0),
    .we0(lhs1_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs1_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_address0),
    .ce0(rhs0_digits_data_ce0),
    .we0(rhs0_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs0_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_address0),
    .ce0(rhs1_digits_data_ce0),
    .we0(rhs1_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs1_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_temcud #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_temmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z0_digits_data_address0),
    .ce0(z0_digits_data_ce0),
    .we0(z0_digits_data_we0),
    .d0(grp_mul_I_O_fu_594_w_digits_data_d0),
    .q0(z0_digits_data_q0),
    .address1(grp_mul_I_O_fu_594_w_digits_data_address1),
    .ce1(z0_digits_data_ce1),
    .we1(z0_digits_data_we1),
    .d1(grp_mul_I_O_fu_594_w_digits_data_d1),
    .q1(z0_digits_data_q1)
);

karastuba_mul_temmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z2_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_digits_data_address0),
    .ce0(z2_digits_data_ce0),
    .we0(z2_digits_data_we0),
    .d0(grp_mul_I_O_fu_605_w_digits_data_d0),
    .q0(z2_digits_data_q0),
    .address1(grp_mul_I_O_fu_605_w_digits_data_address1),
    .ce1(z2_digits_data_ce1),
    .we1(z2_digits_data_we1),
    .d1(grp_mul_I_O_fu_605_w_digits_data_d1),
    .q1(z2_digits_data_q1)
);

karastuba_mul_temmb6 #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
cross_mul_digits_dat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cross_mul_digits_dat_address0),
    .ce0(cross_mul_digits_dat_ce0),
    .we0(cross_mul_digits_dat_we0),
    .d0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d0),
    .q0(cross_mul_digits_dat_q0),
    .address1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address1),
    .ce1(cross_mul_digits_dat_ce1),
    .we1(cross_mul_digits_dat_we1),
    .d1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d1),
    .q1(cross_mul_digits_dat_q1)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
add2_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_address0),
    .ce0(add2_digits_data_ce0),
    .we0(add2_digits_data_we0),
    .d0(add2_digits_data_d0),
    .q0(add2_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
z1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_address0),
    .ce0(z1_digits_data_ce0),
    .we0(z1_digits_data_we0),
    .d0(z1_digits_data_d0),
    .q0(z1_digits_data_q0)
);

karastuba_mul_templa_2 grp_karastuba_mul_templa_2_fu_585(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_2_fu_585_ap_start),
    .ap_done(grp_karastuba_mul_templa_2_fu_585_ap_done),
    .ap_idle(grp_karastuba_mul_templa_2_fu_585_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_2_fu_585_ap_ready),
    .lhs0_tmp_digits_data_address0(grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_address0),
    .lhs0_tmp_digits_data_ce0(grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_ce0),
    .lhs0_tmp_digits_data_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_address0(grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_address0),
    .lhs1_tmp_digits_data_ce0(grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_ce0),
    .lhs1_tmp_digits_data_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_address0(grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_address0),
    .rhs0_tmp_digits_data_ce0(grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_ce0),
    .rhs0_tmp_digits_data_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_address0(grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_address0),
    .rhs1_tmp_digits_data_ce0(grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_ce0),
    .rhs1_tmp_digits_data_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_digits_data_address0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address0),
    .cross_mul_digits_data_ce0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce0),
    .cross_mul_digits_data_we0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we0),
    .cross_mul_digits_data_d0(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d0),
    .cross_mul_digits_data_q0(cross_mul_digits_dat_q0),
    .cross_mul_digits_data_address1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address1),
    .cross_mul_digits_data_ce1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce1),
    .cross_mul_digits_data_we1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we1),
    .cross_mul_digits_data_d1(grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_d1),
    .cross_mul_digits_data_q1(cross_mul_digits_dat_q1),
    .ap_return(grp_karastuba_mul_templa_2_fu_585_ap_return)
);

mul_I_O grp_mul_I_O_fu_594(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mul_I_O_fu_594_ap_start),
    .ap_done(grp_mul_I_O_fu_594_ap_done),
    .ap_idle(grp_mul_I_O_fu_594_ap_idle),
    .ap_ready(grp_mul_I_O_fu_594_ap_ready),
    .u_tmp_bits_read(2'd0),
    .u_digits_data_address0(grp_mul_I_O_fu_594_u_digits_data_address0),
    .u_digits_data_ce0(grp_mul_I_O_fu_594_u_digits_data_ce0),
    .u_digits_data_q0(lhs0_digits_data_q0),
    .v_tmp_bits_read(2'd0),
    .v_digits_data_address0(grp_mul_I_O_fu_594_v_digits_data_address0),
    .v_digits_data_ce0(grp_mul_I_O_fu_594_v_digits_data_ce0),
    .v_digits_data_q0(rhs0_digits_data_q0),
    .w_digits_data_address0(grp_mul_I_O_fu_594_w_digits_data_address0),
    .w_digits_data_ce0(grp_mul_I_O_fu_594_w_digits_data_ce0),
    .w_digits_data_we0(grp_mul_I_O_fu_594_w_digits_data_we0),
    .w_digits_data_d0(grp_mul_I_O_fu_594_w_digits_data_d0),
    .w_digits_data_q0(z0_digits_data_q0),
    .w_digits_data_address1(grp_mul_I_O_fu_594_w_digits_data_address1),
    .w_digits_data_ce1(grp_mul_I_O_fu_594_w_digits_data_ce1),
    .w_digits_data_we1(grp_mul_I_O_fu_594_w_digits_data_we1),
    .w_digits_data_d1(grp_mul_I_O_fu_594_w_digits_data_d1),
    .w_digits_data_q1(z0_digits_data_q1),
    .ap_return(grp_mul_I_O_fu_594_ap_return)
);

mul_I_O grp_mul_I_O_fu_605(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mul_I_O_fu_605_ap_start),
    .ap_done(grp_mul_I_O_fu_605_ap_done),
    .ap_idle(grp_mul_I_O_fu_605_ap_idle),
    .ap_ready(grp_mul_I_O_fu_605_ap_ready),
    .u_tmp_bits_read(2'd0),
    .u_digits_data_address0(grp_mul_I_O_fu_605_u_digits_data_address0),
    .u_digits_data_ce0(grp_mul_I_O_fu_605_u_digits_data_ce0),
    .u_digits_data_q0(lhs1_digits_data_q0),
    .v_tmp_bits_read(2'd0),
    .v_digits_data_address0(grp_mul_I_O_fu_605_v_digits_data_address0),
    .v_digits_data_ce0(grp_mul_I_O_fu_605_v_digits_data_ce0),
    .v_digits_data_q0(rhs1_digits_data_q0),
    .w_digits_data_address0(grp_mul_I_O_fu_605_w_digits_data_address0),
    .w_digits_data_ce0(grp_mul_I_O_fu_605_w_digits_data_ce0),
    .w_digits_data_we0(grp_mul_I_O_fu_605_w_digits_data_we0),
    .w_digits_data_d0(grp_mul_I_O_fu_605_w_digits_data_d0),
    .w_digits_data_q0(z2_digits_data_q0),
    .w_digits_data_address1(grp_mul_I_O_fu_605_w_digits_data_address1),
    .w_digits_data_ce1(grp_mul_I_O_fu_605_w_digits_data_ce1),
    .w_digits_data_we1(grp_mul_I_O_fu_605_w_digits_data_we1),
    .w_digits_data_d1(grp_mul_I_O_fu_605_w_digits_data_d1),
    .w_digits_data_q1(z2_digits_data_q1),
    .ap_return(grp_mul_I_O_fu_605_ap_return)
);

CAT_I_I_I_O_2 grp_CAT_I_I_I_O_2_fu_616(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_2_fu_616_ap_start),
    .ap_done(grp_CAT_I_I_I_O_2_fu_616_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_2_fu_616_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_2_fu_616_ap_ready),
    .x0_digits_data_address0(grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_address0),
    .x0_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_ce0),
    .x0_digits_data_q0(z0_digits_data_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_1300),
    .x1_digits_data_address0(grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_address0),
    .x1_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_ce0),
    .x1_digits_data_q0(z1_digits_data_q0),
    .x2_digits_data_address0(grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_address0),
    .x2_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_ce0),
    .x2_digits_data_q0(z2_digits_data_q0),
    .w_digits_data_address0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address0),
    .w_digits_data_ce0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce0),
    .w_digits_data_we0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we0),
    .w_digits_data_d0(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d0),
    .w_digits_data_q0(res_digits_data_q0),
    .w_digits_data_address1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address1),
    .w_digits_data_ce1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce1),
    .w_digits_data_we1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we1),
    .w_digits_data_d1(grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d1),
    .w_digits_data_q1(res_digits_data_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state15) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state15)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state15);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state14)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state20))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state20)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state20);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state26)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            ap_return_preg <= add_ln306_fu_1119_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_2_fu_616_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_2_fu_616_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_693_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_2_fu_585_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_2_fu_585_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mul_I_O_fu_594_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_693_p2 == 1'd1))) begin
            grp_mul_I_O_fu_594_ap_start_reg <= 1'b1;
        end else if ((grp_mul_I_O_fu_594_ap_ready == 1'b1)) begin
            grp_mul_I_O_fu_594_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mul_I_O_fu_605_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_693_p2 == 1'd1))) begin
            grp_mul_I_O_fu_605_ap_start_reg <= 1'b1;
        end else if ((grp_mul_I_O_fu_605_ap_ready == 1'b1)) begin
            grp_mul_I_O_fu_605_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_630_p2 == 1'd1))) begin
        i1_0_reg_413 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_0_reg_413 <= i_7_reg_1159;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln256_fu_647_p2 == 1'd1))) begin
        i2_0_reg_425 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_425 <= i_8_reg_1172;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_676_p2 == 1'd1))) begin
        i3_0_reg_436 <= 4'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i3_0_reg_436 <= i_9_reg_1191;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
        i4_0_reg_494 <= 5'd0;
    end else if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1309 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i4_0_reg_494 <= i_12_reg_1313;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
        i7_0_reg_553 <= 5'd0;
    end else if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364 == 1'd0))) begin
        i7_0_reg_553 <= i_13_reg_1368;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        i_0_i2_reg_483 <= 5'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_826_p2 == 1'd0))) begin
        i_0_i2_reg_483 <= i_11_fu_832_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_reg_460 <= 5'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_726_p2 == 1'd0))) begin
        i_0_i_reg_460 <= i_10_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_402 <= i_reg_1140;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_402 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
        j8_0_reg_565 <= 6'd16;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1014_p2 == 1'd0))) begin
        j8_0_reg_565 <= j_4_fu_1031_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
        j_0_reg_518 <= 6'd16;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln282_fu_925_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_0_reg_518 <= j_fu_942_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        needDown_0_i_reg_471 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_i_reg_1265_pp1_iter1_reg == 1'd0))) begin
        needDown_0_i_reg_471 <= tmp_12_fu_877_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln278_reg_1305 == 1'd0))) begin
        res_tmp_bits_0_reg_529 <= tmp_0_reg_506;
    end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (icmp_ln278_fu_920_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
        res_tmp_bits_0_reg_529 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        res_tmp_bits_1_reg_576 <= add_ln304_fu_1098_p2;
    end else if (((icmp_ln292_fu_1009_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state25))) begin
        res_tmp_bits_1_reg_576 <= zext_ln292_fu_1005_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
        tmp6_0_reg_541 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter3_reg == 1'd0))) begin
        tmp6_0_reg_541 <= trunc_ln2_reg_1404;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_0_i_reg_448 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln53_reg_1216_pp0_iter1_reg == 1'd0))) begin
        tmp_0_i_reg_448 <= {{tmp_10_fu_769_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
        tmp_0_reg_506 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1309_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_0_reg_506 <= trunc_ln1_reg_1349;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1309_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln286_reg_1339 <= add_ln286_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1309_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln287_reg_1344 <= add_ln287_fu_990_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter1_reg == 1'd0))) begin
        add_ln300_reg_1394 <= add_ln300_fu_1050_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter2_reg == 1'd0))) begin
        add_ln301_reg_1399 <= add_ln301_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1216 == 1'd0))) begin
        add_ln59_reg_1250 <= add_ln59_fu_752_p2;
        z0_digits_data_load_reg_1240 <= z0_digits_data_q0;
        z2_digits_data_load_reg_1245 <= z2_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_1265 <= exitcond_i_fu_826_p2;
        exitcond_i_reg_1265_pp1_iter1_reg <= exitcond_i_reg_1265;
        zext_ln80_reg_1274_pp1_iter1_reg[4 : 0] <= zext_ln80_reg_1274[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_12_reg_1313 <= i_12_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        i_13_reg_1368 <= i_13_fu_1020_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_7_reg_1159 <= i_7_fu_653_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_8_reg_1172 <= i_8_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_9_reg_1191 <= i_9_fu_699_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1140 <= i_fu_636_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        icmp_ln278_reg_1305 <= icmp_ln278_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln282_reg_1309 <= icmp_ln282_fu_925_p2;
        icmp_ln282_reg_1309_pp2_iter1_reg <= icmp_ln282_reg_1309;
        res_digits_data_addr_reg_1318_pp2_iter1_reg <= res_digits_data_addr_reg_1318;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln282_reg_1309_pp2_iter2_reg <= icmp_ln282_reg_1309_pp2_iter1_reg;
        icmp_ln282_reg_1309_pp2_iter3_reg <= icmp_ln282_reg_1309_pp2_iter2_reg;
        reg_626_pp2_iter2_reg <= reg_626;
        res_digits_data_addr_reg_1318_pp2_iter2_reg <= res_digits_data_addr_reg_1318_pp2_iter1_reg;
        res_digits_data_addr_reg_1318_pp2_iter3_reg <= res_digits_data_addr_reg_1318_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln296_reg_1364 <= icmp_ln296_fu_1014_p2;
        icmp_ln296_reg_1364_pp3_iter1_reg <= icmp_ln296_reg_1364;
        res_digits_data_addr_1_reg_1373_pp3_iter1_reg <= res_digits_data_addr_1_reg_1373;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln296_reg_1364_pp3_iter2_reg <= icmp_ln296_reg_1364_pp3_iter1_reg;
        icmp_ln296_reg_1364_pp3_iter3_reg <= icmp_ln296_reg_1364_pp3_iter2_reg;
        reg_626_pp3_iter2_reg <= reg_626;
        res_digits_data_addr_1_reg_1373_pp3_iter2_reg <= res_digits_data_addr_1_reg_1373_pp3_iter1_reg;
        res_digits_data_addr_1_reg_1373_pp3_iter3_reg <= res_digits_data_addr_1_reg_1373_pp3_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln53_reg_1216 <= icmp_ln53_fu_726_p2;
        icmp_ln53_reg_1216_pp0_iter1_reg <= icmp_ln53_reg_1216;
        zext_ln58_reg_1225_pp0_iter1_reg[4 : 0] <= zext_ln58_reg_1225[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln282_reg_1309_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lhs_digits_data_load_3_reg_1334 <= lhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1309 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364 == 1'd0)))) begin
        reg_626 <= res_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1014_p2 == 1'd0))) begin
        res_digits_data_addr_1_reg_1373 <= zext_ln300_1_fu_1026_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_fu_925_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        res_digits_data_addr_reg_1318 <= zext_ln286_1_fu_937_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        res_tmp_bits_write_a_1_reg_1206 <= grp_mul_I_O_fu_605_ap_return;
        res_tmp_bits_write_a_reg_1201 <= grp_mul_I_O_fu_594_ap_return;
        zext_ln266_reg_1211[3 : 0] <= zext_ln266_fu_722_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter2 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter1_reg == 1'd0))) begin
        rhs_digits_data_load_3_reg_1389 <= rhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1265 == 1'd0))) begin
        tmp_11_reg_1289 <= tmp_11_fu_852_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln282_reg_1309_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln1_reg_1349 <= {{tmp_fu_978_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter2_reg == 1'd0))) begin
        trunc_ln2_reg_1404 <= {{tmp_14_fu_1067_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        z1_tmp_bits_reg_1300 <= z1_tmp_bits_fu_914_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_630_p2 == 1'd0))) begin
        zext_ln255_reg_1145[3 : 0] <= zext_ln255_fu_642_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_676_p2 == 1'd0))) begin
        zext_ln257_reg_1177[3 : 0] <= zext_ln257_fu_688_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        zext_ln292_reg_1354[1 : 0] <= zext_ln292_fu_1005_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_726_p2 == 1'd0))) begin
        zext_ln58_reg_1225[4 : 0] <= zext_ln58_fu_738_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        zext_ln63_7_reg_1260[5 : 0] <= zext_ln63_7_fu_822_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_826_p2 == 1'd0))) begin
        zext_ln80_reg_1274[4 : 0] <= zext_ln80_fu_838_p1[4 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_address0 = zext_ln80_fu_838_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        add2_digits_data_address0 = zext_ln58_reg_1225_pp0_iter1_reg;
    end else begin
        add2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        add2_digits_data_ce0 = 1'b1;
    end else begin
        add2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln53_reg_1216_pp0_iter1_reg == 1'd0))) begin
        add2_digits_data_we0 = 1'b1;
    end else begin
        add2_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln53_fu_726_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_826_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state15 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state15 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln282_fu_925_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state20 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state20 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln296_fu_1014_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state32) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1309 == 1'd0))) begin
        ap_phi_mux_i4_0_phi_fu_498_p4 = i_12_reg_1313;
    end else begin
        ap_phi_mux_i4_0_phi_fu_498_p4 = i4_0_reg_494;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (icmp_ln296_reg_1364 == 1'd0))) begin
        ap_phi_mux_i7_0_phi_fu_557_p4 = i_13_reg_1368;
    end else begin
        ap_phi_mux_i7_0_phi_fu_557_p4 = i7_0_reg_553;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln278_reg_1305 == 1'd0))) begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_533_p4 = tmp_0_reg_506;
    end else begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_533_p4 = res_tmp_bits_0_reg_529;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln296_reg_1364_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_tmp6_0_phi_fu_545_p4 = trunc_ln2_reg_1404;
    end else begin
        ap_phi_mux_tmp6_0_phi_fu_545_p4 = tmp6_0_reg_541;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1309_pp2_iter3_reg == 1'd0))) begin
        ap_phi_mux_tmp_0_phi_fu_510_p4 = trunc_ln1_reg_1349;
    end else begin
        ap_phi_mux_tmp_0_phi_fu_510_p4 = tmp_0_reg_506;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        ap_return = add_ln306_fu_1119_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_address0 = zext_ln80_fu_838_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_address0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_address0;
    end else begin
        cross_mul_digits_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce0;
    end else begin
        cross_mul_digits_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce1 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_ce1;
    end else begin
        cross_mul_digits_dat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we0 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we0;
    end else begin
        cross_mul_digits_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we1 = grp_karastuba_mul_templa_2_fu_585_cross_mul_digits_data_we1;
    end else begin
        cross_mul_digits_dat_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_address0 = zext_ln255_reg_1145;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_address0 = grp_mul_I_O_fu_594_u_digits_data_address0;
    end else begin
        lhs0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_ce0 = grp_mul_I_O_fu_594_u_digits_data_ce0;
    end else begin
        lhs0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_we0 = 1'b1;
    end else begin
        lhs0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_address0 = zext_ln255_reg_1145;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_lhs0_tmp_digits_data_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_address0 = zext_ln256_2_fu_670_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_address0 = grp_mul_I_O_fu_605_u_digits_data_address0;
    end else begin
        lhs1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_ce0 = grp_mul_I_O_fu_605_u_digits_data_ce0;
    end else begin
        lhs1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_we0 = 1'b1;
    end else begin
        lhs1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_address0 = zext_ln256_2_fu_670_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_lhs1_tmp_digits_data_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        lhs_digits_data_address0 = zext_ln285_1_fu_948_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs_digits_data_address0 = zext_ln256_fu_665_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lhs_digits_data_address0 = zext_ln255_fu_642_p1;
    end else begin
        lhs_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        lhs_digits_data_ce0 = 1'b1;
    end else begin
        lhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        res_digits_data_address0 = zext_ln300_1_fu_1026_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        res_digits_data_address0 = zext_ln286_1_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address0;
    end else begin
        res_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_address1 = res_digits_data_addr_1_reg_1373_pp3_iter3_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_address1 = res_digits_data_addr_reg_1318_pp2_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_address1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_address1;
    end else begin
        res_digits_data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        res_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce0;
    end else begin
        res_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_ce1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_ce1;
    end else begin
        res_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_d1 = add_ln301_reg_1399;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_d1 = add_ln287_reg_1344;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_d1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d1;
    end else begin
        res_digits_data_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_we0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we0;
    end else begin
        res_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1364_pp3_iter3_reg == 1'd0)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1309_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        res_digits_data_we1 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_we1;
    end else begin
        res_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_address0 = zext_ln257_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_address0 = grp_mul_I_O_fu_594_v_digits_data_address0;
    end else begin
        rhs0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_ce0 = grp_mul_I_O_fu_594_v_digits_data_ce0;
    end else begin
        rhs0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_we0 = 1'b1;
    end else begin
        rhs0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_address0 = zext_ln257_reg_1177;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_rhs0_tmp_digits_data_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_address0 = zext_ln258_2_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_address0 = grp_mul_I_O_fu_605_v_digits_data_address0;
    end else begin
        rhs1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_ce0 = grp_mul_I_O_fu_605_v_digits_data_ce0;
    end else begin
        rhs1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_we0 = 1'b1;
    end else begin
        rhs1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_address0 = zext_ln258_2_fu_716_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_2_fu_585_rhs1_tmp_digits_data_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        rhs_digits_data_address0 = zext_ln299_1_fu_1037_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rhs_digits_data_address0 = zext_ln258_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rhs_digits_data_address0 = zext_ln257_fu_688_p1;
    end else begin
        rhs_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        rhs_digits_data_ce0 = 1'b1;
    end else begin
        rhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_address0 = zext_ln58_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z0_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_address0 = grp_mul_I_O_fu_594_w_digits_data_address0;
    end else begin
        z0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z0_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_616_x0_digits_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_ce0 = grp_mul_I_O_fu_594_w_digits_data_ce0;
    end else begin
        z0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_ce1 = grp_mul_I_O_fu_594_w_digits_data_ce1;
    end else begin
        z0_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_we0 = grp_mul_I_O_fu_594_w_digits_data_we0;
    end else begin
        z0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_we1 = grp_mul_I_O_fu_594_w_digits_data_we1;
    end else begin
        z0_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        z1_digits_data_address0 = zext_ln80_reg_1274_pp1_iter1_reg;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z1_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_address0;
    end else begin
        z1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        z1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z1_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_616_x1_digits_data_ce0;
    end else begin
        z1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (exitcond_i_reg_1265_pp1_iter1_reg == 1'd0))) begin
        z1_digits_data_we0 = 1'b1;
    end else begin
        z1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_address0 = zext_ln58_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z2_digits_data_address0 = grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_address0 = grp_mul_I_O_fu_605_w_digits_data_address0;
    end else begin
        z2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        z2_digits_data_ce0 = grp_CAT_I_I_I_O_2_fu_616_x2_digits_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_ce0 = grp_mul_I_O_fu_605_w_digits_data_ce0;
    end else begin
        z2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_ce1 = grp_mul_I_O_fu_605_w_digits_data_ce1;
    end else begin
        z2_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_we0 = grp_mul_I_O_fu_605_w_digits_data_we0;
    end else begin
        z2_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_we1 = grp_mul_I_O_fu_605_w_digits_data_we1;
    end else begin
        z2_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_630_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln256_fu_647_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_676_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_693_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_726_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_726_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i_fu_826_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_i_fu_826_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19) & (icmp_ln278_fu_920_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_2_fu_616_ap_done == 1'b1) & (icmp_ln278_fu_920_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_925_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_925_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state25 : begin
            if (((1'b1 == ap_CS_fsm_state25) & (icmp_ln292_fu_1009_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1014_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1014_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_digits_data_d0 = (add_ln60_2_fu_775_p2 + z0_digits_data_load_reg_1240);

assign add2_tmp_bits_fu_816_p2 = (zext_ln63_fu_796_p1 + zext_ln63_6_fu_812_p1);

assign add_ln286_fu_961_p2 = (zext_ln286_fu_953_p1 + zext_ln285_fu_957_p1);

assign add_ln287_1_fu_984_p2 = (reg_626_pp2_iter2_reg + zext_ln285_2_fu_971_p1);

assign add_ln287_fu_990_p2 = (add_ln287_1_fu_984_p2 + lhs_digits_data_load_3_reg_1334);

assign add_ln300_fu_1050_p2 = (zext_ln300_fu_1042_p1 + zext_ln299_fu_1046_p1);

assign add_ln301_1_fu_1073_p2 = (reg_626_pp3_iter2_reg + zext_ln299_2_fu_1060_p1);

assign add_ln301_fu_1079_p2 = (add_ln301_1_fu_1073_p2 + rhs_digits_data_load_3_reg_1389);

assign add_ln304_fu_1098_p2 = (zext_ln292_reg_1354 + zext_ln304_fu_1094_p1);

assign add_ln306_fu_1119_p2 = (zext_ln306_fu_1103_p1 + mul_ln306_fu_1113_p2);

assign add_ln59_fu_752_p2 = (zext_ln59_fu_744_p1 + zext_ln58_3_fu_748_p1);

assign add_ln60_2_fu_775_p2 = (z2_digits_data_load_reg_1245 + zext_ln58_4_fu_762_p1);

assign add_ln63_fu_806_p2 = (zext_ln63_5_fu_803_p1 + zext_ln63_4_fu_800_p1);

assign add_ln95_fu_905_p2 = (empty_29_fu_897_p3 + zext_ln266_reg_1211);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_karastuba_mul_templa_2_fu_585_ap_done == 1'b0) | (grp_mul_I_O_fu_605_ap_done == 1'b0) | (grp_mul_I_O_fu_594_ap_done == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_29_fu_897_p3 = ((needDown_0_i_reg_471[0:0] === 1'b1) ? 5'd31 : 5'd0);

assign exitcond_i_fu_826_p2 = ((i_0_i2_reg_483 == 5'd16) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_2_fu_616_ap_start = grp_CAT_I_I_I_O_2_fu_616_ap_start_reg;

assign grp_karastuba_mul_templa_2_fu_585_ap_start = grp_karastuba_mul_templa_2_fu_585_ap_start_reg;

assign grp_mul_I_O_fu_594_ap_start = grp_mul_I_O_fu_594_ap_start_reg;

assign grp_mul_I_O_fu_605_ap_start = grp_mul_I_O_fu_605_ap_start_reg;

assign i_10_fu_732_p2 = (i_0_i_reg_460 + 5'd1);

assign i_11_fu_832_p2 = (i_0_i2_reg_483 + 5'd1);

assign i_12_fu_931_p2 = (ap_phi_mux_i4_0_phi_fu_498_p4 + 5'd1);

assign i_13_fu_1020_p2 = (ap_phi_mux_i7_0_phi_fu_557_p4 + 5'd1);

assign i_7_fu_653_p2 = (i1_0_reg_413 + 4'd1);

assign i_8_fu_682_p2 = (i2_0_reg_425 + 4'd1);

assign i_9_fu_699_p2 = (i3_0_reg_436 + 4'd1);

assign i_fu_636_p2 = (i_0_reg_402 + 4'd1);

assign icmp_ln255_fu_630_p2 = ((i_0_reg_402 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_647_p2 = ((i1_0_reg_413 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_676_p2 = ((i2_0_reg_425 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_693_p2 = ((i3_0_reg_436 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_920_p2 = ((rhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_925_p2 = ((ap_phi_mux_i4_0_phi_fu_498_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1009_p2 = ((lhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_1014_p2 = ((ap_phi_mux_i7_0_phi_fu_557_p4 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_726_p2 = ((i_0_i_reg_460 == 5'd16) ? 1'b1 : 1'b0);

assign j_4_fu_1031_p2 = (j8_0_reg_565 + 6'd1);

assign j_fu_942_p2 = (j_0_reg_518 + 6'd1);

assign mul_ln306_fu_1113_p0 = mul_ln306_fu_1113_p00;

assign mul_ln306_fu_1113_p00 = rhs_tmp_bits_read;

assign mul_ln306_fu_1113_p1 = mul_ln306_fu_1113_p10;

assign mul_ln306_fu_1113_p10 = lhs_tmp_bits_read;

assign mul_ln306_fu_1113_p2 = (mul_ln306_fu_1113_p0 * mul_ln306_fu_1113_p1);

assign res_digits_data_d0 = grp_CAT_I_I_I_O_2_fu_616_w_digits_data_d0;

assign select_ln82_2_fu_866_p3 = ((needDown_0_i_reg_471[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln82_fu_858_p3 = ((needDown_0_i_reg_471[0:0] === 1'b1) ? 33'd8589934591 : 33'd0);

assign sext_ln95_fu_910_p1 = $signed(add_ln95_fu_905_p2);

assign tmp_10_fu_769_p2 = (zext_ln59_2_fu_766_p1 + zext_ln53_fu_758_p1);

assign tmp_11_fu_852_p2 = (zext_ln80_2_fu_844_p1 - zext_ln81_fu_848_p1);

assign tmp_12_fu_877_p2 = (select_ln82_fu_858_p3 + tmp_11_reg_1289);

assign tmp_14_fu_1067_p2 = (zext_ln300_2_fu_1064_p1 + zext_ln296_fu_1056_p1);

assign tmp_fu_978_p2 = (zext_ln286_2_fu_975_p1 + zext_ln282_fu_967_p1);

assign trunc_ln82_fu_874_p1 = tmp_11_reg_1289[31:0];

assign xor_ln256_fu_659_p2 = (i1_0_reg_413 ^ 4'd8);

assign xor_ln258_fu_705_p2 = (i3_0_reg_436 ^ 4'd8);

assign z1_digits_data_d0 = (trunc_ln82_fu_874_p1 + select_ln82_2_fu_866_p3);

assign z1_tmp_bits_fu_914_p2 = ($signed(sext_ln95_fu_910_p1) - $signed(zext_ln63_7_reg_1260));

assign zext_ln255_fu_642_p1 = i_0_reg_402;

assign zext_ln256_2_fu_670_p1 = i1_0_reg_413;

assign zext_ln256_fu_665_p1 = xor_ln256_fu_659_p2;

assign zext_ln257_fu_688_p1 = i2_0_reg_425;

assign zext_ln258_2_fu_716_p1 = i3_0_reg_436;

assign zext_ln258_fu_711_p1 = xor_ln258_fu_705_p2;

assign zext_ln266_fu_722_p1 = grp_karastuba_mul_templa_2_fu_585_ap_return;

assign zext_ln282_fu_967_p1 = ap_phi_mux_tmp_0_phi_fu_510_p4;

assign zext_ln285_1_fu_948_p1 = i4_0_reg_494;

assign zext_ln285_2_fu_971_p1 = ap_phi_mux_tmp_0_phi_fu_510_p4;

assign zext_ln285_fu_957_p1 = reg_626;

assign zext_ln286_1_fu_937_p1 = j_0_reg_518;

assign zext_ln286_2_fu_975_p1 = add_ln286_reg_1339;

assign zext_ln286_fu_953_p1 = lhs_digits_data_q0;

assign zext_ln292_fu_1005_p1 = ap_phi_mux_res_tmp_bits_0_phi_fu_533_p4;

assign zext_ln296_fu_1056_p1 = ap_phi_mux_tmp6_0_phi_fu_545_p4;

assign zext_ln299_1_fu_1037_p1 = i7_0_reg_553;

assign zext_ln299_2_fu_1060_p1 = ap_phi_mux_tmp6_0_phi_fu_545_p4;

assign zext_ln299_fu_1046_p1 = reg_626;

assign zext_ln300_1_fu_1026_p1 = j8_0_reg_565;

assign zext_ln300_2_fu_1064_p1 = add_ln300_reg_1394;

assign zext_ln300_fu_1042_p1 = rhs_digits_data_q0;

assign zext_ln304_fu_1094_p1 = tmp6_0_reg_541;

assign zext_ln306_fu_1103_p1 = res_tmp_bits_1_reg_576;

assign zext_ln53_fu_758_p1 = tmp_0_i_reg_448;

assign zext_ln58_3_fu_748_p1 = z2_digits_data_q0;

assign zext_ln58_4_fu_762_p1 = tmp_0_i_reg_448;

assign zext_ln58_fu_738_p1 = i_0_i_reg_460;

assign zext_ln59_2_fu_766_p1 = add_ln59_reg_1250;

assign zext_ln59_fu_744_p1 = z0_digits_data_q0;

assign zext_ln63_4_fu_800_p1 = res_tmp_bits_write_a_reg_1201;

assign zext_ln63_5_fu_803_p1 = res_tmp_bits_write_a_1_reg_1206;

assign zext_ln63_6_fu_812_p1 = add_ln63_fu_806_p2;

assign zext_ln63_7_fu_822_p1 = add2_tmp_bits_fu_816_p2;

assign zext_ln63_fu_796_p1 = tmp_0_i_reg_448;

assign zext_ln80_2_fu_844_p1 = cross_mul_digits_dat_q0;

assign zext_ln80_fu_838_p1 = i_0_i2_reg_483;

assign zext_ln81_fu_848_p1 = add2_digits_data_q0;

always @ (posedge ap_clk) begin
    zext_ln255_reg_1145[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln257_reg_1177[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln266_reg_1211[4] <= 1'b0;
    zext_ln58_reg_1225[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1225_pp0_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln63_7_reg_1260[6] <= 1'b0;
    zext_ln80_reg_1274[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1274_pp1_iter1_reg[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln292_reg_1354[2] <= 1'b0;
end

endmodule //karastuba_mul_templa_6
