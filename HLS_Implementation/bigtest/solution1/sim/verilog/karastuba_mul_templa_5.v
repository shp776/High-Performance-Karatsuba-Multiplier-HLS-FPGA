// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module karastuba_mul_templa_5 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        lhs_tmp_bits_read,
        lhs_digits_data_address0,
        lhs_digits_data_ce0,
        lhs_digits_data_q0,
        rhs_tmp_bits_read,
        rhs_digits_data_address0,
        rhs_digits_data_ce0,
        rhs_digits_data_q0,
        res_digits_data_address0,
        res_digits_data_ce0,
        res_digits_data_we0,
        res_digits_data_d0,
        res_digits_data_q0,
        res_digits_data_address1,
        res_digits_data_ce1,
        res_digits_data_we1,
        res_digits_data_d1,
        res_digits_data_q1,
        ap_return
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_pp0_stage0 = 20'd1024;
parameter    ap_ST_fsm_state16 = 20'd2048;
parameter    ap_ST_fsm_pp1_stage0 = 20'd4096;
parameter    ap_ST_fsm_state22 = 20'd8192;
parameter    ap_ST_fsm_state23 = 20'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 20'd32768;
parameter    ap_ST_fsm_state29 = 20'd65536;
parameter    ap_ST_fsm_pp3_stage0 = 20'd131072;
parameter    ap_ST_fsm_state35 = 20'd262144;
parameter    ap_ST_fsm_state36 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [1:0] lhs_tmp_bits_read;
output  [4:0] lhs_digits_data_address0;
output   lhs_digits_data_ce0;
input  [31:0] lhs_digits_data_q0;
input  [1:0] rhs_tmp_bits_read;
output  [4:0] rhs_digits_data_address0;
output   rhs_digits_data_ce0;
input  [31:0] rhs_digits_data_q0;
output  [5:0] res_digits_data_address0;
output   res_digits_data_ce0;
output   res_digits_data_we0;
output  [31:0] res_digits_data_d0;
input  [31:0] res_digits_data_q0;
output  [5:0] res_digits_data_address1;
output   res_digits_data_ce1;
output   res_digits_data_we1;
output  [31:0] res_digits_data_d1;
input  [31:0] res_digits_data_q1;
output  [3:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] lhs_digits_data_address0;
reg lhs_digits_data_ce0;
reg[4:0] rhs_digits_data_address0;
reg rhs_digits_data_ce0;
reg[5:0] res_digits_data_address0;
reg res_digits_data_ce0;
reg res_digits_data_we0;
reg[5:0] res_digits_data_address1;
reg res_digits_data_ce1;
reg res_digits_data_we1;
reg[31:0] res_digits_data_d1;
reg[3:0] ap_return;

(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [1:0] tmp_0_i_reg_448;
reg   [5:0] i_0_i_reg_460;
reg   [0:0] needDown_0_i_reg_471;
reg   [5:0] i_0_i1_reg_483;
reg   [5:0] i4_0_reg_494;
reg   [1:0] tmp_0_reg_505;
reg   [6:0] j_0_reg_517;
reg   [1:0] tmp6_0_reg_540;
reg   [5:0] i7_0_reg_552;
reg   [6:0] j8_0_reg_563;
reg   [31:0] reg_624;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_state24_pp2_stage0_iter0;
wire    ap_block_state25_pp2_stage0_iter1;
wire    ap_block_state26_pp2_stage0_iter2;
wire    ap_block_state27_pp2_stage0_iter3;
wire    ap_block_state28_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln282_reg_1321;
reg   [31:0] reg_624_pp2_iter2_reg;
reg   [31:0] reg_624_pp3_iter2_reg;
wire    ap_block_state30_pp3_stage0_iter0;
wire    ap_block_state31_pp3_stage0_iter1;
wire    ap_block_state32_pp3_stage0_iter2;
wire    ap_block_state33_pp3_stage0_iter3;
wire    ap_block_state34_pp3_stage0_iter4;
wire    ap_block_pp3_stage0_11001;
wire    ap_CS_fsm_pp3_stage0;
reg    ap_enable_reg_pp3_iter1;
reg   [0:0] icmp_ln296_reg_1377;
wire   [4:0] i_fu_634_p2;
reg   [4:0] i_reg_1130;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln255_fu_640_p1;
reg   [63:0] zext_ln255_reg_1135;
wire   [0:0] icmp_ln255_fu_628_p2;
wire   [4:0] i_14_fu_651_p2;
reg   [4:0] i_14_reg_1149;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln256_fu_645_p2;
wire   [4:0] i_15_fu_680_p2;
reg   [4:0] i_15_reg_1162;
wire    ap_CS_fsm_state6;
wire   [63:0] zext_ln257_fu_686_p1;
reg   [63:0] zext_ln257_reg_1167;
wire   [0:0] icmp_ln257_fu_674_p2;
wire   [4:0] i_16_fu_697_p2;
reg   [4:0] i_16_reg_1181;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln258_fu_691_p2;
wire   [3:0] grp_karastuba_mul_templa_6_fu_592_ap_return;
reg   [3:0] z0_tmp_bits_reg_1191;
wire    ap_CS_fsm_state10;
wire    grp_karastuba_mul_templa_6_fu_592_ap_ready;
wire    grp_karastuba_mul_templa_6_fu_592_ap_done;
wire    grp_karastuba_mul_templa_6_fu_603_ap_ready;
wire    grp_karastuba_mul_templa_6_fu_603_ap_done;
wire    grp_karastuba_mul_templa_1_fu_583_ap_ready;
wire    grp_karastuba_mul_templa_1_fu_583_ap_done;
reg    ap_block_state10_on_subcall_done;
wire   [3:0] grp_karastuba_mul_templa_6_fu_603_ap_return;
reg   [3:0] z2_tmp_bits_reg_1196;
wire   [4:0] zext_ln266_fu_720_p1;
reg   [4:0] zext_ln266_reg_1201;
wire   [0:0] icmp_ln53_fu_724_p2;
reg   [0:0] icmp_ln53_reg_1206;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state11_pp0_stage0_iter0;
wire    ap_block_state12_pp0_stage0_iter1;
wire    ap_block_state13_pp0_stage0_iter2;
wire    ap_block_state14_pp0_stage0_iter3;
wire    ap_block_state15_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln53_reg_1206_pp0_iter1_reg;
reg   [0:0] icmp_ln53_reg_1206_pp0_iter2_reg;
reg   [0:0] icmp_ln53_reg_1206_pp0_iter3_reg;
wire   [5:0] i_17_fu_730_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln58_fu_736_p1;
reg   [63:0] zext_ln58_reg_1215;
reg   [63:0] zext_ln58_reg_1215_pp0_iter1_reg;
reg   [63:0] zext_ln58_reg_1215_pp0_iter2_reg;
reg   [63:0] zext_ln58_reg_1215_pp0_iter3_reg;
wire   [31:0] z0_digits_data_q0;
reg   [31:0] z0_digits_data_load_reg_1230;
reg   [31:0] z0_digits_data_load_reg_1230_pp0_iter2_reg;
wire   [31:0] z2_digits_data_q0;
reg   [31:0] z2_digits_data_load_reg_1236;
reg   [31:0] z2_digits_data_load_reg_1236_pp0_iter2_reg;
wire   [32:0] add_ln59_fu_748_p2;
reg   [32:0] add_ln59_reg_1242;
wire   [31:0] add_ln60_fu_776_p2;
reg   [31:0] add_ln60_reg_1247;
reg   [1:0] trunc_ln_reg_1252;
reg    ap_enable_reg_pp0_iter3;
wire   [6:0] zext_ln63_9_fu_817_p1;
reg   [6:0] zext_ln63_9_reg_1257;
wire    ap_CS_fsm_state16;
wire   [0:0] exitcond_i_fu_821_p2;
reg   [0:0] exitcond_i_reg_1262;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state17_pp1_stage0_iter0;
wire    ap_block_state18_pp1_stage0_iter1;
wire    ap_block_state19_pp1_stage0_iter2;
wire    ap_block_state20_pp1_stage0_iter3;
wire    ap_block_state21_pp1_stage0_iter4;
wire    ap_block_pp1_stage0_11001;
reg   [0:0] exitcond_i_reg_1262_pp1_iter1_reg;
reg   [0:0] exitcond_i_reg_1262_pp1_iter2_reg;
reg   [0:0] exitcond_i_reg_1262_pp1_iter3_reg;
wire   [5:0] i_18_fu_827_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] zext_ln80_fu_833_p1;
reg   [63:0] zext_ln80_reg_1271;
reg   [63:0] zext_ln80_reg_1271_pp1_iter1_reg;
reg   [63:0] zext_ln80_reg_1271_pp1_iter2_reg;
reg   [63:0] zext_ln80_reg_1271_pp1_iter3_reg;
wire   [31:0] cross_mul_digits_dat_q0;
reg   [31:0] cross_mul_digits_dat_6_reg_1286;
wire   [31:0] add2_digits_data_q0;
reg   [31:0] add2_digits_data_loa_reg_1291;
reg    ap_enable_reg_pp1_iter1;
wire   [32:0] tmp_16_fu_845_p2;
reg   [32:0] tmp_16_reg_1296;
reg   [0:0] tmp_18_reg_1302;
reg    ap_enable_reg_pp1_iter3;
wire   [31:0] add_ln87_fu_883_p2;
reg   [31:0] add_ln87_reg_1307;
wire   [6:0] z1_tmp_bits_fu_906_p2;
reg   [6:0] z1_tmp_bits_reg_1312;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln278_fu_912_p2;
reg   [0:0] icmp_ln278_reg_1317;
wire    ap_CS_fsm_state23;
wire    grp_CAT_I_I_I_O_1_fu_614_ap_ready;
wire    grp_CAT_I_I_I_O_1_fu_614_ap_done;
wire   [0:0] icmp_ln282_fu_917_p2;
reg   [0:0] icmp_ln282_reg_1321_pp2_iter1_reg;
reg   [0:0] icmp_ln282_reg_1321_pp2_iter2_reg;
reg   [0:0] icmp_ln282_reg_1321_pp2_iter3_reg;
wire   [5:0] i_19_fu_923_p2;
reg    ap_enable_reg_pp2_iter0;
reg   [5:0] res_digits_data_addr_reg_1335;
reg   [5:0] res_digits_data_addr_reg_1335_pp2_iter1_reg;
reg   [5:0] res_digits_data_addr_reg_1335_pp2_iter2_reg;
reg   [5:0] res_digits_data_addr_reg_1335_pp2_iter3_reg;
wire   [6:0] j_fu_939_p2;
reg   [31:0] lhs_digits_data_load_4_reg_1346;
reg   [31:0] lhs_digits_data_load_4_reg_1346_pp2_iter2_reg;
wire   [32:0] add_ln286_fu_952_p2;
reg   [32:0] add_ln286_reg_1352;
wire   [31:0] add_ln287_fu_981_p2;
reg   [31:0] add_ln287_reg_1357;
reg   [1:0] trunc_ln3_reg_1362;
reg    ap_enable_reg_pp2_iter3;
wire   [2:0] zext_ln292_fu_996_p1;
reg   [2:0] zext_ln292_reg_1367;
wire    ap_CS_fsm_state29;
wire   [0:0] icmp_ln292_fu_1000_p2;
wire   [0:0] icmp_ln296_fu_1005_p2;
reg   [0:0] icmp_ln296_reg_1377_pp3_iter1_reg;
reg   [0:0] icmp_ln296_reg_1377_pp3_iter2_reg;
reg   [0:0] icmp_ln296_reg_1377_pp3_iter3_reg;
wire   [5:0] i_20_fu_1011_p2;
reg    ap_enable_reg_pp3_iter0;
reg   [5:0] res_digits_data_addr_2_reg_1391;
reg   [5:0] res_digits_data_addr_2_reg_1391_pp3_iter1_reg;
reg   [5:0] res_digits_data_addr_2_reg_1391_pp3_iter2_reg;
reg   [5:0] res_digits_data_addr_2_reg_1391_pp3_iter3_reg;
wire   [6:0] j_5_fu_1027_p2;
reg   [31:0] rhs_digits_data_load_4_reg_1402;
reg   [31:0] rhs_digits_data_load_4_reg_1402_pp3_iter2_reg;
wire   [32:0] add_ln300_fu_1040_p2;
reg   [32:0] add_ln300_reg_1408;
wire   [31:0] add_ln301_fu_1069_p2;
reg   [31:0] add_ln301_reg_1413;
reg   [1:0] trunc_ln4_reg_1418;
reg    ap_enable_reg_pp3_iter3;
wire   [2:0] add_ln304_fu_1088_p2;
wire    ap_CS_fsm_state35;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state11;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state24;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state30;
reg    ap_enable_reg_pp3_iter2;
reg    ap_enable_reg_pp3_iter4;
reg   [3:0] lhs0_digits_data_address0;
reg    lhs0_digits_data_ce0;
reg    lhs0_digits_data_we0;
wire   [31:0] lhs0_digits_data_q0;
reg   [3:0] lhs1_digits_data_address0;
reg    lhs1_digits_data_ce0;
reg    lhs1_digits_data_we0;
wire   [31:0] lhs1_digits_data_q0;
reg   [3:0] rhs0_digits_data_address0;
reg    rhs0_digits_data_ce0;
reg    rhs0_digits_data_we0;
wire   [31:0] rhs0_digits_data_q0;
reg   [3:0] rhs1_digits_data_address0;
reg    rhs1_digits_data_ce0;
reg    rhs1_digits_data_we0;
wire   [31:0] rhs1_digits_data_q0;
reg   [3:0] lhs0_tmp_digits_data_address0;
reg    lhs0_tmp_digits_data_ce0;
reg    lhs0_tmp_digits_data_we0;
wire   [31:0] lhs0_tmp_digits_data_q0;
reg   [3:0] lhs1_tmp_digits_data_address0;
reg    lhs1_tmp_digits_data_ce0;
reg    lhs1_tmp_digits_data_we0;
wire   [31:0] lhs1_tmp_digits_data_q0;
reg   [3:0] rhs0_tmp_digits_data_address0;
reg    rhs0_tmp_digits_data_ce0;
reg    rhs0_tmp_digits_data_we0;
wire   [31:0] rhs0_tmp_digits_data_q0;
reg   [3:0] rhs1_tmp_digits_data_address0;
reg    rhs1_tmp_digits_data_ce0;
reg    rhs1_tmp_digits_data_we0;
wire   [31:0] rhs1_tmp_digits_data_q0;
reg   [4:0] z0_digits_data_address0;
reg    z0_digits_data_ce0;
reg    z0_digits_data_we0;
reg    z0_digits_data_ce1;
reg    z0_digits_data_we1;
wire   [31:0] z0_digits_data_q1;
reg   [4:0] z2_digits_data_address0;
reg    z2_digits_data_ce0;
reg    z2_digits_data_we0;
reg    z2_digits_data_ce1;
reg    z2_digits_data_we1;
wire   [31:0] z2_digits_data_q1;
reg   [4:0] cross_mul_digits_dat_address0;
reg    cross_mul_digits_dat_ce0;
reg    cross_mul_digits_dat_we0;
reg    cross_mul_digits_dat_ce1;
reg    cross_mul_digits_dat_we1;
wire   [31:0] cross_mul_digits_dat_q1;
reg   [4:0] add2_digits_data_address0;
reg    add2_digits_data_ce0;
reg    add2_digits_data_we0;
reg   [4:0] z1_digits_data_address0;
reg    z1_digits_data_ce0;
reg    z1_digits_data_we0;
wire   [31:0] z1_digits_data_q0;
wire    grp_karastuba_mul_templa_1_fu_583_ap_start;
wire    grp_karastuba_mul_templa_1_fu_583_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_address0;
wire    grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_ce0;
wire   [4:0] grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address0;
wire    grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce0;
wire    grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we0;
wire   [31:0] grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d0;
wire   [4:0] grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address1;
wire    grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce1;
wire    grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we1;
wire   [31:0] grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d1;
wire   [3:0] grp_karastuba_mul_templa_1_fu_583_ap_return;
wire    grp_karastuba_mul_templa_6_fu_592_ap_start;
wire    grp_karastuba_mul_templa_6_fu_592_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_ce0;
wire   [4:0] grp_karastuba_mul_templa_6_fu_592_res_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce0;
wire    grp_karastuba_mul_templa_6_fu_592_res_digits_data_we0;
wire   [31:0] grp_karastuba_mul_templa_6_fu_592_res_digits_data_d0;
wire   [4:0] grp_karastuba_mul_templa_6_fu_592_res_digits_data_address1;
wire    grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce1;
wire    grp_karastuba_mul_templa_6_fu_592_res_digits_data_we1;
wire   [31:0] grp_karastuba_mul_templa_6_fu_592_res_digits_data_d1;
wire    grp_karastuba_mul_templa_6_fu_603_ap_start;
wire    grp_karastuba_mul_templa_6_fu_603_ap_idle;
wire   [3:0] grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_ce0;
wire   [3:0] grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_ce0;
wire   [4:0] grp_karastuba_mul_templa_6_fu_603_res_digits_data_address0;
wire    grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce0;
wire    grp_karastuba_mul_templa_6_fu_603_res_digits_data_we0;
wire   [31:0] grp_karastuba_mul_templa_6_fu_603_res_digits_data_d0;
wire   [4:0] grp_karastuba_mul_templa_6_fu_603_res_digits_data_address1;
wire    grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce1;
wire    grp_karastuba_mul_templa_6_fu_603_res_digits_data_we1;
wire   [31:0] grp_karastuba_mul_templa_6_fu_603_res_digits_data_d1;
wire    grp_CAT_I_I_I_O_1_fu_614_ap_start;
wire    grp_CAT_I_I_I_O_1_fu_614_ap_idle;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_address0;
wire    grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_address0;
wire    grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_ce0;
wire   [4:0] grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_address0;
wire    grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_ce0;
wire   [5:0] grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address0;
wire    grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce0;
wire    grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we0;
wire   [31:0] grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d0;
wire   [5:0] grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address1;
wire    grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce1;
wire    grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we1;
wire   [31:0] grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d1;
reg   [4:0] i_0_reg_402;
wire    ap_CS_fsm_state3;
reg   [4:0] i1_0_reg_413;
wire    ap_CS_fsm_state5;
reg   [4:0] i2_0_reg_425;
wire    ap_CS_fsm_state7;
reg   [4:0] i3_0_reg_436;
wire    ap_CS_fsm_state9;
reg   [1:0] ap_phi_mux_tmp_0_i_phi_fu_452_p4;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_needDown_0_i_phi_fu_475_p4;
wire    ap_block_pp1_stage0;
reg   [1:0] ap_phi_mux_tmp_0_phi_fu_509_p4;
wire    ap_block_pp2_stage0;
reg   [1:0] ap_phi_mux_res_tmp_bits_0_phi_fu_532_p4;
reg   [1:0] res_tmp_bits_0_reg_528;
reg   [1:0] ap_phi_mux_tmp6_0_phi_fu_544_p4;
wire    ap_block_pp3_stage0;
reg   [2:0] res_tmp_bits_1_reg_574;
reg    grp_karastuba_mul_templa_1_fu_583_ap_start_reg;
reg    grp_karastuba_mul_templa_6_fu_592_ap_start_reg;
reg    grp_karastuba_mul_templa_6_fu_603_ap_start_reg;
reg    grp_CAT_I_I_I_O_1_fu_614_ap_start_reg;
wire   [63:0] zext_ln256_fu_663_p1;
wire   [63:0] zext_ln256_2_fu_668_p1;
wire   [63:0] zext_ln258_fu_709_p1;
wire   [63:0] zext_ln258_2_fu_714_p1;
wire   [63:0] zext_ln285_2_fu_929_p1;
wire   [63:0] zext_ln286_2_fu_934_p1;
wire   [63:0] zext_ln299_2_fu_1017_p1;
wire   [63:0] zext_ln300_2_fu_1022_p1;
wire   [4:0] xor_ln256_fu_657_p2;
wire   [4:0] xor_ln258_fu_703_p2;
wire   [32:0] zext_ln59_fu_742_p1;
wire   [32:0] zext_ln58_5_fu_745_p1;
wire   [33:0] zext_ln59_3_fu_762_p1;
wire   [33:0] zext_ln53_fu_754_p1;
wire   [31:0] zext_ln58_6_fu_758_p1;
wire   [31:0] add_ln60_3_fu_771_p2;
wire   [33:0] tmp_15_fu_765_p2;
wire   [4:0] zext_ln63_5_fu_798_p1;
wire   [4:0] zext_ln63_4_fu_795_p1;
wire   [4:0] add_ln63_fu_801_p2;
wire   [5:0] zext_ln63_fu_791_p1;
wire   [5:0] zext_ln63_8_fu_807_p1;
wire   [5:0] add2_tmp_bits_fu_811_p2;
wire   [32:0] zext_ln80_2_fu_839_p1;
wire   [32:0] zext_ln81_fu_842_p1;
wire   [32:0] select_ln82_fu_851_p3;
wire   [32:0] tmp_17_fu_870_p2;
wire   [31:0] trunc_ln82_fu_867_p1;
wire   [31:0] select_ln82_3_fu_859_p3;
wire   [4:0] empty_41_fu_889_p3;
wire   [4:0] add_ln95_fu_897_p2;
wire  signed [6:0] sext_ln95_fu_902_p1;
wire   [32:0] zext_ln286_fu_945_p1;
wire   [32:0] zext_ln285_fu_948_p1;
wire   [33:0] zext_ln286_3_fu_966_p1;
wire   [33:0] zext_ln282_fu_958_p1;
wire   [31:0] zext_ln285_3_fu_962_p1;
wire   [31:0] add_ln287_2_fu_975_p2;
wire   [33:0] tmp_fu_969_p2;
wire   [32:0] zext_ln300_fu_1033_p1;
wire   [32:0] zext_ln299_fu_1036_p1;
wire   [33:0] zext_ln300_3_fu_1054_p1;
wire   [33:0] zext_ln296_fu_1046_p1;
wire   [31:0] zext_ln299_3_fu_1050_p1;
wire   [31:0] add_ln301_2_fu_1063_p2;
wire   [33:0] tmp_19_fu_1057_p2;
wire   [2:0] zext_ln304_fu_1084_p1;
wire    ap_CS_fsm_state36;
wire   [1:0] mul_ln306_fu_1103_p0;
wire   [1:0] mul_ln306_fu_1103_p1;
wire   [3:0] zext_ln306_fu_1093_p1;
wire   [3:0] mul_ln306_fu_1103_p2;
wire   [3:0] add_ln306_fu_1109_p2;
reg   [3:0] ap_return_preg;
reg   [19:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;
wire   [3:0] mul_ln306_fu_1103_p00;
wire   [3:0] mul_ln306_fu_1103_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 20'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp3_iter2 = 1'b0;
#0 ap_enable_reg_pp3_iter4 = 1'b0;
#0 grp_karastuba_mul_templa_1_fu_583_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_6_fu_592_ap_start_reg = 1'b0;
#0 grp_karastuba_mul_templa_6_fu_603_ap_start_reg = 1'b0;
#0 grp_CAT_I_I_I_O_1_fu_614_ap_start_reg = 1'b0;
#0 ap_return_preg = 4'd0;
end

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_digits_data_address0),
    .ce0(lhs0_digits_data_ce0),
    .we0(lhs0_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs0_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_digits_data_address0),
    .ce0(lhs1_digits_data_ce0),
    .we0(lhs1_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs1_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_digits_data_address0),
    .ce0(rhs0_digits_data_ce0),
    .we0(rhs0_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs0_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_digits_data_address0),
    .ce0(rhs1_digits_data_ce0),
    .we0(rhs1_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs1_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs0_tmp_digits_data_address0),
    .ce0(lhs0_tmp_digits_data_ce0),
    .we0(lhs0_tmp_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs0_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
lhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(lhs1_tmp_digits_data_address0),
    .ce0(lhs1_tmp_digits_data_ce0),
    .we0(lhs1_tmp_digits_data_we0),
    .d0(lhs_digits_data_q0),
    .q0(lhs1_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs0_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs0_tmp_digits_data_address0),
    .ce0(rhs0_tmp_digits_data_ce0),
    .we0(rhs0_tmp_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs0_tmp_digits_data_q0)
);

karastuba_mul_tempcA #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
rhs1_tmp_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rhs1_tmp_digits_data_address0),
    .ce0(rhs1_tmp_digits_data_ce0),
    .we0(rhs1_tmp_digits_data_we0),
    .d0(rhs_digits_data_q0),
    .q0(rhs1_tmp_digits_data_q0)
);

karastuba_mul_temBew #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z0_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z0_digits_data_address0),
    .ce0(z0_digits_data_ce0),
    .we0(z0_digits_data_we0),
    .d0(grp_karastuba_mul_templa_6_fu_592_res_digits_data_d0),
    .q0(z0_digits_data_q0),
    .address1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_address1),
    .ce1(z0_digits_data_ce1),
    .we1(z0_digits_data_we1),
    .d1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_d1),
    .q1(z0_digits_data_q1)
);

karastuba_mul_temBew #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z2_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z2_digits_data_address0),
    .ce0(z2_digits_data_ce0),
    .we0(z2_digits_data_we0),
    .d0(grp_karastuba_mul_templa_6_fu_603_res_digits_data_d0),
    .q0(z2_digits_data_q0),
    .address1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_address1),
    .ce1(z2_digits_data_ce1),
    .we1(z2_digits_data_we1),
    .d1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_d1),
    .q1(z2_digits_data_q1)
);

karastuba_mul_temBew #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
cross_mul_digits_dat_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(cross_mul_digits_dat_address0),
    .ce0(cross_mul_digits_dat_ce0),
    .we0(cross_mul_digits_dat_we0),
    .d0(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d0),
    .q0(cross_mul_digits_dat_q0),
    .address1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address1),
    .ce1(cross_mul_digits_dat_ce1),
    .we1(cross_mul_digits_dat_we1),
    .d1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d1),
    .q1(cross_mul_digits_dat_q1)
);

karastuba_mul_temEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
add2_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(add2_digits_data_address0),
    .ce0(add2_digits_data_ce0),
    .we0(add2_digits_data_we0),
    .d0(add_ln60_reg_1247),
    .q0(add2_digits_data_q0)
);

karastuba_mul_temEe0 #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
z1_digits_data_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(z1_digits_data_address0),
    .ce0(z1_digits_data_ce0),
    .we0(z1_digits_data_we0),
    .d0(add_ln87_reg_1307),
    .q0(z1_digits_data_q0)
);

karastuba_mul_templa_1 grp_karastuba_mul_templa_1_fu_583(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_1_fu_583_ap_start),
    .ap_done(grp_karastuba_mul_templa_1_fu_583_ap_done),
    .ap_idle(grp_karastuba_mul_templa_1_fu_583_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_1_fu_583_ap_ready),
    .lhs0_tmp_digits_data_address0(grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_address0),
    .lhs0_tmp_digits_data_ce0(grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_ce0),
    .lhs0_tmp_digits_data_q0(lhs0_tmp_digits_data_q0),
    .lhs1_tmp_digits_data_address0(grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_address0),
    .lhs1_tmp_digits_data_ce0(grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_ce0),
    .lhs1_tmp_digits_data_q0(lhs1_tmp_digits_data_q0),
    .rhs0_tmp_digits_data_address0(grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_address0),
    .rhs0_tmp_digits_data_ce0(grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_ce0),
    .rhs0_tmp_digits_data_q0(rhs0_tmp_digits_data_q0),
    .rhs1_tmp_digits_data_address0(grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_address0),
    .rhs1_tmp_digits_data_ce0(grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_ce0),
    .rhs1_tmp_digits_data_q0(rhs1_tmp_digits_data_q0),
    .cross_mul_digits_data_address0(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address0),
    .cross_mul_digits_data_ce0(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce0),
    .cross_mul_digits_data_we0(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we0),
    .cross_mul_digits_data_d0(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d0),
    .cross_mul_digits_data_q0(cross_mul_digits_dat_q0),
    .cross_mul_digits_data_address1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address1),
    .cross_mul_digits_data_ce1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce1),
    .cross_mul_digits_data_we1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we1),
    .cross_mul_digits_data_d1(grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_d1),
    .cross_mul_digits_data_q1(cross_mul_digits_dat_q1),
    .ap_return(grp_karastuba_mul_templa_1_fu_583_ap_return)
);

karastuba_mul_templa_6 grp_karastuba_mul_templa_6_fu_592(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_6_fu_592_ap_start),
    .ap_done(grp_karastuba_mul_templa_6_fu_592_ap_done),
    .ap_idle(grp_karastuba_mul_templa_6_fu_592_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_6_fu_592_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_address0(grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_address0),
    .lhs_digits_data_ce0(grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_ce0),
    .lhs_digits_data_q0(lhs0_digits_data_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_address0(grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_address0),
    .rhs_digits_data_ce0(grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_ce0),
    .rhs_digits_data_q0(rhs0_digits_data_q0),
    .res_digits_data_address0(grp_karastuba_mul_templa_6_fu_592_res_digits_data_address0),
    .res_digits_data_ce0(grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce0),
    .res_digits_data_we0(grp_karastuba_mul_templa_6_fu_592_res_digits_data_we0),
    .res_digits_data_d0(grp_karastuba_mul_templa_6_fu_592_res_digits_data_d0),
    .res_digits_data_q0(z0_digits_data_q0),
    .res_digits_data_address1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_address1),
    .res_digits_data_ce1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce1),
    .res_digits_data_we1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_we1),
    .res_digits_data_d1(grp_karastuba_mul_templa_6_fu_592_res_digits_data_d1),
    .res_digits_data_q1(z0_digits_data_q1),
    .ap_return(grp_karastuba_mul_templa_6_fu_592_ap_return)
);

karastuba_mul_templa_6 grp_karastuba_mul_templa_6_fu_603(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_karastuba_mul_templa_6_fu_603_ap_start),
    .ap_done(grp_karastuba_mul_templa_6_fu_603_ap_done),
    .ap_idle(grp_karastuba_mul_templa_6_fu_603_ap_idle),
    .ap_ready(grp_karastuba_mul_templa_6_fu_603_ap_ready),
    .lhs_tmp_bits_read(2'd0),
    .lhs_digits_data_address0(grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_address0),
    .lhs_digits_data_ce0(grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_ce0),
    .lhs_digits_data_q0(lhs1_digits_data_q0),
    .rhs_tmp_bits_read(2'd0),
    .rhs_digits_data_address0(grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_address0),
    .rhs_digits_data_ce0(grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_ce0),
    .rhs_digits_data_q0(rhs1_digits_data_q0),
    .res_digits_data_address0(grp_karastuba_mul_templa_6_fu_603_res_digits_data_address0),
    .res_digits_data_ce0(grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce0),
    .res_digits_data_we0(grp_karastuba_mul_templa_6_fu_603_res_digits_data_we0),
    .res_digits_data_d0(grp_karastuba_mul_templa_6_fu_603_res_digits_data_d0),
    .res_digits_data_q0(z2_digits_data_q0),
    .res_digits_data_address1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_address1),
    .res_digits_data_ce1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce1),
    .res_digits_data_we1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_we1),
    .res_digits_data_d1(grp_karastuba_mul_templa_6_fu_603_res_digits_data_d1),
    .res_digits_data_q1(z2_digits_data_q1),
    .ap_return(grp_karastuba_mul_templa_6_fu_603_ap_return)
);

CAT_I_I_I_O_1 grp_CAT_I_I_I_O_1_fu_614(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_CAT_I_I_I_O_1_fu_614_ap_start),
    .ap_done(grp_CAT_I_I_I_O_1_fu_614_ap_done),
    .ap_idle(grp_CAT_I_I_I_O_1_fu_614_ap_idle),
    .ap_ready(grp_CAT_I_I_I_O_1_fu_614_ap_ready),
    .x0_digits_data_address0(grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_address0),
    .x0_digits_data_ce0(grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_ce0),
    .x0_digits_data_q0(z0_digits_data_q0),
    .x1_tmp_bits_read(z1_tmp_bits_reg_1312),
    .x1_digits_data_address0(grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_address0),
    .x1_digits_data_ce0(grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_ce0),
    .x1_digits_data_q0(z1_digits_data_q0),
    .x2_digits_data_address0(grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_address0),
    .x2_digits_data_ce0(grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_ce0),
    .x2_digits_data_q0(z2_digits_data_q0),
    .w_digits_data_address0(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address0),
    .w_digits_data_ce0(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce0),
    .w_digits_data_we0(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we0),
    .w_digits_data_d0(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d0),
    .w_digits_data_q0(res_digits_data_q0),
    .w_digits_data_address1(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address1),
    .w_digits_data_ce1(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce1),
    .w_digits_data_we1(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we1),
    .w_digits_data_d1(grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d1),
    .w_digits_data_q1(res_digits_data_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state11) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state11)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state11);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end else if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state17)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state17);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state24))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state24)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state24);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state30) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp3_exit_iter0_state30)) begin
                ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state30);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter2 <= ap_enable_reg_pp3_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter3 <= ap_enable_reg_pp3_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp3_stage0_subdone)) begin
            ap_enable_reg_pp3_iter4 <= ap_enable_reg_pp3_iter3;
        end else if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
            ap_enable_reg_pp3_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state36)) begin
            ap_return_preg <= add_ln306_fu_1109_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_CAT_I_I_I_O_1_fu_614_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state22)) begin
            grp_CAT_I_I_I_O_1_fu_614_ap_start_reg <= 1'b1;
        end else if ((grp_CAT_I_I_I_O_1_fu_614_ap_ready == 1'b1)) begin
            grp_CAT_I_I_I_O_1_fu_614_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_1_fu_583_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_691_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_1_fu_583_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_1_fu_583_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_1_fu_583_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_6_fu_592_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_691_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_6_fu_592_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_6_fu_592_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_6_fu_592_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_karastuba_mul_templa_6_fu_603_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_691_p2 == 1'd1))) begin
            grp_karastuba_mul_templa_6_fu_603_ap_start_reg <= 1'b1;
        end else if ((grp_karastuba_mul_templa_6_fu_603_ap_ready == 1'b1)) begin
            grp_karastuba_mul_templa_6_fu_603_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_628_p2 == 1'd1))) begin
        i1_0_reg_413 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        i1_0_reg_413 <= i_14_reg_1149;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln256_fu_645_p2 == 1'd1))) begin
        i2_0_reg_425 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        i2_0_reg_425 <= i_15_reg_1162;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_674_p2 == 1'd1))) begin
        i3_0_reg_436 <= 5'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        i3_0_reg_436 <= i_16_reg_1181;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
        i4_0_reg_494 <= 6'd0;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln282_fu_917_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i4_0_reg_494 <= i_19_fu_923_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
        i7_0_reg_552 <= 6'd0;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1005_p2 == 1'd0))) begin
        i7_0_reg_552 <= i_20_fu_1011_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        i_0_i1_reg_483 <= 6'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_821_p2 == 1'd0))) begin
        i_0_i1_reg_483 <= i_18_fu_827_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        i_0_i_reg_460 <= 6'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_724_p2 == 1'd0))) begin
        i_0_i_reg_460 <= i_17_fu_730_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        i_0_reg_402 <= i_reg_1130;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_402 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
        j8_0_reg_563 <= 7'd32;
    end else if (((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1005_p2 == 1'd0))) begin
        j8_0_reg_563 <= j_5_fu_1027_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
        j_0_reg_517 <= 7'd32;
    end else if (((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln282_fu_917_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        j_0_reg_517 <= j_fu_939_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        needDown_0_i_reg_471 <= 1'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1262_pp1_iter3_reg == 1'd0))) begin
        needDown_0_i_reg_471 <= tmp_18_reg_1302;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln278_reg_1317 == 1'd0))) begin
        res_tmp_bits_0_reg_528 <= tmp_0_reg_505;
    end else if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (icmp_ln278_fu_912_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        res_tmp_bits_0_reg_528 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        res_tmp_bits_1_reg_574 <= add_ln304_fu_1088_p2;
    end else if (((icmp_ln292_fu_1000_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state29))) begin
        res_tmp_bits_1_reg_574 <= zext_ln292_fu_996_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
        tmp6_0_reg_540 <= 2'd0;
    end else if (((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377_pp3_iter3_reg == 1'd0))) begin
        tmp6_0_reg_540 <= trunc_ln4_reg_1418;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        tmp_0_i_reg_448 <= 2'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1206_pp0_iter3_reg == 1'd0))) begin
        tmp_0_i_reg_448 <= trunc_ln_reg_1252;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
        tmp_0_reg_505 <= 2'd0;
    end else if (((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1321_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        tmp_0_reg_505 <= trunc_ln3_reg_1362;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1262 == 1'd0))) begin
        add2_digits_data_loa_reg_1291 <= add2_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1321_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln286_reg_1352 <= add_ln286_fu_952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln282_reg_1321_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        add_ln287_reg_1357 <= add_ln287_fu_981_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377_pp3_iter1_reg == 1'd0))) begin
        add_ln300_reg_1408 <= add_ln300_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377_pp3_iter2_reg == 1'd0))) begin
        add_ln301_reg_1413 <= add_ln301_fu_1069_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_1206_pp0_iter1_reg == 1'd0))) begin
        add_ln59_reg_1242 <= add_ln59_fu_748_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln53_reg_1206_pp0_iter2_reg == 1'd0))) begin
        add_ln60_reg_1247 <= add_ln60_fu_776_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1262_pp1_iter2_reg == 1'd0))) begin
        add_ln87_reg_1307 <= add_ln87_fu_883_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_reg_1262 == 1'd0))) begin
        cross_mul_digits_dat_6_reg_1286 <= cross_mul_digits_dat_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_i_reg_1262 <= exitcond_i_fu_821_p2;
        exitcond_i_reg_1262_pp1_iter1_reg <= exitcond_i_reg_1262;
        zext_ln80_reg_1271_pp1_iter1_reg[5 : 0] <= zext_ln80_reg_1271[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        exitcond_i_reg_1262_pp1_iter2_reg <= exitcond_i_reg_1262_pp1_iter1_reg;
        exitcond_i_reg_1262_pp1_iter3_reg <= exitcond_i_reg_1262_pp1_iter2_reg;
        zext_ln80_reg_1271_pp1_iter2_reg[5 : 0] <= zext_ln80_reg_1271_pp1_iter1_reg[5 : 0];
        zext_ln80_reg_1271_pp1_iter3_reg[5 : 0] <= zext_ln80_reg_1271_pp1_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_14_reg_1149 <= i_14_fu_651_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_15_reg_1162 <= i_15_fu_680_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        i_16_reg_1181 <= i_16_fu_697_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1130 <= i_fu_634_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23))) begin
        icmp_ln278_reg_1317 <= icmp_ln278_fu_912_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln282_reg_1321 <= icmp_ln282_fu_917_p2;
        icmp_ln282_reg_1321_pp2_iter1_reg <= icmp_ln282_reg_1321;
        res_digits_data_addr_reg_1335_pp2_iter1_reg <= res_digits_data_addr_reg_1335;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln282_reg_1321_pp2_iter2_reg <= icmp_ln282_reg_1321_pp2_iter1_reg;
        icmp_ln282_reg_1321_pp2_iter3_reg <= icmp_ln282_reg_1321_pp2_iter2_reg;
        lhs_digits_data_load_4_reg_1346_pp2_iter2_reg <= lhs_digits_data_load_4_reg_1346;
        reg_624_pp2_iter2_reg <= reg_624;
        res_digits_data_addr_reg_1335_pp2_iter2_reg <= res_digits_data_addr_reg_1335_pp2_iter1_reg;
        res_digits_data_addr_reg_1335_pp2_iter3_reg <= res_digits_data_addr_reg_1335_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001))) begin
        icmp_ln296_reg_1377 <= icmp_ln296_fu_1005_p2;
        icmp_ln296_reg_1377_pp3_iter1_reg <= icmp_ln296_reg_1377;
        res_digits_data_addr_2_reg_1391_pp3_iter1_reg <= res_digits_data_addr_2_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp3_stage0_11001)) begin
        icmp_ln296_reg_1377_pp3_iter2_reg <= icmp_ln296_reg_1377_pp3_iter1_reg;
        icmp_ln296_reg_1377_pp3_iter3_reg <= icmp_ln296_reg_1377_pp3_iter2_reg;
        reg_624_pp3_iter2_reg <= reg_624;
        res_digits_data_addr_2_reg_1391_pp3_iter2_reg <= res_digits_data_addr_2_reg_1391_pp3_iter1_reg;
        res_digits_data_addr_2_reg_1391_pp3_iter3_reg <= res_digits_data_addr_2_reg_1391_pp3_iter2_reg;
        rhs_digits_data_load_4_reg_1402_pp3_iter2_reg <= rhs_digits_data_load_4_reg_1402;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln53_reg_1206 <= icmp_ln53_fu_724_p2;
        icmp_ln53_reg_1206_pp0_iter1_reg <= icmp_ln53_reg_1206;
        zext_ln58_reg_1215_pp0_iter1_reg[5 : 0] <= zext_ln58_reg_1215[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln53_reg_1206_pp0_iter2_reg <= icmp_ln53_reg_1206_pp0_iter1_reg;
        icmp_ln53_reg_1206_pp0_iter3_reg <= icmp_ln53_reg_1206_pp0_iter2_reg;
        z0_digits_data_load_reg_1230_pp0_iter2_reg <= z0_digits_data_load_reg_1230;
        z2_digits_data_load_reg_1236_pp0_iter2_reg <= z2_digits_data_load_reg_1236;
        zext_ln58_reg_1215_pp0_iter2_reg[5 : 0] <= zext_ln58_reg_1215_pp0_iter1_reg[5 : 0];
        zext_ln58_reg_1215_pp0_iter3_reg[5 : 0] <= zext_ln58_reg_1215_pp0_iter2_reg[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1321 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        lhs_digits_data_load_4_reg_1346 <= lhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_reg_1321 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377 == 1'd0)))) begin
        reg_624 <= res_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_fu_1005_p2 == 1'd0))) begin
        res_digits_data_addr_2_reg_1391 <= zext_ln300_2_fu_1022_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln282_fu_917_p2 == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        res_digits_data_addr_reg_1335 <= zext_ln286_2_fu_934_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377 == 1'd0))) begin
        rhs_digits_data_load_4_reg_1402 <= rhs_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond_i_reg_1262_pp1_iter1_reg == 1'd0))) begin
        tmp_16_reg_1296 <= tmp_16_fu_845_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (exitcond_i_reg_1262_pp1_iter2_reg == 1'd0))) begin
        tmp_18_reg_1302 <= tmp_17_fu_870_p2[32'd32];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln282_reg_1321_pp2_iter2_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        trunc_ln3_reg_1362 <= {{tmp_fu_969_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp3_iter3 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377_pp3_iter2_reg == 1'd0))) begin
        trunc_ln4_reg_1418 <= {{tmp_19_fu_1057_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln53_reg_1206_pp0_iter2_reg == 1'd0))) begin
        trunc_ln_reg_1252 <= {{tmp_15_fu_765_p2[33:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_reg_1206 == 1'd0))) begin
        z0_digits_data_load_reg_1230 <= z0_digits_data_q0;
        z2_digits_data_load_reg_1236 <= z2_digits_data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
        z0_tmp_bits_reg_1191 <= grp_karastuba_mul_templa_6_fu_592_ap_return;
        z2_tmp_bits_reg_1196 <= grp_karastuba_mul_templa_6_fu_603_ap_return;
        zext_ln266_reg_1201[3 : 0] <= zext_ln266_fu_720_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        z1_tmp_bits_reg_1312 <= z1_tmp_bits_fu_906_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_628_p2 == 1'd0))) begin
        zext_ln255_reg_1135[4 : 0] <= zext_ln255_fu_640_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_674_p2 == 1'd0))) begin
        zext_ln257_reg_1167[4 : 0] <= zext_ln257_fu_686_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        zext_ln292_reg_1367[1 : 0] <= zext_ln292_fu_996_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln53_fu_724_p2 == 1'd0))) begin
        zext_ln58_reg_1215[5 : 0] <= zext_ln58_fu_736_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        zext_ln63_9_reg_1257[5 : 0] <= zext_ln63_9_fu_817_p1[5 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (exitcond_i_fu_821_p2 == 1'd0))) begin
        zext_ln80_reg_1271[5 : 0] <= zext_ln80_fu_833_p1[5 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        add2_digits_data_address0 = zext_ln80_fu_833_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        add2_digits_data_address0 = zext_ln58_reg_1215_pp0_iter3_reg;
    end else begin
        add2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
        add2_digits_data_ce0 = 1'b1;
    end else begin
        add2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1206_pp0_iter3_reg == 1'd0))) begin
        add2_digits_data_we0 = 1'b1;
    end else begin
        add2_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln53_fu_724_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state11 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state11 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_i_fu_821_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln282_fu_917_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state24 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state24 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln296_fu_1005_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state30 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state30 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state36) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter4 == 1'b0) & (ap_enable_reg_pp3_iter2 == 1'b0) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0) & (ap_enable_reg_pp3_iter1 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1262_pp1_iter3_reg == 1'd0))) begin
        ap_phi_mux_needDown_0_i_phi_fu_475_p4 = tmp_18_reg_1302;
    end else begin
        ap_phi_mux_needDown_0_i_phi_fu_475_p4 = needDown_0_i_reg_471;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln278_reg_1317 == 1'd0))) begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_532_p4 = tmp_0_reg_505;
    end else begin
        ap_phi_mux_res_tmp_bits_0_phi_fu_532_p4 = res_tmp_bits_0_reg_528;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1) & (icmp_ln296_reg_1377_pp3_iter3_reg == 1'd0))) begin
        ap_phi_mux_tmp6_0_phi_fu_544_p4 = trunc_ln4_reg_1418;
    end else begin
        ap_phi_mux_tmp6_0_phi_fu_544_p4 = tmp6_0_reg_540;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln53_reg_1206_pp0_iter3_reg == 1'd0))) begin
        ap_phi_mux_tmp_0_i_phi_fu_452_p4 = trunc_ln_reg_1252;
    end else begin
        ap_phi_mux_tmp_0_i_phi_fu_452_p4 = tmp_0_i_reg_448;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1321_pp2_iter3_reg == 1'd0))) begin
        ap_phi_mux_tmp_0_phi_fu_509_p4 = trunc_ln3_reg_1362;
    end else begin
        ap_phi_mux_tmp_0_phi_fu_509_p4 = tmp_0_reg_505;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        ap_return = add_ln306_fu_1109_p2;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_address0 = zext_ln80_fu_833_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_address0 = grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_address0;
    end else begin
        cross_mul_digits_dat_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        cross_mul_digits_dat_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce0 = grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce0;
    end else begin
        cross_mul_digits_dat_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_ce1 = grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_ce1;
    end else begin
        cross_mul_digits_dat_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we0 = grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we0;
    end else begin
        cross_mul_digits_dat_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        cross_mul_digits_dat_we1 = grp_karastuba_mul_templa_1_fu_583_cross_mul_digits_data_we1;
    end else begin
        cross_mul_digits_dat_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_address0 = zext_ln255_reg_1135;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_address0 = grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_address0;
    end else begin
        lhs0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_592_lhs_digits_data_ce0;
    end else begin
        lhs0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_digits_data_we0 = 1'b1;
    end else begin
        lhs0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_address0 = zext_ln255_reg_1135;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_address0;
    end else begin
        lhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_583_lhs0_tmp_digits_data_ce0;
    end else begin
        lhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        lhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_address0 = zext_ln256_2_fu_668_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_address0 = grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_address0;
    end else begin
        lhs1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_603_lhs_digits_data_ce0;
    end else begin
        lhs1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_digits_data_we0 = 1'b1;
    end else begin
        lhs1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_address0 = zext_ln256_2_fu_668_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_address0;
    end else begin
        lhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        lhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_583_lhs1_tmp_digits_data_ce0;
    end else begin
        lhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        lhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        lhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        lhs_digits_data_address0 = zext_ln285_2_fu_929_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        lhs_digits_data_address0 = zext_ln256_fu_663_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        lhs_digits_data_address0 = zext_ln255_fu_640_p1;
    end else begin
        lhs_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        lhs_digits_data_ce0 = 1'b1;
    end else begin
        lhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        res_digits_data_address0 = zext_ln300_2_fu_1022_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        res_digits_data_address0 = zext_ln286_2_fu_934_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_address0 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address0;
    end else begin
        res_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_address1 = res_digits_data_addr_2_reg_1391_pp3_iter3_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_address1 = res_digits_data_addr_reg_1335_pp2_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_address1 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_address1;
    end else begin
        res_digits_data_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        res_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_ce0 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce0;
    end else begin
        res_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_ce1 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_ce1;
    end else begin
        res_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter4 == 1'b1))) begin
        res_digits_data_d1 = add_ln301_reg_1413;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        res_digits_data_d1 = add_ln287_reg_1357;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_d1 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d1;
    end else begin
        res_digits_data_d1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_we0 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we0;
    end else begin
        res_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp3_iter4 == 1'b1) & (1'b0 == ap_block_pp3_stage0_11001) & (icmp_ln296_reg_1377_pp3_iter3_reg == 1'd0)) | ((ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln282_reg_1321_pp2_iter3_reg == 1'd0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        res_digits_data_we1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        res_digits_data_we1 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_we1;
    end else begin
        res_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_address0 = zext_ln257_reg_1167;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_address0 = grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_address0;
    end else begin
        rhs0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_592_rhs_digits_data_ce0;
    end else begin
        rhs0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_digits_data_we0 = 1'b1;
    end else begin
        rhs0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_address0 = zext_ln257_reg_1167;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_address0;
    end else begin
        rhs0_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs0_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_583_rhs0_tmp_digits_data_ce0;
    end else begin
        rhs0_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        rhs0_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs0_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_address0 = zext_ln258_2_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_address0 = grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_address0;
    end else begin
        rhs1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_603_rhs_digits_data_ce0;
    end else begin
        rhs1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_digits_data_we0 = 1'b1;
    end else begin
        rhs1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_address0 = zext_ln258_2_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_address0 = grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_address0;
    end else begin
        rhs1_tmp_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rhs1_tmp_digits_data_ce0 = grp_karastuba_mul_templa_1_fu_583_rhs1_tmp_digits_data_ce0;
    end else begin
        rhs1_tmp_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        rhs1_tmp_digits_data_we0 = 1'b1;
    end else begin
        rhs1_tmp_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        rhs_digits_data_address0 = zext_ln299_2_fu_1017_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        rhs_digits_data_address0 = zext_ln258_fu_709_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        rhs_digits_data_address0 = zext_ln257_fu_686_p1;
    end else begin
        rhs_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state6) | ((ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0) & (1'b0 == ap_block_pp3_stage0_11001)))) begin
        rhs_digits_data_ce0 = 1'b1;
    end else begin
        rhs_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_address0 = zext_ln58_fu_736_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z0_digits_data_address0 = grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_address0 = grp_karastuba_mul_templa_6_fu_592_res_digits_data_address0;
    end else begin
        z0_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z0_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z0_digits_data_ce0 = grp_CAT_I_I_I_O_1_fu_614_x0_digits_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce0;
    end else begin
        z0_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_ce1 = grp_karastuba_mul_templa_6_fu_592_res_digits_data_ce1;
    end else begin
        z0_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_we0 = grp_karastuba_mul_templa_6_fu_592_res_digits_data_we0;
    end else begin
        z0_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z0_digits_data_we1 = grp_karastuba_mul_templa_6_fu_592_res_digits_data_we1;
    end else begin
        z0_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_address0 = zext_ln80_reg_1271_pp1_iter3_reg;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z1_digits_data_address0 = grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_address0;
    end else begin
        z1_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        z1_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z1_digits_data_ce0 = grp_CAT_I_I_I_O_1_fu_614_x1_digits_data_ce0;
    end else begin
        z1_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (exitcond_i_reg_1262_pp1_iter3_reg == 1'd0))) begin
        z1_digits_data_we0 = 1'b1;
    end else begin
        z1_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_address0 = zext_ln58_fu_736_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z2_digits_data_address0 = grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_address0 = grp_karastuba_mul_templa_6_fu_603_res_digits_data_address0;
    end else begin
        z2_digits_data_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        z2_digits_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        z2_digits_data_ce0 = grp_CAT_I_I_I_O_1_fu_614_x2_digits_data_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_ce0 = grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce0;
    end else begin
        z2_digits_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_ce1 = grp_karastuba_mul_templa_6_fu_603_res_digits_data_ce1;
    end else begin
        z2_digits_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_we0 = grp_karastuba_mul_templa_6_fu_603_res_digits_data_we0;
    end else begin
        z2_digits_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        z2_digits_data_we1 = grp_karastuba_mul_templa_6_fu_603_res_digits_data_we1;
    end else begin
        z2_digits_data_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln255_fu_628_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln256_fu_645_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln257_fu_674_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln258_fu_691_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b0 == ap_block_state10_on_subcall_done) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_724_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln53_fu_724_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_821_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond_i_fu_821_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state23) & (icmp_ln278_fu_912_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((grp_CAT_I_I_I_O_1_fu_614_ap_done == 1'b1) & (icmp_ln278_fu_912_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_917_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln282_fu_917_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state29 : begin
            if (((1'b1 == ap_CS_fsm_state29) & (icmp_ln292_fu_1000_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1005_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else if ((((1'b0 == ap_block_pp3_stage0_subdone) & (ap_enable_reg_pp3_iter3 == 1'b0) & (ap_enable_reg_pp3_iter4 == 1'b1)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (icmp_ln296_fu_1005_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1) & (ap_enable_reg_pp3_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add2_tmp_bits_fu_811_p2 = (zext_ln63_fu_791_p1 + zext_ln63_8_fu_807_p1);

assign add_ln286_fu_952_p2 = (zext_ln286_fu_945_p1 + zext_ln285_fu_948_p1);

assign add_ln287_2_fu_975_p2 = (reg_624_pp2_iter2_reg + zext_ln285_3_fu_962_p1);

assign add_ln287_fu_981_p2 = (add_ln287_2_fu_975_p2 + lhs_digits_data_load_4_reg_1346_pp2_iter2_reg);

assign add_ln300_fu_1040_p2 = (zext_ln300_fu_1033_p1 + zext_ln299_fu_1036_p1);

assign add_ln301_2_fu_1063_p2 = (reg_624_pp3_iter2_reg + zext_ln299_3_fu_1050_p1);

assign add_ln301_fu_1069_p2 = (add_ln301_2_fu_1063_p2 + rhs_digits_data_load_4_reg_1402_pp3_iter2_reg);

assign add_ln304_fu_1088_p2 = (zext_ln292_reg_1367 + zext_ln304_fu_1084_p1);

assign add_ln306_fu_1109_p2 = (zext_ln306_fu_1093_p1 + mul_ln306_fu_1103_p2);

assign add_ln59_fu_748_p2 = (zext_ln59_fu_742_p1 + zext_ln58_5_fu_745_p1);

assign add_ln60_3_fu_771_p2 = (z2_digits_data_load_reg_1236_pp0_iter2_reg + zext_ln58_6_fu_758_p1);

assign add_ln60_fu_776_p2 = (add_ln60_3_fu_771_p2 + z0_digits_data_load_reg_1230_pp0_iter2_reg);

assign add_ln63_fu_801_p2 = (zext_ln63_5_fu_798_p1 + zext_ln63_4_fu_795_p1);

assign add_ln87_fu_883_p2 = (trunc_ln82_fu_867_p1 + select_ln82_3_fu_859_p3);

assign add_ln95_fu_897_p2 = (empty_41_fu_889_p3 + zext_ln266_reg_1201);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_on_subcall_done = ((grp_karastuba_mul_templa_1_fu_583_ap_done == 1'b0) | (grp_karastuba_mul_templa_6_fu_603_ap_done == 1'b0) | (grp_karastuba_mul_templa_6_fu_592_ap_done == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp3_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp3_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp3_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign empty_41_fu_889_p3 = ((needDown_0_i_reg_471[0:0] === 1'b1) ? 5'd31 : 5'd0);

assign exitcond_i_fu_821_p2 = ((i_0_i1_reg_483 == 6'd32) ? 1'b1 : 1'b0);

assign grp_CAT_I_I_I_O_1_fu_614_ap_start = grp_CAT_I_I_I_O_1_fu_614_ap_start_reg;

assign grp_karastuba_mul_templa_1_fu_583_ap_start = grp_karastuba_mul_templa_1_fu_583_ap_start_reg;

assign grp_karastuba_mul_templa_6_fu_592_ap_start = grp_karastuba_mul_templa_6_fu_592_ap_start_reg;

assign grp_karastuba_mul_templa_6_fu_603_ap_start = grp_karastuba_mul_templa_6_fu_603_ap_start_reg;

assign i_14_fu_651_p2 = (i1_0_reg_413 + 5'd1);

assign i_15_fu_680_p2 = (i2_0_reg_425 + 5'd1);

assign i_16_fu_697_p2 = (i3_0_reg_436 + 5'd1);

assign i_17_fu_730_p2 = (i_0_i_reg_460 + 6'd1);

assign i_18_fu_827_p2 = (i_0_i1_reg_483 + 6'd1);

assign i_19_fu_923_p2 = (i4_0_reg_494 + 6'd1);

assign i_20_fu_1011_p2 = (i7_0_reg_552 + 6'd1);

assign i_fu_634_p2 = (i_0_reg_402 + 5'd1);

assign icmp_ln255_fu_628_p2 = ((i_0_reg_402 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln256_fu_645_p2 = ((i1_0_reg_413 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln257_fu_674_p2 = ((i2_0_reg_425 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln258_fu_691_p2 = ((i3_0_reg_436 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln278_fu_912_p2 = ((rhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln282_fu_917_p2 = ((i4_0_reg_494 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln292_fu_1000_p2 = ((lhs_tmp_bits_read == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln296_fu_1005_p2 = ((i7_0_reg_552 == 6'd32) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_724_p2 = ((i_0_i_reg_460 == 6'd32) ? 1'b1 : 1'b0);

assign j_5_fu_1027_p2 = (j8_0_reg_563 + 7'd1);

assign j_fu_939_p2 = (j_0_reg_517 + 7'd1);

assign mul_ln306_fu_1103_p0 = mul_ln306_fu_1103_p00;

assign mul_ln306_fu_1103_p00 = rhs_tmp_bits_read;

assign mul_ln306_fu_1103_p1 = mul_ln306_fu_1103_p10;

assign mul_ln306_fu_1103_p10 = lhs_tmp_bits_read;

assign mul_ln306_fu_1103_p2 = (mul_ln306_fu_1103_p0 * mul_ln306_fu_1103_p1);

assign res_digits_data_d0 = grp_CAT_I_I_I_O_1_fu_614_w_digits_data_d0;

assign select_ln82_3_fu_859_p3 = ((ap_phi_mux_needDown_0_i_phi_fu_475_p4[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln82_fu_851_p3 = ((ap_phi_mux_needDown_0_i_phi_fu_475_p4[0:0] === 1'b1) ? 33'd8589934591 : 33'd0);

assign sext_ln95_fu_902_p1 = $signed(add_ln95_fu_897_p2);

assign tmp_15_fu_765_p2 = (zext_ln59_3_fu_762_p1 + zext_ln53_fu_754_p1);

assign tmp_16_fu_845_p2 = (zext_ln80_2_fu_839_p1 - zext_ln81_fu_842_p1);

assign tmp_17_fu_870_p2 = (select_ln82_fu_851_p3 + tmp_16_reg_1296);

assign tmp_19_fu_1057_p2 = (zext_ln300_3_fu_1054_p1 + zext_ln296_fu_1046_p1);

assign tmp_fu_969_p2 = (zext_ln286_3_fu_966_p1 + zext_ln282_fu_958_p1);

assign trunc_ln82_fu_867_p1 = tmp_16_reg_1296[31:0];

assign xor_ln256_fu_657_p2 = (i1_0_reg_413 ^ 5'd16);

assign xor_ln258_fu_703_p2 = (i3_0_reg_436 ^ 5'd16);

assign z1_tmp_bits_fu_906_p2 = ($signed(sext_ln95_fu_902_p1) - $signed(zext_ln63_9_reg_1257));

assign zext_ln255_fu_640_p1 = i_0_reg_402;

assign zext_ln256_2_fu_668_p1 = i1_0_reg_413;

assign zext_ln256_fu_663_p1 = xor_ln256_fu_657_p2;

assign zext_ln257_fu_686_p1 = i2_0_reg_425;

assign zext_ln258_2_fu_714_p1 = i3_0_reg_436;

assign zext_ln258_fu_709_p1 = xor_ln258_fu_703_p2;

assign zext_ln266_fu_720_p1 = grp_karastuba_mul_templa_1_fu_583_ap_return;

assign zext_ln282_fu_958_p1 = ap_phi_mux_tmp_0_phi_fu_509_p4;

assign zext_ln285_2_fu_929_p1 = i4_0_reg_494;

assign zext_ln285_3_fu_962_p1 = ap_phi_mux_tmp_0_phi_fu_509_p4;

assign zext_ln285_fu_948_p1 = reg_624;

assign zext_ln286_2_fu_934_p1 = j_0_reg_517;

assign zext_ln286_3_fu_966_p1 = add_ln286_reg_1352;

assign zext_ln286_fu_945_p1 = lhs_digits_data_load_4_reg_1346;

assign zext_ln292_fu_996_p1 = ap_phi_mux_res_tmp_bits_0_phi_fu_532_p4;

assign zext_ln296_fu_1046_p1 = ap_phi_mux_tmp6_0_phi_fu_544_p4;

assign zext_ln299_2_fu_1017_p1 = i7_0_reg_552;

assign zext_ln299_3_fu_1050_p1 = ap_phi_mux_tmp6_0_phi_fu_544_p4;

assign zext_ln299_fu_1036_p1 = reg_624;

assign zext_ln300_2_fu_1022_p1 = j8_0_reg_563;

assign zext_ln300_3_fu_1054_p1 = add_ln300_reg_1408;

assign zext_ln300_fu_1033_p1 = rhs_digits_data_load_4_reg_1402;

assign zext_ln304_fu_1084_p1 = tmp6_0_reg_540;

assign zext_ln306_fu_1093_p1 = res_tmp_bits_1_reg_574;

assign zext_ln53_fu_754_p1 = ap_phi_mux_tmp_0_i_phi_fu_452_p4;

assign zext_ln58_5_fu_745_p1 = z2_digits_data_load_reg_1236;

assign zext_ln58_6_fu_758_p1 = ap_phi_mux_tmp_0_i_phi_fu_452_p4;

assign zext_ln58_fu_736_p1 = i_0_i_reg_460;

assign zext_ln59_3_fu_762_p1 = add_ln59_reg_1242;

assign zext_ln59_fu_742_p1 = z0_digits_data_load_reg_1230;

assign zext_ln63_4_fu_795_p1 = z0_tmp_bits_reg_1191;

assign zext_ln63_5_fu_798_p1 = z2_tmp_bits_reg_1196;

assign zext_ln63_8_fu_807_p1 = add_ln63_fu_801_p2;

assign zext_ln63_9_fu_817_p1 = add2_tmp_bits_fu_811_p2;

assign zext_ln63_fu_791_p1 = tmp_0_i_reg_448;

assign zext_ln80_2_fu_839_p1 = cross_mul_digits_dat_6_reg_1286;

assign zext_ln80_fu_833_p1 = i_0_i1_reg_483;

assign zext_ln81_fu_842_p1 = add2_digits_data_loa_reg_1291;

always @ (posedge ap_clk) begin
    zext_ln255_reg_1135[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln257_reg_1167[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    zext_ln266_reg_1201[4] <= 1'b0;
    zext_ln58_reg_1215[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1215_pp0_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1215_pp0_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln58_reg_1215_pp0_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln63_9_reg_1257[6] <= 1'b0;
    zext_ln80_reg_1271[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1271_pp1_iter1_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1271_pp1_iter2_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_1271_pp1_iter3_reg[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    zext_ln292_reg_1367[2] <= 1'b0;
end

endmodule //karastuba_mul_templa_5
